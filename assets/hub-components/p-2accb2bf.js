class t{constructor(){this.resizeObserver=new ResizeObserver(this.onResize.bind(this)),this.handlers=new WeakMap}static create(){return t.instance||(t.instance=new t),t.instance}static addHandler(t,s){this.create(),this.instance.addHandler(t,s)}static removeHandler(t,s){this.instance&&this.instance.removeHandler(t,s)}static unobserve(t){this.instance&&this.instance.unobserve(t)}addHandler(t,s){this.handlers.has(t)||(this.handlers.set(t,[]),this.resizeObserver.observe(t));const i=this.handlers.get(t);i.includes(s)||i.push(s)}removeHandler(t,s){if(this.handlers.has(t)){const i=this.handlers.get(t),e=i.indexOf(s),h=i.filter(((t,s)=>s!==e));h.length?this.handlers.set(t,h):(this.handlers.delete(t),this.resizeObserver.unobserve(t))}}unobserve(t){this.handlers.has(t)&&(this.handlers.delete(t),this.resizeObserver.unobserve(t))}onResize(t){requestAnimationFrame((()=>{t.forEach((t=>{var s;(null!==(s=this.handlers.get(t.target))&&void 0!==s?s:[]).forEach((t=>t()))}))}))}}export{t as R}