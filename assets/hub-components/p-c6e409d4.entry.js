import{r as t,h as e,H as s,a as i}from"./p-d4ba4c14.js";import{D as r}from"./p-3bf8d293.js";import{C as o}from"./p-c8861654.js";import{b as a,C as h,g as n}from"./p-3b563ebe.js";import{i as c}from"./p-be5c5009.js";const d=class{constructor(e){t(this,e),this.context=void 0,this.telemetryContext={},this.type=void 0,this.reportTitle=void 0,this.titleTooltip=void 0,this.subtitle=void 0,this.trailingText=void 0,this.hostname=void 0,this.contentId=void 0,this.telemetryEvent=void 0,this.dimensionFilters=[],this.series=[],this.dataTransforms=[],this.category=void 0,this.startDate=void 0,this.endDate=void 0,this.orderBy=void 0,this.limit=void 0,this.data=[],this.aggregateData=[],this.error=void 0,this.isLoading=!0}onRequestParamsChange(){this.isLoading=!0,this.data=[],this.aggregateData=[],this.getReportData()}async componentWillLoad(){this.intl=await c.loadIntlForComponent(this.element),this.getReportData()}get dataTransformOptions(){return{seriesTransforms:this.seriesTransforms,dataTransforms:this.dataTransforms,requestParams:this.requestParams}}get isCustomEvent(){return this.telemetryEvent&&"string"!=typeof this.telemetryEvent}get seriesTransforms(){const t={};return this.series.forEach((e=>{"string"!=typeof e&&(t[e.name.toLowerCase()]=Object.assign(Object.assign({},e.title&&{title:e.title}),e.value&&{value:e.value}))})),t}get _dimensionFilters(){let t=[],e=[];this.contentId&&this.hostname&&(t=[{name:"contentId",any:[this.contentId]}]),this.isCustomEvent&&(e=a(this.telemetryEvent));const s=[...e,...t,...this.dimensionFilters];return s.length?s:void 0}get scope(){return this.hostname?{hostname:this.hostname}:this.contentId?{contentId:this.contentId}:void 0}get requestParams(){const t=this.getDimensions(this.telemetryEvent),e=this.getMetric(this.telemetryEvent);return Object.assign({scope:this.scope,startDate:this.startDate,endDate:this.endDate,timeDimension:this.category,orderBy:this.orderBy,limit:this.limit,dimensionFilters:this._dimensionFilters,emptyRows:!0,metrics:[e]},t.length&&{dimensions:t})}get requestOptions(){var t;return Object.assign(Object.assign({},this.context&&(null===(t=this.context)||void 0===t?void 0:t.hubRequestOptions)),this.telemetryContext)}getMetric(t){return!this.isCustomEvent&&{[o.sessions]:h.sessions,[o.referrers]:h["page-views"],[o["page-views"]]:h["page-views"],[o["session-activity"]]:h["session-activity"]}[t]||h.custom}getDimensions(t){const e={[o.referrers]:"referrer"},s=this.series.map((t=>"string"==typeof t?t:t.name)),i=!this.isCustomEvent&&e[t];return i?[i,...s]:s}get shouldAggregateData(){return!!this.category&&"metric"===this.type}async getReportData(){var t;const{endDate:e,metrics:s,scope:i,startDate:r}=this.requestParams;if(this.context&&i&&r&&e&&s.length){try{const{requestParams:e,requestOptions:s}=this,i=await Promise.all([n(e,s),this.shouldAggregateData?n(Object.assign(Object.assign({},e),{orderBy:void 0,timeDimension:void 0}),s):void 0]);this.data=i[0].data,this.aggregateData=null===(t=i[1])||void 0===t?void 0:t.data,this.error=void 0}catch(t){this.error=t.toString()}this.isLoading=!1}}get childComponentProps(){var t;const{aggregateData:e,category:s,data:i,error:r,isLoading:o,dataTransformOptions:a,reportTitle:n,subtitle:c,titleTooltip:d,trailingText:m,type:l}=this,g=null===(t=Object.entries(h).find((([t,e])=>e===this.getMetric(this.telemetryEvent))))||void 0===t?void 0:t[0],u=Object.assign(Object.assign({category:s,data:i,dataLabel:this.intl.t(g),error:r,isLoading:o,options:a,reportTitle:n,subtitle:c},s&&{timeLabel:this.intl.t(s)}),{titleTooltip:d,trailingText:m,type:l});return this.shouldAggregateData&&(u.data=e,u.binnedData=i),u}get isChart(){return["bar","line"].includes(this.type)}render(){return e(s,{"data-element":"telemetry-report"},e(this.isChart?"arcgis-telemetry-chart":`arcgis-telemetry-${this.type}`,Object.assign({},this.childComponentProps)))}static get assetsDirs(){return["locales"]}get element(){return i(this)}static get watchers(){return{context:["onRequestParamsChange"],startDate:["onRequestParamsChange"],endDate:["onRequestParamsChange"],telemetryEvent:["onRequestParamsChange"]}}};(function(t,e,s,i){var r,o=arguments.length,a=o<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,s,i);else for(var h=t.length-1;h>=0;h--)(r=t[h])&&(a=(o<3?r(a):o>3?r(e,s,a):r(e,s))||a);o>3&&a&&Object.defineProperty(e,s,a)})([r({timeout:10})],d.prototype,"getReportData",null),d.style=":host{display:block}arcgis-telemetry-chart{height:100%}";export{d as arcgis_telemetry_report}