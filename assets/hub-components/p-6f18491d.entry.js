import{r as t,c as e,h as s,H as i,a as o}from"./p-d4ba4c14.js";import{b as a}from"./p-fd260f2d.js";import{i as c}from"./p-be5c5009.js";import{d as h}from"./p-8cf4bd83.js";import{watch as r}from"@arcgis/core/core/watchUtils.js";import n from"@arcgis/core/widgets/Home/HomeViewModel.js";import{l as m}from"./p-e16232c9.js";import"./p-dfe5a97d.js";import"./p-4c02fe5e.js";import"@arcgis/core/kernel.js";const d=class{constructor(s){t(this,s),this.hubTelemetry=e(this,"hubTelemetry",7),this.handles=[],this.view=void 0,this.scale="m",this.disabled=void 0,a(this,"zoomToInitialExtent")}async componentWillLoad(){const{el:t}=this;this.intl=await c.loadIntlForComponent(t);const[e]=await Promise.all([c.loadIntlForComponent(t),this.connectViewModel()]);this.intl=e,this.connectWatch(),m()}connectedCallback(){this.connectWatch()}disconnectedCallback(){this.removeWatch()}handleViewChange(t,e){t&&t!==e&&(this.removeWatch(),this.connectViewModel().then((()=>{this.connectWatch()})))}connectWatch(){const{view:t,handles:e,homeViewModel:s}=this;t&&s&&e.push(r(s,"state",this.updateState))}removeWatch(){const{handles:t}=this;t.forEach((t=>{t.remove()})),this.handles=[]}async connectViewModel(){const{view:t,homeViewModel:e}=this;if(t&&!e){await t.when(),this.homeViewModel=new n({view:t});const{state:e}=this.homeViewModel;this.updateState(e)}}updateState(t){this.disabled="disabled"===t||"going-home"===t}zoomToInitialExtent(){const{homeViewModel:t}=this;t&&(t.go(),this.hubTelemetry.emit(Object.assign(Object.assign({},h.dictionary.category.interaction.action.zoom.label.to),{details:"Home"})))}render(){const{scale:t,disabled:e}=this;return s(i,{"data-element":"map-widget-home"},s("arcgis-hub-map-widget-generic",{disabled:e,icon:"home",onClick:this.zoomToInitialExtent,scale:t,text:this.intl.t("home")}))}static get assetsDirs(){return["locales"]}get el(){return o(this)}static get watchers(){return{view:["handleViewChange"]}}};export{d as arcgis_hub_map_widget_home}