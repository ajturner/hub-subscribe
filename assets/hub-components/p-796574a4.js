const t=(n,r)=>r.split(".").reduce((function(r,o){const e=o.match(/\[(.*?)\]$/);if(e){const t=e[1],n=o.replace(e[0],"");if(parseInt(t,10)>-1){const o=parseInt(t,10);return Array.isArray(r[n])&&r[n][o]?r[n][o]:void 0}return function(t,n){const r=n.split("(");if(!r||2!==r.length)return;let o;const e=r[0],s=r[1].replace(")","").split(",").map((t=>t.trim()));switch(e){case"findBy":const n=s[0];let r;r=isNaN(parseFloat(s[1]))?s[1].replace(/'/g,""):parseFloat(s[1]),o=t.find((t=>t[n]===r));break;default:o=void 0}return o}(r[n],t)}return r&&void 0!==r[o]?null!==r[o]&&r[o].$use?t(n,r[o].$use):r[o]:void 0}),n);export{t as g}