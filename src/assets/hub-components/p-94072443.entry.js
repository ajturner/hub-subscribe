import{r as e,c as t,h as i,F as n,H as a,a as l}from"./p-d4ba4c14.js";import{i as s}from"./p-be5c5009.js";import{b as r}from"./p-fd260f2d.js";import{f as o}from"./p-4db6fd24.js";import{m as c}from"./p-1b73120f.js";import{g as h}from"./p-81a9bee2.js";import{c as d}from"./p-22777f47.js";import{g as p}from"./p-ea6de7f6.js";import{g as u}from"./p-9646abb2.js";import{u as b,c as f}from"./p-bded806b.js";import"./p-adee2925.js";import"./p-c94c130f.js";import"./p-992b9d10.js";import"./p-d763eacf.js";import"./p-377e1b5e.js";import"./p-637ea136.js";import"./p-dcdf7b57.js";import"./p-ad325ed1.js";import"./p-9e418183.js";import"./p-5b420841.js";import"./p-56b73d71.js";import"./p-3904125b.js";import"./p-3f64a9d9.js";import"./p-3363f483.js";import"./p-87582fe0.js";import"./p-859c5360.js";import"./p-f891d7bd.js";const m=e=>[{schemaVersion:1,title:e.t("channelsLabel"),scopes:{},collections:[{label:e.t("channelsLabel"),key:"channels",targetEntity:"channel",scope:{targetEntity:"channel",filters:[]},include:["groups"]}]}],C=e=>[{label:e.t("accessLabel"),key:"access",display:"multi-select",operation:"OR",options:[{label:e.t("optionPublicLabel"),key:"public",selected:!1,predicates:[{access:"public"}]},{label:e.t("optionOrganizationLabel"),key:"organization",selected:!1,predicates:[{access:"org"}]},{label:e.t("optionPrivateLabel"),key:"private",selected:!0,predicates:[{access:"private"}]}]}];const y=class{constructor(i){e(this,i),this.arcgisHubWorkspaceEntitySaved=t(this,"arcgisHubWorkspaceEntitySaved",7),this.entity=void 0,this.channel=void 0,this.channelGroups=void 0,this.galleryPickerOpen=!1,this.isLoading=!1,this.view="default",this.channelEditorId=null,this.footerSlotEl=null,this.hasChannelGalleryResults=!1,r(this,"handleNewChannelClicked","handleViewBackClicked","handleGalleryResultsChanged","handleChannelEditorSaved","handleChannelEditorError","handleChannelEditorSelected","handleBrowseButtonClicked","handleHubGalleryPickerClose","handleHubGalleryPickerSelectionUpdate","createOrUpdateSettings")}async componentWillLoad(){await this.loadTranslations(),this.loadDependencies()}get cardActionLinks(){const{channel:e,_context:t,intl:i}=this,n=[e?{action:"removeChannel",i18nKey:"remove",showLabel:!0}:{action:"selectChannel",i18nKey:"select",showLabel:!0},{action:"viewChannel",label:i.t("viewChannel"),showLabel:!0,buttonStyle:"transparent"}];return e&&d(e,t.currentUser)&&n.push({action:"editChannel",label:i.t("editChannel"),showLabel:!0,buttonStyle:"transparent"}),n}get _context(){return h()}get channelEditorFlowConfig(){const{view:e,intl:t,handleViewBackClicked:i}=this;let n;return"createChannel"===e?n={heading:t.t("headingChannelCreate"),action:i}:"editChannel"===e?n={heading:t.t("headingChannelEdit"),action:i}:"viewChannel"===e&&(n={heading:t.t("headingChannelView"),action:i}),n}async loadTranslations(){this.intl=await s.loadIntlForComponent(this.element)}loadDependencies(){return this.isLoading=!0,this.fetchDependencies().then((e=>{Object.assign(this,e,{isLoading:!1})}))}async fetchDependencies(){var e;const{entity:t,_context:i}=this;let n,a;return(null===(e=t.discussionSettings.allowedChannelIds)||void 0===e?void 0:e.length)?({channel:n,channelGroups:a}=await o({channelId:t.discussionSettings.allowedChannelIds[0]},i.hubRequestOptions)):(n=null,a=null),{channel:n,channelGroups:a}}handleViewBackClicked(){this.view="default",this.channelEditorId=null}handleGalleryResultsChanged(e){this.hasChannelGalleryResults=e.detail.length>0}handleHubGalleryPickerClose(){this.galleryPickerOpen=!1}async handleHubGalleryPickerSelectionUpdate(e){var t,i;const n=null===(i=null===(t=e.detail)||void 0===t?void 0:t.channel)||void 0===i?void 0:i[0];n&&(await this.loadChannelDetails({channelId:n}),await this.createOrUpdateSettings())}handleBrowseButtonClicked(){this.galleryPickerOpen=!0}handleEditOrViewChannel(e,t){this.channelEditorId=e.id,this.view=t}handleHubCardAction(e){const{action:t,model:i}=e.detail;"selectChannel"===t?this.handleSelectChannelClicked(i):"removeChannel"===t?this.handleRemoveChannelClicked():["editChannel","viewChannel"].includes(t)?this.handleEditOrViewChannel(i,t):"viewProfile"===t&&this.goToUserProfile(e.detail.model.id)}goToUserProfile(e){this.goToUrl(p(e,this._context.hubRequestOptions))}goToUrl(e){window.location.href=e}async handleChannelEditorSaved(e){const{channel:t,_context:i}=this,{channel:n,action:a}=e.detail,l=!t&&"create"===a,s=(null==t?void 0:t.id)===n.id;l&&e.preventDefault(),(l||s)&&await this.loadChannelDetails({channel:n}),l?(this.view="editChannel",await this.createOrUpdateSettings()):s&&!d(n,i.currentUser)&&(this.view="viewChannel")}handleChannelEditorError(){this.workspacePaneRef&&this.workspacePaneRef.scrollTo({top:0})}async loadChannelDetails(e){const t=await o(e,this._context.hubRequestOptions);Object.assign(this,t)}async handleChannelEditorSelected(e){await this.loadChannelDetails({channel:e.detail}),await this.createOrUpdateSettings(),this.view="default"}async handleSelectChannelClicked(e){await this.loadChannelDetails({channelId:e.id}),await this.createOrUpdateSettings()}async handleRemoveChannelClicked(){this.channel=null,this.channelGroups=null,await this.createOrUpdateSettings()}async createOrUpdateSettings(){var e,t;let i;try{await this.workspacePaneRef.removeAlert();const n=u("discussion"),a=Object.assign(Object.assign({},n.settings),{discussions:Object.assign(Object.assign({},n.settings.discussions),{allowedChannelIds:(null===(e=this.channel)||void 0===e?void 0:e.id)?[this.channel.id]:null})}),l=this.entity.entitySettingsId?await b(Object.assign({id:this.entity.id,data:{settings:a}},this._context.hubRequestOptions)):await f(Object.assign({data:{id:this.entity.id,type:n.type,settings:a}},this._context.hubRequestOptions));this.entity=Object.assign(Object.assign({},this.entity),{entitySettingsId:l.id,discussionSettings:l.settings.discussions});const s=(null===(t=this.channel)||void 0===t?void 0:t.id)?{title:this.intl.t("alerts.set.title")}:{title:this.intl.t("alerts.removed.title"),message:this.intl.t("alerts.removed.message")};i=Object.assign({kind:"success"},s)}catch(e){i={kind:"danger",title:this.intl.t("alerts.error.title")}}finally{await this.workspacePaneRef.triggerAlert(Object.assign(Object.assign({},i),{label:this.intl.t("alerts.label")})),this.arcgisHubWorkspaceEntitySaved.emit({entity:this.entity,isSuccess:"success"===i.kind})}}handleNewChannelClicked(){this.view="createChannel"}renderGalleryPicker(){const{intl:e,_context:t,galleryPickerOpen:n,handleHubGalleryPickerClose:a,handleHubGalleryPickerSelectionUpdate:l}=this;return i("arcgis-hub-gallery-picker",{catalogs:m(this.intl),context:t,facets:C(this.intl),key:"channel-picker",limit:1,modalTitle:e.t("galleryPickerTitle"),onArcgisHubGalleryPickerClose:a,onArcgisHubGalleryPickerSelectionUpdate:l,open:n,showSearch:!0,showThumbnail:!0})}renderChannelEditor(){const{entity:e,view:t,channelEditorId:n,footerSlotEl:a,channelEditorFlowConfig:l}=this;if(l)return i("calcite-flow-item",{heading:l.heading,onCalciteFlowItemBack:l.action},i("arcgis-hub-channel-editor",{channelId:n,disabled:"viewChannel"===t,footerSlotRef:a,namePrefix:e.name,onArcgisHubChannelEditorError:this.handleChannelEditorError,onArcgisHubChannelEditorSaved:this.handleChannelEditorSaved,onArcgisHubChannelEditorSelected:this.handleChannelEditorSelected}))}renderDefault(){return i("calcite-flow-item",null,i("h2",{slot:"title"},this.intl.t("title")),this.channel?this.renderChannelCard():this.renderChannelGallery())}renderChannelCard(){const{channel:e,channelGroups:t}=this;return i("div",null,i("h3",null,this.intl.t("channelTitle")),i("arcgis-hub-channel-card",{actionLinks:this.cardActionLinks,channelDetails:{channelId:e.id,channel:e,channelGroups:t,channelError:null}}))}renderChannelGallery(){return i("div",null,i("h3",null,this.intl.t("addChannelsTitle")),i("arcgis-hub-gallery",{cardActionLinks:this.cardActionLinks,context:this._context,include:"groups",layout:"list",limit:4,onArcgisHubGalleryResultsChange:this.handleGalleryResultsChanged,query:{targetEntity:"channel",filters:[{predicates:[]}]},showEmptyState:!0,sortField:"created",sortOrder:"desc"},i("calcite-button",{appearance:"outline-fill",onClick:this.handleNewChannelClicked,round:!0,slot:"no-results-action"},this.intl.t("buttons.new"))),this.hasChannelGalleryResults&&i("div",{class:"entity-discussion__actions"},i("calcite-button",{onClick:this.handleBrowseButtonClicked,round:!0},this.intl.t("buttons.browse")),i("calcite-button",{appearance:"outline-fill",onClick:this.handleNewChannelClicked,round:!0},this.intl.t("buttons.new"))),this.renderGalleryPicker())}renderFooter(){if(["createChannel","editChannel"].includes(this.view))return i("div",{ref:e=>{this.footerSlotEl=e},slot:"footer"})}renderFlow(){return i(n,null,i("h2",{slot:"title"},this.intl.t("title")),i("calcite-flow",null,this.renderDefault(),this.renderChannelEditor()),this.renderFooter())}renderSkeleton(){return null}render(){return i(a,{"data-element":"entity-discussion"},i("arcgis-hub-workspace-pane",{ref:e=>{this.workspacePaneRef=e},stickyFooter:!0},this.isLoading?this.renderSkeleton():this.renderFlow()))}static get assetsDirs(){return["locales"]}get element(){return l(this)}};(function(e,t,i,n){var a,l=arguments.length,s=l<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,i,n);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(l<3?a(s):l>3?a(t,i,s):a(t,i))||s);l>3&&s&&Object.defineProperty(t,i,s)})([c({delay:300})],y.prototype,"fetchDependencies",null),y.style='arcgis-hub-workspace-pane{--arcgis-hub-workspace-pane-max-width:55rem}arcgis-hub-workspace-pane .entity-discussion__actions{margin-top:1rem;display:flex;gap:1.5rem}[slot="footer"]{display:flex;justify-content:flex-end}[slot="footer"]:empty{display:none}';export{y as arcgis_hub_entity_discussion_participation_pane}