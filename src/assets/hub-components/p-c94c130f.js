const t=new Map;function e(e,r={}){const{scope:o="default",getKey:n=((...[t])=>t),ttl:c=0}=r;if(!o||"string"!=typeof o)throw new TypeError("must provide a valid cache scope");if(c&&("number"!=typeof c||c<0))throw new TypeError("ttl must be a number greater than or equal to zero");if("function"!=typeof n)throw new TypeError("getKey must be a function");return function(...s){let a;try{const[t,...e]=[...s].reverse(),[r,...o]=Object.keys(t);if("bust"!==r||o.length)throw new Error("No cache arg provided");a=e.reverse()}catch(t){a=s}const{context:i=this}=r;let u=t.get(o);u||(u=new Map,t.set(o,u));const f=n.apply(i,a);if(!f||"string"!=typeof f)throw new Error("getKey must return a string");let p=s.length===a.length?u.get(f):void 0;const w=Date.now();return(!p||c&&w>p.created+c)&&(p={created:w,result:e.apply(i,a)},u.set(f,p)),p.result}}export{e as c}