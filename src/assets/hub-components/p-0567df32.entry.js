import{r as t,h as s,H as i,a as r}from"./p-d4ba4c14.js";import{M as e}from"./p-e3973185.js";import{m as p}from"./p-13d1d52c.js";import{b as o}from"./p-14a66e4a.js";import{S as a}from"./p-d9f314b6.js";import{i as m}from"./p-6dac87c8.js";import{i as c}from"./p-be5c5009.js";import{b as d}from"./p-fd260f2d.js";import{r as j}from"./p-5a39dd5a.js";import"./p-81dd3f52.js";import"./p-e65c0b02.js";import"./p-ac8be5fd.js";import"./p-85d6867e.js";import"./p-a0deb8c6.js";import"./p-dd26efbb.js";import"./p-d1b12a9c.js";import"./p-796574a4.js";import"./p-dcdf7b57.js";import"./p-6dcae6cd.js";import"./p-637ea136.js";import"./p-3f64a9d9.js";import"./p-377e1b5e.js";import"./p-2acb70a6.js";import"./p-6f931af6.js";import"./p-56b73d71.js";import"./p-3904125b.js";import"./p-b728aff4.js";import"./p-52612356.js";import"./p-af59e67b.js";import"./p-b295a5ae.js";import"./p-cea8413b.js";import"./p-d763eacf.js";import"./p-ad325ed1.js";import"./p-8e7f4c22.js";import"./p-69555c48.js";import"./p-8dbea197.js";import"./p-7202c430.js";import"./p-75d6da59.js";import"./p-90dc0f6f.js";import"./p-59fd2498.js";import"./p-16a95e5b.js";import"./p-e43616ff.js";import"./p-ca048216.js";import"./p-4a14259a.js";import"./p-235bb6ee.js";import"./p-783242bc.js";import"./p-903ef8af.js";import"./p-c836a9b6.js";import"./p-58cf73b6.js";import"./p-7b082f5d.js";import"./p-9646abb2.js";import"./p-bded806b.js";import"./p-87582fe0.js";import"./p-8ccaf06d.js";import"./p-9b205605.js";import"./p-c8e0e01f.js";import"./p-97274a47.js";import"./p-30a7cbb2.js";import"./p-10274eb9.js";import"./p-dafb2329.js";import"./p-992b9d10.js";import"./p-895b662f.js";import"./p-2d862ad3.js";import"./p-6d4e51c6.js";import"./p-1458dcfd.js";import"./p-31aebb8c.js";function h(t){try{return JSON.parse(o(t))}catch(t){console.error("could not parse prop JSON",t)}}const n=new Error("Timeout"),b=class{constructor(s){t(this,s),this.context=void 0,this.metric=void 0,this.encodedMetric=void 0,this.cardConfig=void 0,this.encodedCardConfig=void 0,this.resolvedMetric=void 0,this.errorMessage=void 0,this.isLoading=!1,d(this,"beginResolveMetric")}async resolveMetric(){var t;const s=this.encodedMetric?h(this.encodedMetric):this.metric;this.verifyCompleteSource(s)&&this.context?this.resolvedMetric=await this.resolveMetricWithTimeout(s,this.context,null===(t=this._cardConfig)||void 0===t?void 0:t.serverTimeout):(console.info("Incomplete metric source."),this.resolvedMetric=void 0,this.isLoading=!1)}beginResolveMetric(){this.isLoading=!0,this.resolveMetric()}componentWillLoad(){this.beginResolveMetric(),this.intl=c.getIntlForComponent(this.element)}async resolveMetricWithTimeout(t,s,i){let r;try{r=i&&!isNaN(i)?await((t,s)=>{let i;const r=1e3*s;return Promise.race([t,new Promise(((t,s)=>i=setTimeout(s,r,n)))]).finally((()=>clearTimeout(i)))})(j(t,s),i):await j(t,s),this.errorMessage=void 0}catch(t){t==n?(this.errorMessage={premadeType:e.timeout},console.error("Timeout error")):(console.error("Error resolving metric: ",t),this.errorMessage={premadeType:e.generic})}return this.isLoading=!1,r}verifyCompleteSource(t){let s=!1;if(null==t?void 0:t.source){const{type:i}=t.source;"static-value"===i?s=this.verifyStaticQuery(t.source):"service-query"===i&&(s=this.verifyServiceQuery(t.source))}return s}verifyStaticQuery(t){const{value:s,type:i}=t;return!m(s)&&!m(i)}verifyServiceQuery(t){const{type:s,serviceUrl:i,layerId:r,field:e,statistic:p}=t;return e&&!m(s)&&!m(i)&&!m(r)&&!m(e)&&!m(p)}get cardComponent(){return{"stat-card":"arcgis-stat-card"}[this._cardConfig.displayType]||"stat-card"}get _cardConfig(){let t={metricId:"",displayType:"stat-card"};return this.cardConfig?t=this.cardConfig:this.encodedCardConfig&&(t=h(this.encodedCardConfig)),t}render(){const t=p(this.resolvedMetric,this._cardConfig,this.intl);return s(i,{"data-element":"metrics-card"},s(a,{context:{element:this.element,shareable:this._cardConfig.shareable,shareableOnHover:this._cardConfig.shareableOnHover,shareableByReference:this._cardConfig.shareableByReference,shareableByValue:this._cardConfig.shareableByValue},showShareUi:!0},s(this.cardComponent,Object.assign({errorMessage:this.errorMessage},t,{isLoading:this.isLoading}))))}static get assetsDirs(){return["locales"]}get element(){return r(this)}static get watchers(){return{metric:["beginResolveMetric"],encodedMetric:["beginResolveMetric"],context:["beginResolveMetric"]}}};b.style=":host{display:block}";export{b as arcgis_hub_metric_card}