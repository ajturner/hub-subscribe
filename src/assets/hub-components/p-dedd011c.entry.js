import{r as t,c as e,h as i,H as s,a as o}from"./p-d4ba4c14.js";import{g as r,a,b as p,c as n,N as l}from"./p-81dd3f52.js";import{U as c}from"./p-13f8e63a.js";import{i as m}from"./p-be5c5009.js";import{b as d}from"./p-fd260f2d.js";import{i as h}from"./p-547e8db0.js";import{c as u}from"./p-e2d87f98.js";import{a as j}from"./p-31aebb8c.js";import"./p-e65c0b02.js";import"./p-ac8be5fd.js";import"./p-85d6867e.js";import"./p-a0deb8c6.js";import"./p-dd26efbb.js";import"./p-d1b12a9c.js";import"./p-796574a4.js";import"./p-dcdf7b57.js";import"./p-6dcae6cd.js";import"./p-637ea136.js";import"./p-3f64a9d9.js";import"./p-377e1b5e.js";import"./p-2acb70a6.js";import"./p-6f931af6.js";import"./p-56b73d71.js";import"./p-3904125b.js";import"./p-b728aff4.js";import"./p-52612356.js";import"./p-af59e67b.js";import"./p-b295a5ae.js";import"./p-cea8413b.js";import"./p-d763eacf.js";import"./p-ad325ed1.js";import"./p-8e7f4c22.js";import"./p-69555c48.js";import"./p-8dbea197.js";import"./p-7202c430.js";import"./p-75d6da59.js";import"./p-90dc0f6f.js";import"./p-59fd2498.js";import"./p-16a95e5b.js";import"./p-e43616ff.js";import"./p-ca048216.js";import"./p-4a14259a.js";import"./p-235bb6ee.js";import"./p-783242bc.js";import"./p-903ef8af.js";import"./p-c836a9b6.js";import"./p-58cf73b6.js";import"./p-7b082f5d.js";import"./p-9646abb2.js";import"./p-bded806b.js";import"./p-87582fe0.js";import"./p-8ccaf06d.js";import"./p-9b205605.js";import"./p-c8e0e01f.js";import"./p-97274a47.js";import"./p-30a7cbb2.js";import"./p-10274eb9.js";import"./p-dafb2329.js";import"./p-992b9d10.js";import"./p-895b662f.js";import"./p-62163eff.js";import"./p-742d0454.js";import"./p-89f8c546.js";import"./p-5955d0c4.js";import"./p-d27eec8d.js";import"./p-b3959606.js";import"./p-09f00a2a.js";import"./p-69965d84.js";import"./p-24698668.js";import"./p-52b2d57a.js";import"./p-5d9da1ee.js";import"./p-a2594b73.js";import"./p-6dac87c8.js";import"./p-2d862ad3.js";const f={condition:{schema:{properties:{itemId:{not:{const:[]}}}}},effect:c.SHOW},b={condition:{schema:{properties:{itemId:{not:{const:[]}},layerId:{not:{enum:[void 0,""]}}}}},effect:c.SHOW},g={condition:{schema:{properties:{itemId:{not:{const:[]}},layerId:{not:{enum:[void 0,""]}},field:{not:{enum:[void 0,""]}}}}},effect:c.SHOW},v={targetEntity:"item",key:"featureServices",label:"Feature Services",include:[],scope:{targetEntity:"item",filters:[{predicates:[{type:"Feature Service"},{typekeywords:{not:["FieldworkerView"]}},{typekeywords:{not:["SurveyService"]}}]}]}},y=["count","min","max","sum","avg","stddev","var"],S=["count","min","max"],x=["Count","Minimum","Maximum","Sum","Average","Standard Devitation","Variance"],E=["Count","Minimum","Maximum"],w=class{constructor(i){t(this,i),this.arcgisCompositeServiceQueryMetricFieldChange=e(this,"arcgisCompositeServiceQueryMetricFieldChange",7),this.values={},this.context=void 0,this.sourceLink=void 0,this.sourceTitle=void 0,this.layers=[],this.fields=[],this.serviceUrl="",this.aggregations={aggregationEnum:S,labelsEnum:E},this.currentValues={},this.loading=!1,d(this,"translationFunc","handleCompositeServiceQueryMetricFieldChange")}get uiSchemaOptions(){var t;return{catalogs:this.catalogs,facets:this.facets,layers:this.layers,fields:this.fields,aggregations:null===(t=this.aggregations)||void 0===t?void 0:t.labelsEnum}}get schemaOptions(){var t;return{layers:this.layers.map((t=>{var e;return null===(e=t.id)||void 0===e?void 0:e.toString()})),fields:this.fields.map((t=>t.name)),aggregations:null===(t=this.aggregations)||void 0===t?void 0:t.aggregationEnum}}get facets(){return[{label:this.intl.t("dynamicStat.facets.sharing"),key:"access",field:"access",display:"multi-select",operation:"OR"}]}get catalogs(){var t;let e=[];if(this.context){const i=["myContent","favorites","organization"];(null===(t=this.context)||void 0===t?void 0:t.isPortal)||i.push("world"),e=i.map((t=>{var e;const i={user:null===(e=this.context)||void 0===e?void 0:e.currentUser,collectionNames:["dataset"]},s=this.context&&j("dynamicStat",t,"item",i);return s&&(s.collections=[v]),h(this.intl,s)}))}return e}async componentWillLoad(){this.intl=await m.loadIntlForComponent(this.element),this.values.itemId&&(this.currentValues=this.values),this.loading=!0,this.updateDynamicValues(this.values,this.context)}updateUiSchema(){this._uiSchema=function(t){const{catalogs:e=[],facets:i=[],layers:s,fields:o,aggregations:a}=t;return{type:"Layout",elements:[{scope:"/properties/itemId",type:"Control",options:{control:"hub-field-input-gallery-picker",targetEntity:"item",catalogs:e,facets:i,styles:{"--twShadowNew":"none"}}},{labelKey:"layer",scope:"/properties/layerId",type:"Control",rule:f,options:{control:"hub-field-input-tile-select",labels:s.map((t=>t.name)),descriptions:s.map((t=>({esriGeometryPoint:"Point",esriGeometryPolyline:"Polyline",esriGeometryPolygon:"Polygon",esriGeometryEnvelope:"Extent"}[t.geometryType]))),styles:{"--maxHeight":"20vh"}}},{labelKey:"field.label",scope:"/properties/field",type:"Control",rule:b,options:{control:"hub-field-input-combobox",selectionMode:"single",items:o.map((t=>({icon:r(t.type),label:t.name,value:t.name}))),styles:{"--maxHeight":"20vh"}}},{labelKey:"statistic.label",scope:"/properties/statistic",type:"Control",rule:g,options:{control:"hub-field-input-select",labels:a}},{type:"Section",scope:"/properties/allowExpressionSet",labelKey:"expression.label",rule:g,options:{section:"subblock",toggleDisplay:"switch"},elements:[{scope:"/properties/expressionSet",rule:g,type:"Control",options:{fields:o,control:"hub-composite-input-expression-set"}}]}]}}(this.uiSchemaOptions)}updateSchema(){this._schema=(t=>{const{layers:e,fields:i,aggregations:s}=t,o=(t=[],e=!1)=>(e&&t.push(""),t.length?{enum:t}:{});return{required:[],type:"object",properties:{itemId:{type:"array",maxItems:1},layerId:Object.assign({type:"string"},o(e)),field:Object.assign({type:"string"},o(i,!0)),statistic:{type:"string",enum:s},allowExpressionSet:{type:"boolean",default:!1},expressionSet:{type:"array"}}}})(this.schemaOptions)}async updateDynamicValues(t,e){var i,s,o;let r,l,c,m=[],d=[];if(null===(i=t.itemId)||void 0===i?void 0:i.length){const i=await a(t.itemId[0],e);r=null==i?void 0:i.url,l=null===(s=null==i?void 0:i.links)||void 0===s?void 0:s.siteRelative,c=null==i?void 0:i.name;const o=await p(r,e);if((null==o?void 0:o.fields)?(m=[o],r=r.substring(0,r.lastIndexOf("/"))):(null==o?void 0:o.layers)||(null==o?void 0:o.tables)?m=[...null==o?void 0:o.layers,...null==o?void 0:o.tables]:(console.error("This service does not have layers and is not a feature layer itself."),m=[]),r!==this.serviceUrl&&""!==this.serviceUrl&&(t.layerId=void 0,t.field=void 0),t.layerId){const i=t.layerId;d=await n(r,e,i)}}const{aggregationEnum:h,labelsEnum:u}=this.getAggregationsFromField(t);this.serviceUrl=r,this.layers=m||[],this.fields=d||[],this.sourceLink=l,this.sourceTitle=c,h===(null===(o=this.aggregations)||void 0===o?void 0:o.aggregationEnum)||h.includes(t.statistic)||(t.statistic="count"),this.aggregations={aggregationEnum:h,labelsEnum:u},this.updateSchema(),this.updateUiSchema(),this.loading=!1}getAggregationsFromField(t){var e;let i=null==t?void 0:t.fieldType;return t.fieldType||(i=null===(e=this.fields.find((e=>e.name===(null==t?void 0:t.field))))||void 0===e?void 0:e.type),l.includes(i)?{aggregationEnum:y,labelsEnum:x}:{aggregationEnum:S,labelsEnum:E}}async handleCompositeServiceQueryMetricFieldChange(t){t.stopImmediatePropagation(),t.stopPropagation();const{valid:e,values:i}=t.detail;await this.updateDynamicValues(i,this.context),this.updateSchema(),this.updateUiSchema(),this.currentValues=Object.assign(Object.assign(Object.assign({},this.currentValues),i),{serviceUrl:this.serviceUrl,sourceLink:u(this.sourceLink,i.layerId),sourceTitle:this.sourceTitle}),this.currentValues=Object.assign(Object.assign({},this.currentValues),i.field?{fieldType:this.fields.find((t=>t.name===i.field)).type}:{fieldType:void 0}),this.currentValues.statistic||(this.currentValues.statistic="count"),this.isValid=e,e&&this.arcgisCompositeServiceQueryMetricFieldChange.emit(this.currentValues)}translationFunc(t,e,i){return this.intl.t(t,e,i)}render(){return i(s,null,this.loading?i("arcgis-skeleton-loader",{active:!0}):i("arcgis-configuration-editor",{context:this.context,onArcgisConfigurationEditorChange:this.handleCompositeServiceQueryMetricFieldChange,schema:this._schema,t:this.translationFunc,uiSchema:this._uiSchema,values:this.currentValues||this.values}))}static get assetsDirs(){return["locales"]}get element(){return o(this)}static get watchers(){return{context:["updateUiSchema"]}}};export{w as hub_composite_input_service_query_metric}