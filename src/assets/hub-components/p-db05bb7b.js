import{h as t,d as p,s,i,e as a,u as o}from"./p-85d6867e.js";import{c as j,u as r,r as c}from"./p-bded806b.js";import{s as m,P as e}from"./p-6f931af6.js";import{g as b,c as d}from"./p-58cf73b6.js";import{D as f,e as n}from"./p-066a64ad.js";import{g as O}from"./p-9646abb2.js";import{c as u}from"./p-b728aff4.js";import{r as w}from"./p-16a95e5b.js";import"./p-a0deb8c6.js";import"./p-dd26efbb.js";import"./p-d1b12a9c.js";import"./p-796574a4.js";import"./p-dcdf7b57.js";import"./p-6dcae6cd.js";import"./p-637ea136.js";import"./p-3f64a9d9.js";import"./p-377e1b5e.js";import"./p-2acb70a6.js";import"./p-8dbea197.js";import"./p-7202c430.js";import"./p-75d6da59.js";import"./p-90dc0f6f.js";import"./p-3904125b.js";import"./p-59fd2498.js";import"./p-cea8413b.js";import"./p-d763eacf.js";import"./p-ad325ed1.js";import"./p-e43616ff.js";import"./p-ca048216.js";import"./p-52612356.js";import"./p-af59e67b.js";import"./p-4a14259a.js";import"./p-235bb6ee.js";import"./p-783242bc.js";import"./p-903ef8af.js";import"./p-c836a9b6.js";import"./p-87582fe0.js";import"./p-56b73d71.js";import"./p-b295a5ae.js";import"./p-8e7f4c22.js";import"./p-69555c48.js";import"./p-7b082f5d.js";import"./p-5955d0c4.js";import"./p-8ccaf06d.js";import"./p-9b205605.js";import"./p-c8e0e01f.js";import"./p-97274a47.js";import"./p-30a7cbb2.js";import"./p-10274eb9.js";async function g(a,o){const r=Object.assign(Object.assign({},f),a);r.slug||(r.slug=t(r.name,r.orgUrlKey)),r.slug=await p({slug:r.slug},o),r.typeKeywords=s(r.typeKeywords,r.slug),r.typeKeywords=m(r.typeKeywords,r.isDiscussable);const c=new e(b());let w=c.entityToStore(r,u(n));w=await i(w,o);const g=O("discussion");w.entitySettings=await j(Object.assign({data:{id:w.item.id,type:g.type,settings:Object.assign(Object.assign({},g.settings),{discussions:Object.assign(Object.assign({},g.settings.discussions),r.discussionSettings)})}},o));let y=c.storeToEntity(w,{});return y=d(w,y,o),y}async function y(t,s){t.slug=await p({slug:t.slug,existingId:t.id},s),t.typeKeywords=m(t.typeKeywords,t.isDiscussable);const i=await a(t.id,s),c=new e(b()),f=c.entityToStore(t,i),n=await o(f,s);let u=c.storeToEntity(n,t);u=d(i,u,s);const w=O("discussion"),g=Object.assign(Object.assign({},w.settings),{discussions:Object.assign(Object.assign({},w.settings.discussions),u.discussionSettings)}),y=u.entitySettingsId?await r(Object.assign({id:u.entitySettingsId,data:{settings:g}},s)):await j(Object.assign({data:{id:u.id,type:w.type,settings:g}},s));return u.entitySettingsId=y.id,u.discussionSettings=y.settings.discussions,u}async function l(t,p){const s=Object.assign(Object.assign({},p),{id:t});await w(s);try{await c(Object.assign({id:t},p))}catch(t){}}export{g as createDiscussion,l as deleteDiscussion,y as updateDiscussion}