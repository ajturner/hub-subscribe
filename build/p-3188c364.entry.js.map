{"version":3,"names":["CSS","container","TOOLTIP_OPEN_DELAY_MS","TOOLTIP_CLOSE_DELAY_MS","ARIA_DESCRIBED_BY","getEffectiveReferenceElement","tooltip","referenceElement","queryElementRoots","id","TooltipManager","constructor","this","registeredElements","WeakMap","registeredShadowRootCounts","hoverOpenTimeout","hoverCloseTimeout","hoveredTooltip","clickedTooltip","activeTooltip","registeredElementCount","queryTooltip","composedPath","registeredElement","find","pathEl","has","get","keyDownHandler","event","key","defaultPrevented","open","clearHoverTimeout","closeActiveTooltip","Element","contains","target","preventDefault","pointerMoveHandler","hoveringActiveTooltip","includes","isClosableClickedTooltip","openHoveredTooltip","closeHoveredTooltip","clickHandler","closeOnClick","toggleTooltip","focusInHandler","queryFocusedTooltip","focusOutHandler","window","setTimeout","clearHoverCloseTimeout","registerElement","referenceEl","set","shadowRoot","getReferenceElShadowRootNode","registerShadowRoot","addListeners","unregisterElement","unregisterShadowRoot","delete","removeListeners","addShadowListeners","addEventListener","capture","removeShadowListeners","removeEventListener","clearHoverOpenTimeout","clearTimeout","toggleFocusedTooltip","newCount","getShadowRootNode","tooltipCss","manager","Tooltip","hostRef","guid","hasLoaded","openTransitionProp","setTransitionEl","el","transitionEl","setUpReferenceElement","warn","removeReferences","effectiveReferenceElement","connectFloatingUI","console","tagName","addReferences","getId","setAttribute","removeAttribute","label","undefined","offsetDistance","defaultOffsetDistance","offsetSkidding","overlayPositioning","placement","floatingLayout","offsetDistanceOffsetHandler","reposition","offsetSkiddingHandler","openHandler","onToggleOpenCloseComponent","overlayPositioningHandler","placementHandler","referenceElementHandler","connectedCallback","async","componentDidLoad","disconnectedCallback","disconnectFloatingUI","delayed","arrowEl","floatingEl","type","onBeforeOpen","calciteTooltipBeforeOpen","emit","onOpen","calciteTooltipOpen","onBeforeClose","calciteTooltipBeforeClose","onClose","calciteTooltipClose","render","displayed","hidden","h","Host","toAriaBoolean","role","class","FloatingCSS","animation","animationActive","ref","FloatingArrow"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/tooltip/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/tooltip/utils.js","./node_modules/@esri/calcite-components/dist/collection/components/tooltip/TooltipManager.js","./node_modules/@esri/calcite-components/dist/collection/components/tooltip/tooltip.css?tag=calcite-tooltip&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/tooltip/tooltip.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nexport const CSS = {\n    container: \"container\",\n};\nexport const TOOLTIP_OPEN_DELAY_MS = 300;\nexport const TOOLTIP_CLOSE_DELAY_MS = 500;\nexport const ARIA_DESCRIBED_BY = \"aria-describedby\";\n//# sourceMappingURL=resources.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { queryElementRoots } from \"../../utils/dom\";\nexport function getEffectiveReferenceElement(tooltip) {\n    const { referenceElement } = tooltip;\n    return ((typeof referenceElement === \"string\" ? queryElementRoots(tooltip, { id: referenceElement }) : referenceElement) ||\n        null);\n}\n//# sourceMappingURL=utils.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { getShadowRootNode } from \"../../utils/dom\";\nimport { TOOLTIP_OPEN_DELAY_MS, TOOLTIP_CLOSE_DELAY_MS } from \"./resources\";\nimport { getEffectiveReferenceElement } from \"./utils\";\nexport default class TooltipManager {\n    constructor() {\n        // --------------------------------------------------------------------------\n        //\n        //  Private Properties\n        //\n        // --------------------------------------------------------------------------\n        this.registeredElements = new WeakMap();\n        this.registeredShadowRootCounts = new WeakMap();\n        this.hoverOpenTimeout = null;\n        this.hoverCloseTimeout = null;\n        this.hoveredTooltip = null;\n        this.clickedTooltip = null;\n        this.activeTooltip = null;\n        this.registeredElementCount = 0;\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.queryTooltip = (composedPath) => {\n            const { registeredElements } = this;\n            const registeredElement = composedPath.find((pathEl) => registeredElements.has(pathEl));\n            return registeredElements.get(registeredElement);\n        };\n        this.keyDownHandler = (event) => {\n            if (event.key === \"Escape\" && !event.defaultPrevented) {\n                const { activeTooltip } = this;\n                if (activeTooltip?.open) {\n                    this.clearHoverTimeout();\n                    this.closeActiveTooltip();\n                    const referenceElement = getEffectiveReferenceElement(activeTooltip);\n                    if (referenceElement instanceof Element && referenceElement.contains(event.target)) {\n                        event.preventDefault();\n                    }\n                }\n            }\n        };\n        this.pointerMoveHandler = (event) => {\n            const composedPath = event.composedPath();\n            const { activeTooltip } = this;\n            const hoveringActiveTooltip = activeTooltip?.open && composedPath.includes(activeTooltip);\n            if (hoveringActiveTooltip) {\n                this.clearHoverTimeout();\n                return;\n            }\n            const tooltip = this.queryTooltip(composedPath);\n            this.hoveredTooltip = tooltip;\n            if (this.isClosableClickedTooltip(tooltip)) {\n                return;\n            }\n            this.clickedTooltip = null;\n            if (tooltip) {\n                this.openHoveredTooltip(tooltip);\n            }\n            else if (activeTooltip) {\n                this.closeHoveredTooltip();\n            }\n        };\n        this.clickHandler = (event) => {\n            const clickedTooltip = this.queryTooltip(event.composedPath());\n            this.clickedTooltip = clickedTooltip;\n            if (clickedTooltip?.closeOnClick) {\n                this.toggleTooltip(clickedTooltip, false);\n                this.clearHoverTimeout();\n            }\n        };\n        this.focusInHandler = (event) => {\n            this.queryFocusedTooltip(event, true);\n        };\n        this.focusOutHandler = (event) => {\n            this.queryFocusedTooltip(event, false);\n        };\n        this.openHoveredTooltip = (tooltip) => {\n            this.hoverOpenTimeout = window.setTimeout(() => {\n                if (this.hoverOpenTimeout === null) {\n                    return;\n                }\n                this.clearHoverCloseTimeout();\n                if (this.activeTooltip === this.hoveredTooltip) {\n                    return;\n                }\n                this.closeActiveTooltip();\n                if (tooltip !== this.hoveredTooltip) {\n                    return;\n                }\n                this.toggleTooltip(tooltip, true);\n            }, this.activeTooltip ? 0 : TOOLTIP_OPEN_DELAY_MS);\n        };\n        this.closeHoveredTooltip = () => {\n            this.hoverCloseTimeout = window.setTimeout(() => {\n                if (this.hoverCloseTimeout === null) {\n                    return;\n                }\n                this.closeActiveTooltip();\n            }, TOOLTIP_CLOSE_DELAY_MS);\n        };\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    // --------------------------------------------------------------------------\n    registerElement(referenceEl, tooltip) {\n        this.registeredElementCount++;\n        this.registeredElements.set(referenceEl, tooltip);\n        const shadowRoot = this.getReferenceElShadowRootNode(referenceEl);\n        if (shadowRoot) {\n            this.registerShadowRoot(shadowRoot);\n        }\n        if (this.registeredElementCount === 1) {\n            this.addListeners();\n        }\n    }\n    unregisterElement(referenceEl) {\n        const shadowRoot = this.getReferenceElShadowRootNode(referenceEl);\n        if (shadowRoot) {\n            this.unregisterShadowRoot(shadowRoot);\n        }\n        if (this.registeredElements.delete(referenceEl)) {\n            this.registeredElementCount--;\n        }\n        if (this.registeredElementCount === 0) {\n            this.removeListeners();\n        }\n    }\n    addShadowListeners(shadowRoot) {\n        shadowRoot.addEventListener(\"focusin\", this.focusInHandler, { capture: true });\n        shadowRoot.addEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n    }\n    removeShadowListeners(shadowRoot) {\n        shadowRoot.removeEventListener(\"focusin\", this.focusInHandler, { capture: true });\n        shadowRoot.removeEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n    }\n    addListeners() {\n        window.addEventListener(\"keydown\", this.keyDownHandler, { capture: true });\n        window.addEventListener(\"pointermove\", this.pointerMoveHandler, { capture: true });\n        window.addEventListener(\"click\", this.clickHandler, { capture: true });\n        window.addEventListener(\"focusin\", this.focusInHandler, { capture: true });\n        window.addEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n    }\n    removeListeners() {\n        window.removeEventListener(\"keydown\", this.keyDownHandler, { capture: true });\n        window.removeEventListener(\"pointermove\", this.pointerMoveHandler, { capture: true });\n        window.removeEventListener(\"click\", this.clickHandler, { capture: true });\n        window.removeEventListener(\"focusin\", this.focusInHandler, { capture: true });\n        window.removeEventListener(\"focusout\", this.focusOutHandler, { capture: true });\n    }\n    clearHoverOpenTimeout() {\n        window.clearTimeout(this.hoverOpenTimeout);\n        this.hoverOpenTimeout = null;\n    }\n    clearHoverCloseTimeout() {\n        window.clearTimeout(this.hoverCloseTimeout);\n        this.hoverCloseTimeout = null;\n    }\n    clearHoverTimeout() {\n        this.clearHoverOpenTimeout();\n        this.clearHoverCloseTimeout();\n    }\n    closeActiveTooltip() {\n        const { activeTooltip } = this;\n        if (activeTooltip?.open) {\n            this.toggleTooltip(activeTooltip, false);\n        }\n    }\n    toggleFocusedTooltip(tooltip, open) {\n        this.closeActiveTooltip();\n        if (open) {\n            this.clearHoverTimeout();\n        }\n        this.toggleTooltip(tooltip, open);\n    }\n    toggleTooltip(tooltip, open) {\n        tooltip.open = open;\n        this.activeTooltip = open ? tooltip : null;\n    }\n    queryFocusedTooltip(event, open) {\n        const tooltip = this.queryTooltip(event.composedPath());\n        if (!tooltip || this.isClosableClickedTooltip(tooltip)) {\n            return;\n        }\n        this.toggleFocusedTooltip(tooltip, open);\n    }\n    isClosableClickedTooltip(tooltip) {\n        return tooltip?.closeOnClick && tooltip === this.clickedTooltip;\n    }\n    registerShadowRoot(shadowRoot) {\n        const { registeredShadowRootCounts } = this;\n        const newCount = (registeredShadowRootCounts.get(shadowRoot) ?? 0) + 1;\n        if (newCount === 1) {\n            this.addShadowListeners(shadowRoot);\n        }\n        registeredShadowRootCounts.set(shadowRoot, newCount);\n    }\n    unregisterShadowRoot(shadowRoot) {\n        const { registeredShadowRootCounts } = this;\n        const newCount = registeredShadowRootCounts.get(shadowRoot) - 1;\n        if (newCount === 0) {\n            this.removeShadowListeners(shadowRoot);\n        }\n        registeredShadowRootCounts.set(shadowRoot, newCount);\n    }\n    getReferenceElShadowRootNode(referenceEl) {\n        return referenceEl instanceof Element ? getShadowRootNode(referenceEl) : null;\n    }\n}\n//# sourceMappingURL=TooltipManager.js.map\n","/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-tooltip-z-index: Sets the z-index value for the component.\n*/\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-tooltip-z-index, var(--calcite-z-index-tooltip));\n  display: block;\n  position: absolute;\n  z-index: var(--calcite-floating-ui-z-index);\n}\n\n.calcite-floating-ui-anim {\n  position: relative;\n  transition: var(--calcite-floating-ui-transition);\n  transition-property: transform, visibility, opacity;\n  opacity: 0;\n  box-shadow: 0 0 16px 0 rgba(0, 0, 0, 0.16);\n  z-index: var(--calcite-z-index);\n  border-radius: 0.25rem;\n}\n\n:host([data-placement^=bottom]) .calcite-floating-ui-anim {\n  transform: translateY(-5px);\n}\n\n:host([data-placement^=top]) .calcite-floating-ui-anim {\n  transform: translateY(5px);\n}\n\n:host([data-placement^=left]) .calcite-floating-ui-anim {\n  transform: translateX(5px);\n}\n\n:host([data-placement^=right]) .calcite-floating-ui-anim {\n  transform: translateX(-5px);\n}\n\n:host([data-placement]) .calcite-floating-ui-anim--active {\n  opacity: 1;\n  transform: translate(0);\n}\n\n:host([calcite-hydrated-hidden]) {\n  visibility: hidden !important;\n  pointer-events: none;\n}\n\n.calcite-floating-ui-arrow {\n  pointer-events: none;\n  position: absolute;\n  z-index: calc(var(--calcite-z-index) * -1);\n  fill: var(--calcite-color-foreground-1);\n}\n\n.calcite-floating-ui-arrow__stroke {\n  stroke: var(--calcite-color-border-3);\n}\n\n.container {\n  position: relative;\n  overflow: hidden;\n  border-radius: 0.25rem;\n  padding-block: 0.75rem;\n  padding-inline: 1rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.375;\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-color-text-1);\n  max-inline-size: 20rem;\n  max-block-size: 20rem;\n  text-align: start;\n}\n\n.calcite-floating-ui-anim {\n  border-radius: 0.25rem;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-3);\n  background-color: var(--calcite-color-foreground-1);\n}\n\n.arrow::before {\n  outline: 1px solid var(--calcite-color-border-3);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { connectFloatingUI, defaultOffsetDistance, disconnectFloatingUI, FloatingCSS, reposition, } from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\nimport { ARIA_DESCRIBED_BY, CSS } from \"./resources\";\nimport TooltipManager from \"./TooltipManager\";\nimport { getEffectiveReferenceElement } from \"./utils\";\nconst manager = new TooltipManager();\n/**\n * @slot - A slot for adding text.\n */\nexport class Tooltip {\n    constructor() {\n        this.guid = `calcite-tooltip-${guid()}`;\n        this.hasLoaded = false;\n        this.openTransitionProp = \"opacity\";\n        this.setTransitionEl = (el) => {\n            this.transitionEl = el;\n        };\n        this.setUpReferenceElement = (warn = true) => {\n            this.removeReferences();\n            this.effectiveReferenceElement = getEffectiveReferenceElement(this.el);\n            connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n            const { el, referenceElement, effectiveReferenceElement } = this;\n            if (warn && referenceElement && !effectiveReferenceElement) {\n                console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n                    el,\n                });\n            }\n            this.addReferences();\n        };\n        this.getId = () => {\n            return this.el.id || this.guid;\n        };\n        this.addReferences = () => {\n            const { effectiveReferenceElement } = this;\n            if (!effectiveReferenceElement) {\n                return;\n            }\n            const id = this.getId();\n            if (\"setAttribute\" in effectiveReferenceElement) {\n                effectiveReferenceElement.setAttribute(ARIA_DESCRIBED_BY, id);\n            }\n            manager.registerElement(effectiveReferenceElement, this.el);\n        };\n        this.removeReferences = () => {\n            const { effectiveReferenceElement } = this;\n            if (!effectiveReferenceElement) {\n                return;\n            }\n            if (\"removeAttribute\" in effectiveReferenceElement) {\n                effectiveReferenceElement.removeAttribute(ARIA_DESCRIBED_BY);\n            }\n            manager.unregisterElement(effectiveReferenceElement);\n        };\n        this.closeOnClick = false;\n        this.label = undefined;\n        this.offsetDistance = defaultOffsetDistance;\n        this.offsetSkidding = 0;\n        this.open = false;\n        this.overlayPositioning = \"absolute\";\n        this.placement = \"auto\";\n        this.referenceElement = undefined;\n        this.effectiveReferenceElement = undefined;\n        this.floatingLayout = \"vertical\";\n    }\n    offsetDistanceOffsetHandler() {\n        this.reposition(true);\n    }\n    offsetSkiddingHandler() {\n        this.reposition(true);\n    }\n    openHandler() {\n        onToggleOpenCloseComponent(this);\n        this.reposition(true);\n    }\n    overlayPositioningHandler() {\n        this.reposition(true);\n    }\n    placementHandler() {\n        this.reposition(true);\n    }\n    referenceElementHandler() {\n        this.setUpReferenceElement();\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        this.setUpReferenceElement(this.hasLoaded);\n        if (this.open) {\n            onToggleOpenCloseComponent(this);\n        }\n        connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    }\n    async componentWillLoad() {\n        if (this.open) {\n            onToggleOpenCloseComponent(this);\n        }\n    }\n    componentDidLoad() {\n        if (this.referenceElement && !this.effectiveReferenceElement) {\n            this.setUpReferenceElement();\n        }\n        connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n        this.hasLoaded = true;\n    }\n    disconnectedCallback() {\n        this.removeReferences();\n        disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    // --------------------------------------------------------------------------\n    /**\n     * Updates the position of the component.\n     *\n     * @param delayed\n     */\n    async reposition(delayed = false) {\n        const { el, effectiveReferenceElement, placement, overlayPositioning, offsetDistance, offsetSkidding, arrowEl, } = this;\n        return reposition(this, {\n            floatingEl: el,\n            referenceEl: effectiveReferenceElement,\n            overlayPositioning,\n            placement,\n            offsetDistance,\n            offsetSkidding,\n            arrowEl,\n            type: \"tooltip\",\n        }, delayed);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    onBeforeOpen() {\n        this.calciteTooltipBeforeOpen.emit();\n    }\n    onOpen() {\n        this.calciteTooltipOpen.emit();\n    }\n    onBeforeClose() {\n        this.calciteTooltipBeforeClose.emit();\n    }\n    onClose() {\n        this.calciteTooltipClose.emit();\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        const { effectiveReferenceElement, label, open, floatingLayout } = this;\n        const displayed = effectiveReferenceElement && open;\n        const hidden = !displayed;\n        return (h(Host, { key: 'e34d0071ff64ee773ee5bbe5a677c739b8326818', \"aria-hidden\": toAriaBoolean(hidden), \"aria-label\": label, \"aria-live\": \"polite\", \"calcite-hydrated-hidden\": hidden, id: this.getId(), role: \"tooltip\" }, h(\"div\", { key: '7da5007a141c44aab0b84228d284fd7f61802ec3', class: {\n                [FloatingCSS.animation]: true,\n                [FloatingCSS.animationActive]: displayed,\n            },\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: this.setTransitionEl }, h(FloatingArrow, { key: '0d8fae7c85b885579b2783ca9abd653c90261d93', floatingLayout: floatingLayout,\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: (arrowEl) => (this.arrowEl = arrowEl) }), h(\"div\", { key: '6f521a876289e6601d1984bb6d1d980fe56b5e2f', class: CSS.container }, h(\"slot\", { key: '3d87fbde922e9b5ef763e53584073a552094adc2' })))));\n    }\n    static get is() { return \"calcite-tooltip\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"tooltip.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"tooltip.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"closeOnClick\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Closes the component when the `referenceElement` is clicked.\"\n                },\n                \"attribute\": \"close-on-click\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": \"No longer necessary. Overrides the context of the component's description, which could confuse assistive technology users.\"\n                        }],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"offsetDistance\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"default\",\n                            \"text\": \"6\"\n                        }],\n                    \"text\": \"Offset the position of the component away from the `referenceElement`.\"\n                },\n                \"attribute\": \"offset-distance\",\n                \"reflect\": true,\n                \"defaultValue\": \"defaultOffsetDistance\"\n            },\n            \"offsetSkidding\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Offset the position of the component along the `referenceElement`.\"\n                },\n                \"attribute\": \"offset-skidding\",\n                \"reflect\": true,\n                \"defaultValue\": \"0\"\n            },\n            \"open\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component is open.\"\n                },\n                \"attribute\": \"open\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"overlayPositioning\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"OverlayPositioning\",\n                    \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n                    \"references\": {\n                        \"OverlayPositioning\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::OverlayPositioning\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n\\nThe `\\\"fixed\\\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n                },\n                \"attribute\": \"overlay-positioning\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"absolute\\\"\"\n            },\n            \"placement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"LogicalPlacement\",\n                    \"resolved\": \"\\\"auto\\\" | \\\"top\\\" | \\\"right\\\" | \\\"bottom\\\" | \\\"left\\\" | \\\"top-start\\\" | \\\"top-end\\\" | \\\"right-start\\\" | \\\"right-end\\\" | \\\"bottom-start\\\" | \\\"bottom-end\\\" | \\\"left-start\\\" | \\\"left-end\\\" | \\\"auto-start\\\" | \\\"auto-end\\\" | \\\"leading-start\\\" | \\\"leading\\\" | \\\"leading-end\\\" | \\\"trailing-end\\\" | \\\"trailing\\\" | \\\"trailing-start\\\"\",\n                    \"references\": {\n                        \"LogicalPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::LogicalPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines where the component will be positioned relative to the `referenceElement`.\"\n                },\n                \"attribute\": \"placement\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"auto\\\"\"\n            },\n            \"referenceElement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"ReferenceElement | string\",\n                    \"resolved\": \"Element | VirtualElement | string\",\n                    \"references\": {\n                        \"ReferenceElement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::ReferenceElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `referenceElement` to position the component according to its `\\\"placement\\\"` value.\\n\\nSetting to the `HTMLElement` is preferred so the component does not need to query the DOM for the `referenceElement`.\\n\\nHowever, a string ID of the reference element can be used.\"\n                },\n                \"attribute\": \"reference-element\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"effectiveReferenceElement\": {},\n            \"floatingLayout\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteTooltipBeforeClose\",\n                \"name\": \"calciteTooltipBeforeClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is requested to be closed and before the closing transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteTooltipClose\",\n                \"name\": \"calciteTooltipClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is closed and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteTooltipBeforeOpen\",\n                \"name\": \"calciteTooltipBeforeOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteTooltipOpen\",\n                \"name\": \"calciteTooltipOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is open and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"reposition\": {\n                \"complexType\": {\n                    \"signature\": \"(delayed?: boolean) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"delayed\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Updates the position of the component.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"delayed\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"offsetDistance\",\n                \"methodName\": \"offsetDistanceOffsetHandler\"\n            }, {\n                \"propName\": \"offsetSkidding\",\n                \"methodName\": \"offsetSkiddingHandler\"\n            }, {\n                \"propName\": \"open\",\n                \"methodName\": \"openHandler\"\n            }, {\n                \"propName\": \"overlayPositioning\",\n                \"methodName\": \"overlayPositioningHandler\"\n            }, {\n                \"propName\": \"placement\",\n                \"methodName\": \"placementHandler\"\n            }, {\n                \"propName\": \"referenceElement\",\n                \"methodName\": \"referenceElementHandler\"\n            }];\n    }\n}\n//# sourceMappingURL=tooltip.js.map\n"],"mappings":"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"}