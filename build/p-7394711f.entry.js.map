{"version":3,"names":["CSS","column","container","contentContainer","description","heading","interactive","largeVisualDeprecated","row","selected","selectionIcon","textContent","ICONS","selectedMultiple","selectedSingle","unselectedMultiple","unselectedSingle","SLOTS","contentBottom","contentEnd","contentStart","contentTop","tileCss","Tile","constructor","hostRef","this","clickHandler","setFocus","handleSelectEvent","disabled","selectionMode","calciteTileSelect","emit","setContainerEl","el","containerEl","active","alignment","undefined","embed","href","icon","iconFlipRtl","label","layout","scale","selectionAppearance","async","componentFocusable","_a","focus","connectedCallback","connectInteractive","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","componentDidRender","updateHostInteraction","setUpLoadableComponent","keyDownHandler","event","target","key","preventDefault","calciteInternalTileKeyEvent","renderSelectionIcon","h","class","renderTile","isLargeVisual","Boolean","disableInteraction","role","toAriaBoolean","onClick","tabIndex","ref","name","flipRtl","render","InteractiveContainer"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/tile/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/tile/tile.css?tag=calcite-tile&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/tile/tile.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nexport const CSS = {\n    column: \"column\",\n    container: \"container\",\n    contentContainer: \"content-container\",\n    description: \"description\",\n    heading: \"heading\",\n    interactive: \"interactive\",\n    largeVisualDeprecated: \"large-visual-deprecated\",\n    row: \"row\",\n    selected: \"selected\",\n    selectionIcon: \"selection-icon\",\n    textContent: \"text-content\",\n};\nexport const ICONS = {\n    selectedMultiple: \"check-square-f\",\n    selectedSingle: \"circle-f\",\n    unselectedMultiple: \"square\",\n    unselectedSingle: \"circle\",\n};\nexport const SLOTS = {\n    contentBottom: \"content-bottom\",\n    contentEnd: \"content-end\",\n    contentStart: \"content-start\",\n    contentTop: \"content-top\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-tile-background-color: Specifies the background color of the component.\n* @prop --calcite-tile-border-color: Specifies the border color of the component.\n* @prop --calcite-tile-description-text-color: Specifies the description text color of the component.\n* @prop --calcite-tile-heading-text-color: Specifies the heading text color of the component.\n*/\n:host {\n  --calcite-tile-background-color: var(--calcite-color-foreground-1);\n  --calcite-tile-border-color: var(--calcite-color-border-2);\n  --calcite-tile-description-text-color: var(--calcite-color-text-3);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-2);\n  --calcite-ui-icon-color: var(--calcite-color-text-3);\n  box-sizing: border-box;\n  display: inline-block;\n}\n\n.container {\n  background-color: var(--calcite-tile-background-color);\n  block-size: var(--calcite-container-size-content-fluid);\n  box-sizing: border-box;\n  inline-size: var(--calcite-container-size-content-fluid);\n  outline: var(--calcite-border-width-sm, 1px) solid var(--calcite-tile-border-color);\n  -webkit-user-select: none;\n          user-select: none;\n}\n.container.interactive {\n  cursor: pointer;\n}\n.container.interactive:hover, .container.interactive:focus, .container.interactive.selected {\n  outline-color: var(--calcite-color-brand);\n  position: relative;\n}\n.container.interactive:hover .selection-icon, .container.interactive:focus .selection-icon, .container.interactive.selected .selection-icon {\n  --calcite-ui-icon-color: var(--calcite-color-brand);\n}\n.container.interactive.selected {\n  z-index: var(--calcite-z-index);\n}\n.container.interactive:focus {\n  box-shadow: inset 0px 0px 0px 1px var(--calcite-color-brand);\n  z-index: var(--calcite-z-index-sticky);\n}\n\n.column,\n.row {\n  align-items: flex-start;\n  display: flex;\n}\n\n.column {\n  flex-direction: column;\n}\n\n.content-container {\n  inline-size: 100%;\n  outline-color: transparent;\n  padding: 0;\n}\n\n.text-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.heading {\n  color: var(--calcite-tile-heading-text-color);\n  font-weight: var(--calcite-font-weight-medium);\n  line-height: 1.20313rem;\n  overflow-wrap: break-word;\n}\n\n/* [Deprecated] Use the content-top slot for rendering icon with alignment=\"center\" instead */\n.large-visual-deprecated {\n  align-items: center;\n  justify-content: center;\n  min-block-size: 12rem;\n  text-align: center;\n}\n.large-visual-deprecated calcite-icon {\n  align-self: center;\n  block-size: 64px;\n  inline-size: 64px;\n}\n.large-visual-deprecated .content-container {\n  justify-content: center;\n}\n\n.description {\n  color: var(--calcite-tile-description-text-color);\n  font-weight: var(--calcite-font-weight-regular);\n  overflow-wrap: break-word;\n}\n\n:host([alignment=center]) .row,\n:host([alignment=center]) .column {\n  align-items: center;\n  text-align: center;\n}\n:host([alignment=center]) slot[name=content-start]::slotted(*),\n:host([alignment=center]) slot[name=content-end]::slotted(*) {\n  align-self: center;\n}\n\n:host([scale=s]) {\n  max-inline-size: 400px;\n  min-inline-size: 100px;\n}\n:host([scale=s]) .container {\n  padding: var(--calcite-spacing-sm);\n}\n:host([scale=s]) .column,\n:host([scale=s]) .row {\n  gap: var(--calcite-spacing-sm);\n}\n:host([scale=s]) .heading {\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.03125rem;\n}\n:host([scale=s]) .description {\n  font-size: var(--calcite-font-size--3);\n  line-height: 0.85938rem;\n}\n\n:host([scale=m]) {\n  max-inline-size: 460px;\n  min-inline-size: 140px;\n}\n:host([scale=m]) .container {\n  padding: var(--calcite-spacing-md);\n}\n:host([scale=m]) .column,\n:host([scale=m]) .row {\n  gap: var(--calcite-spacing-md);\n}\n:host([scale=m]) .heading {\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.20313rem;\n}\n:host([scale=m]) .description {\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.03125rem;\n}\n\n:host([scale=l]) {\n  max-inline-size: 520px;\n  min-inline-size: 160px;\n}\n:host([scale=l]) .container {\n  padding: var(--calcite-spacing-xl);\n}\n:host([scale=l]) .column,\n:host([scale=l]) .row {\n  gap: var(--calcite-spacing-xl);\n}\n:host([scale=l]) .heading {\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375rem;\n}\n:host([scale=l]) .description {\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.20313rem;\n}\n\n:host([selection-appearance=border][layout=horizontal]) .container.selected:focus::before,\n:host([selection-appearance=border][layout=vertical]) .container.selected:focus::before {\n  block-size: 100%;\n  box-shadow: inset 0px 0px 0px 1px var(--calcite-color-brand);\n  content: \"\";\n  display: block;\n  inline-size: 100%;\n  inset-block-start: 0;\n  inset-inline-start: 0;\n  position: absolute;\n}\n\n:host([selection-appearance=border][layout=horizontal]) .container.selected {\n  box-shadow: inset 0px -4px 0px 0px var(--calcite-color-brand);\n}\n\n:host([selection-appearance=border][layout=vertical]) .container.selected {\n  box-shadow: inset 4px 0px 0px 0px var(--calcite-color-brand);\n}\n\n:host([href]:focus:not([disabled])),\n:host([href]:hover:not([disabled])) {\n  --calcite-tile-border-color: var(--calcite-color-text-link);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-link);\n  --calcite-ui-icon-color: var(--calcite-color-text-link);\n}\n:host([href]:focus:not([disabled])) .container,\n:host([href]:hover:not([disabled])) .container {\n  position: relative;\n  z-index: var(--calcite-z-index);\n}\n\n:host([href]:active:not([disabled])) .container {\n  box-shadow: 0 0 0 3px var(--calcite-tile-border-color);\n}\n\n:host([embed]) .container {\n  box-shadow: none;\n  padding: 0;\n}\n\n:host([selection-mode=none]) .container {\n  outline-color: var(--calcite-tile-border-color);\n}\n:host([selection-mode=none]) .container:focus {\n  outline-color: var(--calcite-color-brand);\n  position: relative;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host(:hover:not([disabled])),\n:host([active]:not([disabled])) {\n  --calcite-tile-description-text-color: var(--calcite-color-text-2);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-1);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { h, } from \"@stencil/core\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n/**\n * @slot content-top - A slot for adding non-actionable elements above the component's content.  Content slotted here will render in place of the `icon` property.\n * @slot content-bottom - A slot for adding non-actionable elements below the component's content.\n * @slot content-start - [Deprecated] use `content-top` slot instead.  A slot for adding non-actionable elements before the component's content.\n * @slot content-end - [Deprecated] use `content-bottom` slot instead. A slot for adding non-actionable elements after the component's content.\n */\nexport class Tile {\n    constructor() {\n        this.clickHandler = () => {\n            if (this.interactive) {\n                this.setFocus();\n                this.handleSelectEvent();\n            }\n        };\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.handleSelectEvent = () => {\n            if (this.disabled ||\n                !this.interactive ||\n                (this.selectionMode === \"single-persist\" && this.selected === true)) {\n                return;\n            }\n            this.calciteTileSelect.emit();\n        };\n        this.setContainerEl = (el) => {\n            this.containerEl = el;\n        };\n        this.active = false;\n        this.alignment = \"start\";\n        this.description = undefined;\n        this.disabled = false;\n        this.embed = false;\n        this.heading = undefined;\n        this.href = undefined;\n        this.icon = undefined;\n        this.iconFlipRtl = false;\n        this.interactive = false;\n        this.label = undefined;\n        this.layout = \"horizontal\";\n        this.scale = \"m\";\n        this.selected = false;\n        this.selectionAppearance = \"icon\";\n        this.selectionMode = \"none\";\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        if (!this.disabled && this.interactive) {\n            this.containerEl?.focus();\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    keyDownHandler(event) {\n        if (event.target === this.el) {\n            switch (event.key) {\n                case \" \":\n                case \"Enter\":\n                    this.handleSelectEvent();\n                    event.preventDefault();\n                    break;\n                case \"ArrowDown\":\n                case \"ArrowLeft\":\n                case \"ArrowRight\":\n                case \"ArrowUp\":\n                case \"Home\":\n                case \"End\":\n                    this.calciteInternalTileKeyEvent.emit(event);\n                    event.preventDefault();\n                    break;\n            }\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    renderSelectionIcon() {\n        const { selected, selectionAppearance, selectionMode } = this;\n        if (selectionAppearance === \"icon\" && selectionMode !== \"none\") {\n            return (h(\"calcite-icon\", { class: CSS.selectionIcon, icon: selected\n                    ? selectionMode === \"multiple\"\n                        ? ICONS.selectedMultiple\n                        : ICONS.selectedSingle\n                    : selectionMode === \"multiple\"\n                        ? ICONS.unselectedMultiple\n                        : ICONS.unselectedSingle, scale: \"s\" }));\n        }\n        return;\n    }\n    renderTile() {\n        const { description, disabled, heading, icon, iconFlipRtl, interactive, selectionMode } = this;\n        const isLargeVisual = heading && icon && !Boolean(description);\n        const disableInteraction = Boolean(this.href) || !interactive;\n        const role = selectionMode === \"multiple\" && interactive\n            ? \"checkbox\"\n            : selectionMode !== \"none\" && interactive\n                ? \"radio\"\n                : interactive\n                    ? \"button\"\n                    : undefined;\n        return (h(\"div\", { \"aria-checked\": selectionMode !== \"none\" && interactive ? toAriaBoolean(this.selected) : undefined, \"aria-disabled\": disableInteraction ? toAriaBoolean(disabled) : undefined, \"aria-label\": role && this.label, class: {\n                [CSS.container]: true,\n                [CSS.interactive]: interactive,\n                // [Deprecated] Use the content-top slot for rendering icon with alignment=\"center\" instead\n                [CSS.largeVisualDeprecated]: isLargeVisual,\n                [CSS.row]: true,\n                [CSS.selected]: this.selected,\n            }, onClick: this.clickHandler, role: role, tabIndex: disableInteraction ? undefined : 0,\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: this.setContainerEl }, this.renderSelectionIcon(), h(\"div\", { class: CSS.column }, h(\"slot\", { name: SLOTS.contentTop }), icon && h(\"calcite-icon\", { flipRtl: iconFlipRtl, icon: icon, scale: \"l\" }), h(\"div\", { class: { [CSS.contentContainer]: true, [CSS.row]: true } }, h(\"slot\", { name: SLOTS.contentStart }), h(\"div\", { class: CSS.textContent }, heading && h(\"div\", { class: CSS.heading }, heading), description && h(\"div\", { class: CSS.description }, description)), h(\"slot\", { name: SLOTS.contentEnd })), h(\"slot\", { name: SLOTS.contentBottom }))));\n    }\n    render() {\n        const { disabled } = this;\n        return (h(InteractiveContainer, { key: '0498410835d5fc00d19eb6787aa89862ce784c46', disabled: disabled }, !!this.href ? (h(\"calcite-link\", { disabled: disabled, href: this.href }, this.renderTile())) : (this.renderTile())));\n    }\n    static get is() { return \"calcite-tile\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"tile.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"tile.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"active\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"When `true`, the component is active.\"\n                },\n                \"attribute\": \"active\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Exclude<Alignment, \\\"end\\\">\",\n                    \"resolved\": \"\\\"center\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Exclude\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Exclude\"\n                        },\n                        \"Alignment\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Alignment\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the alignment of the Tile's content.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"start\\\"\"\n            },\n            \"description\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A description for the component, which displays below the heading.\"\n                },\n                \"attribute\": \"description\",\n                \"reflect\": true\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"embed\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": \"No longer necessary.\"\n                        }],\n                    \"text\": \"The component's embed mode.\\n\\nWhen `true`, renders without a border and padding for use by other components.\"\n                },\n                \"attribute\": \"embed\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"heading\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component header text, which displays between the icon and description.\"\n                },\n                \"attribute\": \"heading\",\n                \"reflect\": true\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When embed is `\\\"false\\\"`, the URL for the component.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": true\n            },\n            \"icon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies an icon to display.\"\n                },\n                \"attribute\": \"icon\",\n                \"reflect\": true\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"interactive\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"When true, enables the tile to be focused, and allows the `calciteTileSelect` to emit.\\nThis is set to `true` by a parent Tile Group component.\"\n                },\n                \"attribute\": \"interactive\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"layout\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Exclude<Layout, \\\"grid\\\">\",\n                    \"resolved\": \"\\\"horizontal\\\" | \\\"vertical\\\"\",\n                    \"references\": {\n                        \"Exclude\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Exclude\"\n                        },\n                        \"Layout\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Layout\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Defines the layout of the component.\\n\\nUse `\\\"horizontal\\\"` for rows, and `\\\"vertical\\\"` for a single column.\"\n                },\n                \"attribute\": \"layout\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"horizontal\\\"\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"selected\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"When `true` and the parent's `selectionMode` is `\\\"single\\\"`, `\\\"single-persist\\\"', or `\\\"multiple\\\"`, the component is selected.\"\n                },\n                \"attribute\": \"selected\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"selectionAppearance\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SelectionAppearance\",\n                    \"resolved\": \"\\\"border\\\" | \\\"icon\\\"\",\n                    \"references\": {\n                        \"SelectionAppearance\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::SelectionAppearance\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Specifies the selection appearance, where:\\n\\n- `\\\"icon\\\"` (displays a checkmark or dot), or\\n- `\\\"border\\\"` (displays a border).\\n\\nThis property is set by the parent tile-group.\"\n                },\n                \"attribute\": \"selection-appearance\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"icon\\\"\"\n            },\n            \"selectionMode\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\n    \\\"multiple\\\" | \\\"none\\\" | \\\"single\\\" | \\\"single-persist\\\",\\n    SelectionMode\\n  >\",\n                    \"resolved\": \"\\\"multiple\\\" | \\\"none\\\" | \\\"single\\\" | \\\"single-persist\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"SelectionMode\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::SelectionMode\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Specifies the selection mode, where:\\n\\n- `\\\"multiple\\\"` (allows any number of selected items),\\n- `\\\"single\\\"` (allows only one selected item),\\n- `\\\"single-persist\\\"` (allows only one selected item and prevents de-selection),\\n- `\\\"none\\\"` (allows no selected items).\\n\\nThis property is set by the parent tile-group.\"\n                },\n                \"attribute\": \"selection-mode\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"none\\\"\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteInternalTileKeyEvent\",\n                \"name\": \"calciteInternalTileKeyEvent\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"KeyboardEvent\",\n                    \"resolved\": \"KeyboardEvent\",\n                    \"references\": {\n                        \"KeyboardEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::KeyboardEvent\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"calciteTileSelect\",\n                \"name\": \"calciteTileSelect\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the selected state of the component changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"keydown\",\n                \"method\": \"keyDownHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=tile.js.map\n"],"mappings":"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"}