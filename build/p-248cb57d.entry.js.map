{"version":3,"names":["CSS","title","close","imageContainer","chipIcon","textSlotted","container","imageSlotted","closable","multiple","selectable","selectIcon","selectIconActive","nonInteractive","isCircle","SLOTS","image","ICONS","unchecked","checkedSingle","checked","chipCss","Chip","constructor","hostRef","this","handleDefaultSlotChange","updateHasText","calciteChipClose","emit","selected","closed","closeButtonKeyDownHandler","event","isActivationKey","key","preventDefault","handleSlotImageChange","hasImage","slotChangeHasAssignedElement","handleEmittingEvent","interactive","calciteChipSelect","disabled","appearance","kind","icon","undefined","iconFlipRtl","scale","label","value","selectionMode","messageOverrides","messages","parentChipGroup","defaultMessages","effectiveLocale","hasText","watchSelected","handleSelectionPropertyChange","onMessagesChange","effectiveLocaleChange","updateMessages","connectedCallback","connectInteractive","connectLocalized","connectMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","async","setUpLoadableComponent","setUpMessages","keyDownHandler","target","el","calciteInternalChipKeyEvent","clickHandler","closeButtonEl","focus","componentFocusable","_a","containerEl","_b","textContent","trim","length","calciteInternalSyncSelectedChips","selectedInParent","selectedItems","includes","calciteInternalChipSelect","renderChipImage","h","class","name","onSlotchange","renderSelectionIcon","getIconScale","renderCloseButton","dismissLabel","onClick","onKeyDown","tabIndex","ref","renderIcon","flipRtl","render","disableInteraction","role","Host","InteractiveContainer","toAriaBoolean","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/chip/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/chip/chip.css?tag=calcite-chip&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/chip/chip.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nexport const CSS = {\n    title: \"title\",\n    close: \"close\",\n    imageContainer: \"image-container\",\n    chipIcon: \"chip-icon\",\n    textSlotted: \"text--slotted\",\n    container: \"container\",\n    imageSlotted: \"image--slotted\",\n    closable: \"closable\",\n    multiple: \"multiple\",\n    selectable: \"selectable\",\n    selectIcon: \"select-icon\",\n    selectIconActive: \"select-icon--active\",\n    nonInteractive: \"non-interactive\",\n    isCircle: \"is-circle\",\n};\nexport const SLOTS = {\n    image: \"image\",\n};\nexport const ICONS = {\n    close: \"x\",\n    unchecked: \"circle\",\n    checkedSingle: \"circle-f\",\n    checked: \"check-circle-f\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host([scale=s]) {\n  block-size: 1.5rem;\n  font-size: var(--calcite-font-size--2);\n  --calcite-chip-spacing-s-internal: 0.25rem;\n  --calcite-chip-spacing-l-internal: 0.5rem;\n}\n:host([scale=s]) .close,\n:host([scale=s]) .select-icon--active {\n  block-size: 1rem;\n  inline-size: 1rem;\n}\n:host([scale=s]) .image-container {\n  block-size: 1.25rem;\n  inline-size: 1.25rem;\n}\n:host([scale=s]) .container.is-circle {\n  block-size: 1.5rem;\n  inline-size: 1.5rem;\n}\n\n:host([scale=m]) {\n  block-size: 2rem;\n  font-size: var(--calcite-font-size--1);\n  --calcite-chip-spacing-s-internal: 0.375rem;\n  --calcite-chip-spacing-l-internal: 0.5rem;\n}\n:host([scale=m]) .close,\n:host([scale=m]) .image-container,\n:host([scale=m]) .select-icon--active {\n  block-size: 1.5rem;\n  inline-size: 1.5rem;\n}\n:host([scale=m]) .container.is-circle {\n  block-size: 2rem;\n  inline-size: 2rem;\n}\n\n:host([scale=l]) {\n  block-size: 2.75rem;\n  font-size: var(--calcite-font-size-0);\n  --calcite-chip-spacing-s-internal: 0.5rem;\n  --calcite-chip-spacing-l-internal: 0.75rem;\n}\n:host([scale=l]) .image-container,\n:host([scale=l]) .close,\n:host([scale=l]) .select-icon--active {\n  block-size: 2rem;\n  inline-size: 2rem;\n}\n:host([scale=l]) .container.is-circle {\n  block-size: 2.75rem;\n  inline-size: 2.75rem;\n}\n\n:host {\n  display: inline-flex;\n  cursor: default;\n  border-radius: 9999px;\n}\n\n.container {\n  box-sizing: border-box;\n  display: inline-flex;\n  block-size: 100%;\n  max-inline-size: 100%;\n  align-items: center;\n  justify-content: center;\n  border-radius: 9999px;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-1);\n  font-weight: var(--calcite-font-weight-medium);\n  outline-color: transparent;\n}\n.container:not(.is-circle) {\n  padding-inline: var(--calcite-chip-spacing-s-internal);\n}\n.container.selectable {\n  cursor: pointer;\n}\n.container:not(.non-interactive):focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n:host([scale=s]) .container.image--slotted {\n  padding-inline-start: calc(0.125rem / 2);\n}\n\n:host([scale=s]) .container.is-circle {\n  padding-inline: 0;\n}\n\n.container.text--slotted .title {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding-inline: var(--calcite-chip-spacing-s-internal);\n}\n\n.container:not(.text--slotted) .title {\n  display: none;\n}\n\n.container:not(.image--slotted) .image-container {\n  display: none;\n}\n\n.container.closable {\n  padding-inline-end: calc(var(--calcite-chip-spacing-l-internal) / 2);\n}\n\n.container:not(.is-circle).image--slotted {\n  padding-inline-start: calc(var(--calcite-chip-spacing-l-internal) / 2);\n}\n.container:not(.is-circle).image--slotted .image-container {\n  margin-inline-end: var(--calcite-chip-spacing-s-internal);\n}\n.container:not(.is-circle).image--slotted .image-container ~ .chip-icon {\n  margin-inline-start: var(--calcite-chip-spacing-s-internal);\n}\n.container:not(.is-circle).selectable:not(.text--slotted) .chip-icon {\n  margin-inline-end: var(--calcite-chip-spacing-s-internal);\n}\n.container:not(.is-circle):not(.selectable):not(.text--slotted) .chip-icon {\n  margin-inline-start: var(--calcite-chip-spacing-s-internal);\n}\n.container:not(.is-circle):not(.text--slotted) .chip-icon {\n  margin-inline-end: var(--calcite-chip-spacing-s-internal);\n}\n.container:not(.is-circle):not(.text-slotted).image--slotted .image-container {\n  margin-inline-end: var(--calcite-chip-spacing-s-internal);\n}\n.container:not(.is-circle):not(.closable):not(.text--slotted).image--slotted.selectable .image-container {\n  margin-inline-end: 0;\n}\n.container:not(.is-circle):not(.closable):not(.text--slotted).image--slotted.selectable .image-container ~ .chip-icon {\n  margin-inline-start: calc(var(--calcite-chip-spacing-s-internal) * 2);\n}\n\n.chip-icon {\n  position: relative;\n  margin-block: 0px;\n  display: inline-flex;\n  transition-duration: 150ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  margin-inline: var(--calcite-chip-spacing-s-internal);\n}\n\n.image-container {\n  display: inline-flex;\n  overflow: hidden;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n}\n\n.close {\n  margin: 0px;\n  cursor: pointer;\n  align-items: center;\n  border-style: none;\n  background-color: transparent;\n  color: var(--calcite-color-text-1);\n  outline-color: transparent;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  -webkit-appearance: none;\n  display: flex;\n  border-radius: 50%;\n  align-content: center;\n  justify-content: center;\n  --calcite-chip-transparent-hover: var(--calcite-color-transparent-hover);\n  --calcite-chip-transparent-press: var(--calcite-color-transparent-press);\n}\n.close:hover {\n  background-color: var(--calcite-chip-transparent-hover);\n}\n.close:focus {\n  background-color: var(--calcite-chip-transparent-hover);\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n.close:active {\n  background-color: var(--calcite-chip-transparent-press);\n}\n.close calcite-icon {\n  color: inherit;\n}\n\n.select-icon {\n  align-self: center;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  inset-block-start: -1px;\n  position: relative;\n  visibility: hidden;\n  inline-size: 0;\n  opacity: 0;\n  transition: opacity 0.15s ease-in-out, inline-size 0.15s ease-in-out;\n}\n.select-icon.select-icon--active {\n  visibility: visible;\n  opacity: 0.5;\n}\n\n.container:not(.is-circle).image--slotted .select-icon.select-icon--active {\n  margin-inline-end: var(--calcite-chip-spacing-s-internal);\n}\n\n:host([selected]) .select-icon {\n  opacity: 1;\n}\n\n.container:hover .select-icon--active {\n  opacity: 1;\n}\n\nslot[name=image]::slotted(*) {\n  display: flex;\n  block-size: 100%;\n  inline-size: 100%;\n  overflow: hidden;\n  border-radius: 50%;\n}\n\n:host([kind=neutral]) {\n  background-color: var(--calcite-color-foreground-2);\n  color: var(--calcite-color-text-1);\n}\n:host([kind=neutral]) .container {\n  border-color: transparent;\n}\n:host([kind=neutral]) .close {\n  color: var(--calcite-color-text-3);\n}\n:host([kind=neutral]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-color-text-3));\n}\n\n:host([kind=inverse]) {\n  background-color: var(--calcite-color-inverse);\n  color: var(--calcite-color-text-inverse);\n}\n:host([kind=inverse]) .container {\n  border-color: transparent;\n}\n:host([kind=inverse]) .close {\n  color: var(--calcite-color-text-inverse);\n}\n:host([kind=inverse]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-color-text-inverse));\n}\n\n:host([kind=brand]) {\n  background-color: var(--calcite-color-brand);\n  color: var(--calcite-color-text-inverse);\n}\n:host([kind=brand]) .container {\n  border-color: transparent;\n}\n:host([kind=brand]) .close {\n  color: var(--calcite-color-text-inverse);\n}\n:host([kind=brand]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-color-text-inverse));\n}\n\n:host([appearance=outline-fill]),\n:host([appearance=outline]) {\n  background-color: var(--calcite-color-foreground-1);\n  color: var(--calcite-color-text-1);\n}\n:host([appearance=outline-fill]) .close,\n:host([appearance=outline]) .close {\n  color: var(--calcite-color-text-3);\n}\n:host([appearance=outline-fill]) .chip-icon,\n:host([appearance=outline]) .chip-icon {\n  color: var(--calcite-ui-icon-color, var(--calcite-color-text-3));\n}\n\n:host([appearance=outline-fill]) {\n  background-color: var(--calcite-color-foreground-1);\n}\n\n:host([appearance=outline]) {\n  background-color: transparent;\n}\n\n:host([kind=neutral][appearance=outline-fill]) .container,\n:host([kind=neutral][appearance=outline]) .container {\n  border-color: var(--calcite-color-border-1);\n}\n\n:host([kind=inverse][appearance=outline-fill]) .container,\n:host([kind=inverse][appearance=outline]) .container {\n  border-color: var(--calcite-color-border-inverse);\n}\n\n:host([kind=brand][appearance=outline-fill]) .container,\n:host([kind=brand][appearance=outline]) .container {\n  border-color: var(--calcite-color-brand);\n}\n\n:host([kind=brand][appearance=solid]) button,\n:host([kind=inverse][appearance=solid]) button {\n  outline-color: var(--calcite-color-text-inverse);\n}\n\n:host([closed]) {\n  display: none;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { Build, h, Host, } from \"@stencil/core\";\nimport { toAriaBoolean, slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS, SLOTS, ICONS } from \"./resources\";\n/**\n * @slot - A slot for adding text.\n * @slot image - A slot for adding an image.\n */\nexport class Chip {\n    constructor() {\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.handleDefaultSlotChange = () => {\n            this.updateHasText();\n        };\n        this.close = () => {\n            this.calciteChipClose.emit();\n            this.selected = false;\n            this.closed = true;\n        };\n        this.closeButtonKeyDownHandler = (event) => {\n            if (isActivationKey(event.key)) {\n                event.preventDefault();\n                this.close();\n            }\n        };\n        this.handleSlotImageChange = (event) => {\n            this.hasImage = slotChangeHasAssignedElement(event);\n        };\n        this.handleEmittingEvent = () => {\n            if (this.interactive) {\n                this.calciteChipSelect.emit();\n            }\n        };\n        this.disabled = false;\n        this.appearance = \"solid\";\n        this.kind = \"neutral\";\n        this.closable = false;\n        this.icon = undefined;\n        this.iconFlipRtl = false;\n        this.scale = \"m\";\n        this.label = undefined;\n        this.value = undefined;\n        this.closed = false;\n        this.selectionMode = \"none\";\n        this.selected = false;\n        this.messageOverrides = undefined;\n        this.messages = undefined;\n        this.interactive = false;\n        this.parentChipGroup = undefined;\n        this.defaultMessages = undefined;\n        this.effectiveLocale = undefined;\n        this.hasText = false;\n        this.hasImage = false;\n    }\n    watchSelected(selected) {\n        if (this.selectionMode === \"none\") {\n            return;\n        }\n        this.handleSelectionPropertyChange(selected);\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n        connectLocalized(this);\n        connectMessages(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n        if (this.selectionMode !== \"none\" && this.interactive && this.selected) {\n            this.handleSelectionPropertyChange(this.selected);\n        }\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        if (Build.isBrowser) {\n            await setUpMessages(this);\n            this.updateHasText();\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    keyDownHandler(event) {\n        if (event.target === this.el) {\n            switch (event.key) {\n                case \" \":\n                case \"Enter\":\n                    this.handleEmittingEvent();\n                    event.preventDefault();\n                    break;\n                case \"ArrowRight\":\n                case \"ArrowLeft\":\n                case \"Home\":\n                case \"End\":\n                    this.calciteInternalChipKeyEvent.emit(event);\n                    event.preventDefault();\n                    break;\n            }\n        }\n    }\n    clickHandler() {\n        if (!this.interactive && this.closable) {\n            this.closeButtonEl.focus();\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        if (!this.disabled && this.interactive) {\n            this.containerEl?.focus();\n        }\n        else if (!this.disabled && this.closable) {\n            this.closeButtonEl?.focus();\n        }\n    }\n    updateHasText() {\n        this.hasText = this.el.textContent.trim().length > 0;\n    }\n    handleSelectionPropertyChange(selected) {\n        if (this.selectionMode === \"single\") {\n            this.calciteInternalSyncSelectedChips.emit();\n        }\n        const selectedInParent = this.parentChipGroup.selectedItems.includes(this.el);\n        if (!selectedInParent && selected && this.selectionMode !== \"multiple\") {\n            this.calciteInternalChipSelect.emit();\n        }\n        if (this.selectionMode !== \"single\") {\n            this.calciteInternalSyncSelectedChips.emit();\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    //--------------------------------------------------------------------------\n    renderChipImage() {\n        return (h(\"div\", { class: CSS.imageContainer }, h(\"slot\", { name: SLOTS.image, onSlotchange: this.handleSlotImageChange })));\n    }\n    renderSelectionIcon() {\n        const icon = this.selectionMode === \"multiple\" && this.selected\n            ? ICONS.checked\n            : this.selectionMode === \"multiple\"\n                ? ICONS.unchecked\n                : this.selected\n                    ? ICONS.checkedSingle\n                    : undefined;\n        return (h(\"div\", { class: {\n                [CSS.selectIcon]: true,\n                [CSS.selectIconActive]: this.selectionMode === \"multiple\" || this.selected,\n            } }, icon ? h(\"calcite-icon\", { icon: icon, scale: getIconScale(this.scale) }) : null));\n    }\n    renderCloseButton() {\n        return (h(\"button\", { \"aria-label\": this.messages.dismissLabel, class: CSS.close, onClick: this.close, onKeyDown: this.closeButtonKeyDownHandler, tabIndex: this.disabled ? -1 : 0,\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: (el) => (this.closeButtonEl = el) }, h(\"calcite-icon\", { icon: ICONS.close, scale: getIconScale(this.scale) })));\n    }\n    renderIcon() {\n        return (h(\"calcite-icon\", { class: CSS.chipIcon, flipRtl: this.iconFlipRtl, icon: this.icon, scale: getIconScale(this.scale) }));\n    }\n    render() {\n        const { disabled } = this;\n        const disableInteraction = disabled || (!disabled && !this.interactive);\n        const role = this.selectionMode === \"multiple\" && this.interactive\n            ? \"checkbox\"\n            : this.selectionMode !== \"none\" && this.interactive\n                ? \"radio\"\n                : this.interactive\n                    ? \"button\"\n                    : undefined;\n        return (h(Host, { key: '6fde6f4666ca0c145936bcd6e8b1e27d2b7a45d8' }, h(InteractiveContainer, { key: '2cc3a9f9d8cc06757168f7ea1ecd5816f22d54a9', disabled: disabled }, h(\"div\", { key: '30f6dd924ac68cfa614073dea661c214366987f7', \"aria-checked\": this.selectionMode !== \"none\" && this.interactive\n                ? toAriaBoolean(this.selected)\n                : undefined, \"aria-disabled\": disableInteraction ? toAriaBoolean(disabled) : undefined, \"aria-label\": this.label, class: {\n                [CSS.container]: true,\n                [CSS.textSlotted]: this.hasText,\n                [CSS.imageSlotted]: this.hasImage,\n                [CSS.selectable]: this.selectionMode !== \"none\",\n                [CSS.multiple]: this.selectionMode === \"multiple\",\n                [CSS.closable]: this.closable,\n                [CSS.nonInteractive]: !this.interactive,\n                [CSS.isCircle]: !this.closable &&\n                    !this.hasText &&\n                    (!this.icon || !this.hasImage) &&\n                    (this.selectionMode === \"none\" ||\n                        (!!this.selectionMode && this.selectionMode !== \"multiple\" && !this.selected)),\n            }, onClick: this.handleEmittingEvent, role: role, tabIndex: disableInteraction ? -1 : 0,\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: (el) => (this.containerEl = el) }, this.selectionMode !== \"none\" && this.renderSelectionIcon(), this.renderChipImage(), this.icon && this.renderIcon(), h(\"span\", { key: 'e467f570503aea94f5ef464bd9ab7fd4d2c5fd9a', class: CSS.title }, h(\"slot\", { key: 'f228540507f608f36288769a378a4bb73a7afeaf', onSlotchange: this.handleDefaultSlotChange })), this.closable && this.renderCloseButton()))));\n    }\n    static get is() { return \"calcite-chip\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"chip.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"chip.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"appearance\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"outline\\\" | \\\"outline-fill\\\" | \\\"solid\\\", Appearance>\",\n                    \"resolved\": \"\\\"outline\\\" | \\\"outline-fill\\\" | \\\"solid\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Appearance\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Appearance\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the appearance style of the component.\"\n                },\n                \"attribute\": \"appearance\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"solid\\\"\"\n            },\n            \"kind\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"brand\\\" | \\\"inverse\\\" | \\\"neutral\\\", Kind>\",\n                    \"resolved\": \"\\\"brand\\\" | \\\"inverse\\\" | \\\"neutral\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Kind\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Kind\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the kind of the component, which will apply to border and background if applicable.\"\n                },\n                \"attribute\": \"kind\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"neutral\\\"\"\n            },\n            \"closable\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, a close button is added to the component.\"\n                },\n                \"attribute\": \"closable\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"icon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies an icon to display.\"\n                },\n                \"attribute\": \"icon\",\n                \"reflect\": true\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component. When contained in a parent `calcite-chip-group` inherits the parent's `scale` value.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's value.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            },\n            \"closed\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, hides the component.\"\n                },\n                \"attribute\": \"closed\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"selectionMode\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"multiple\\\" | \\\"single\\\" | \\\"single-persist\\\" | \\\"none\\\", SelectionMode>\",\n                    \"resolved\": \"\\\"multiple\\\" | \\\"none\\\" | \\\"single\\\" | \\\"single-persist\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"SelectionMode\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::SelectionMode\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"This internal property, managed by a containing `calcite-chip-group`, is\\nconditionally set based on the `selectionMode` of the parent\"\n                },\n                \"attribute\": \"selection-mode\",\n                \"reflect\": false,\n                \"defaultValue\": \"\\\"none\\\"\"\n            },\n            \"selected\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component is selected.\"\n                },\n                \"attribute\": \"selected\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<ChipMessages>\",\n                    \"resolved\": \"{ dismissLabel?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"ChipMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/chip/t9n\",\n                            \"id\": \"src/components/chip/assets/chip/t9n/index.d.ts::ChipMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"ChipMessages\",\n                    \"resolved\": \"{ dismissLabel: string; }\",\n                    \"references\": {\n                        \"ChipMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/chip/t9n\",\n                            \"id\": \"src/components/chip/assets/chip/t9n/index.d.ts::ChipMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"interactive\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"When true, enables the chip to be focused, and allows the `calciteChipSelect` to emit.\\nThis is set to `true` by a parent Chip Group component.\"\n                },\n                \"attribute\": \"interactive\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"parentChipGroup\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"HTMLCalciteChipGroupElement\",\n                    \"resolved\": \"HTMLCalciteChipGroupElement\",\n                    \"references\": {\n                        \"HTMLCalciteChipGroupElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalciteChipGroupElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"defaultMessages\": {},\n            \"effectiveLocale\": {},\n            \"hasText\": {},\n            \"hasImage\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteChipClose\",\n                \"name\": \"calciteChipClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component's close button is selected.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteChipSelect\",\n                \"name\": \"calciteChipSelect\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the selected state of the component changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInternalChipKeyEvent\",\n                \"name\": \"calciteInternalChipKeyEvent\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"KeyboardEvent\",\n                    \"resolved\": \"KeyboardEvent\",\n                    \"references\": {\n                        \"KeyboardEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::KeyboardEvent\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"calciteInternalChipSelect\",\n                \"name\": \"calciteInternalChipSelect\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInternalSyncSelectedChips\",\n                \"name\": \"calciteInternalSyncSelectedChips\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"selected\",\n                \"methodName\": \"watchSelected\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"keydown\",\n                \"method\": \"keyDownHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"click\",\n                \"method\": \"clickHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=chip.js.map\n"],"mappings":"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"}