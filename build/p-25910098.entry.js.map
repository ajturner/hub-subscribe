{"version":3,"names":["accordionCss","Accordion","constructor","hostRef","this","mutationObserver","createObserver","updateAccordionItems","appearance","iconPosition","iconType","scale","selectionMode","handlePropsChange","connectedCallback","_a","observe","el","childList","disconnectedCallback","disconnect","render","transparent","h","key","class","accordion","updateActiveItemOnChange","event","calciteInternalAccordionChange","emit","requestedAccordionItem","detail","stopPropagation","querySelectorAll","forEach","item","document","dispatchEvent","CustomEvent"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/accordion/accordion.css?tag=calcite-accordion&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/accordion/accordion.js"],"sourcesContent":["/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([scale=s]) {\n  --calcite-accordion-item-spacing-unit: 0.25rem;\n  --calcite-accordion-icon-margin: 0.5rem;\n  --calcite-accordion-item-padding: var(--calcite-accordion-item-spacing-unit) 0.5rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n}\n\n:host([scale=m]) {\n  --calcite-accordion-item-spacing-unit: 0.5rem;\n  --calcite-accordion-icon-margin: 0.75rem;\n  --calcite-accordion-item-padding: var(--calcite-accordion-item-spacing-unit) 0.75rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}\n\n:host([scale=l]) {\n  --calcite-accordion-item-spacing-unit: 0.75rem;\n  --calcite-accordion-icon-margin: 1rem;\n  --calcite-accordion-item-padding: var(--calcite-accordion-item-spacing-unit) 1rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.25rem;\n}\n\n:host {\n  position: relative;\n  display: block;\n  max-inline-size: 100%;\n  line-height: 1.5rem;\n  --calcite-accordion-item-border: var(--calcite-color-border-2);\n  --calcite-accordion-item-background: var(--calcite-color-foreground-1);\n}\n\n.accordion--transparent {\n  --calcite-accordion-item-border: transparent;\n  --calcite-accordion-item-background: transparent;\n}\n\n.accordion {\n  border-width: 1px;\n  border-block-end-width: 0px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-2);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { h, } from \"@stencil/core\";\nimport { createObserver } from \"../../utils/observers\";\n/**\n * @slot - A slot for adding `calcite-accordion-item`s. `calcite-accordion` cannot be nested, however `calcite-accordion-item`s can.\n */\nexport class Accordion {\n    constructor() {\n        this.mutationObserver = createObserver(\"mutation\", () => this.updateAccordionItems());\n        this.appearance = \"solid\";\n        this.iconPosition = \"end\";\n        this.iconType = \"chevron\";\n        this.scale = \"m\";\n        this.selectionMode = \"multiple\";\n    }\n    handlePropsChange() {\n        this.updateAccordionItems();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        this.mutationObserver?.observe(this.el, { childList: true });\n        this.updateAccordionItems();\n    }\n    disconnectedCallback() {\n        this.mutationObserver?.disconnect();\n    }\n    render() {\n        const transparent = this.appearance === \"transparent\";\n        return (h(\"div\", { key: '56df7ef7175fd9af4459626fb0d09aab4061e97d', class: {\n                \"accordion--transparent\": transparent,\n                accordion: !transparent,\n            } }, h(\"slot\", { key: 'a657cd0ddb7784909bb5a2df3648cda59d3e71e2' })));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    updateActiveItemOnChange(event) {\n        this.calciteInternalAccordionChange.emit({\n            requestedAccordionItem: event.detail.requestedAccordionItem,\n        });\n        event.stopPropagation();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    updateAccordionItems() {\n        this.el.querySelectorAll(\"calcite-accordion-item\").forEach((item) => {\n            item.iconPosition = this.iconPosition;\n            item.iconType = this.iconType;\n            item.scale = this.scale;\n        });\n        // sync props on items across shadow DOM\n        document.dispatchEvent(new CustomEvent(\"calciteInternalAccordionItemsSync\"));\n    }\n    static get is() { return \"calcite-accordion\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"accordion.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"accordion.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"appearance\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"solid\\\" | \\\"transparent\\\", Appearance>\",\n                    \"resolved\": \"\\\"solid\\\" | \\\"transparent\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Appearance\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Appearance\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the appearance of the component.\"\n                },\n                \"attribute\": \"appearance\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"solid\\\"\"\n            },\n            \"iconPosition\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Position\",\n                    \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Position\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Position\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the placement of the icon in the header.\"\n                },\n                \"attribute\": \"icon-position\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"end\\\"\"\n            },\n            \"iconType\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"\\\"chevron\\\" | \\\"caret\\\" | \\\"plus-minus\\\"\",\n                    \"resolved\": \"\\\"caret\\\" | \\\"chevron\\\" | \\\"plus-minus\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the type of the icon in the header.\"\n                },\n                \"attribute\": \"icon-type\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"chevron\\\"\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"selectionMode\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\n    \\\"single\\\" | \\\"single-persist\\\" | \\\"multiple\\\",\\n    SelectionMode\\n  >\",\n                    \"resolved\": \"\\\"multiple\\\" | \\\"single\\\" | \\\"single-persist\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"SelectionMode\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::SelectionMode\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the selection mode of the component, where:\\n\\n`\\\"multiple\\\"` allows any number of selections,\\n\\n`\\\"single\\\"` allows only one selection, and\\n\\n`\\\"single-persist\\\"` allows one selection and prevents de-selection.\"\n                },\n                \"attribute\": \"selection-mode\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"multiple\\\"\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteInternalAccordionChange\",\n                \"name\": \"calciteInternalAccordionChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"RequestedItem\",\n                    \"resolved\": \"RequestedItem\",\n                    \"references\": {\n                        \"RequestedItem\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/accordion/interfaces.ts::RequestedItem\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"iconPosition\",\n                \"methodName\": \"handlePropsChange\"\n            }, {\n                \"propName\": \"iconType\",\n                \"methodName\": \"handlePropsChange\"\n            }, {\n                \"propName\": \"scale\",\n                \"methodName\": \"handlePropsChange\"\n            }, {\n                \"propName\": \"selectionMode\",\n                \"methodName\": \"handlePropsChange\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"calciteInternalAccordionItemSelect\",\n                \"method\": \"updateActiveItemOnChange\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=accordion.js.map\n"],"mappings":"wFAAA,MAAMA,EAAe,gsC,MCURC,EAAS,MAClBC,YAAAC,G,yFACIC,KAAKC,iBAAmBC,EAAe,YAAY,IAAMF,KAAKG,yBAC9DH,KAAKI,WAAa,QAClBJ,KAAKK,aAAe,MACpBL,KAAKM,SAAW,UAChBN,KAAKO,MAAQ,IACbP,KAAKQ,cAAgB,U,CAEzBC,oBACIT,KAAKG,sB,CAOTO,oB,OACIC,EAAAX,KAAKC,oBAAgB,MAAAU,SAAA,SAAAA,EAAEC,QAAQZ,KAAKa,GAAI,CAAEC,UAAW,OACrDd,KAAKG,sB,CAETY,uB,OACIJ,EAAAX,KAAKC,oBAAgB,MAAAU,SAAA,SAAAA,EAAEK,Y,CAE3BC,SACI,MAAMC,EAAclB,KAAKI,aAAe,cACxC,OAAQe,EAAE,MAAO,CAAEC,IAAK,2CAA4CC,MAAO,CACnE,yBAA0BH,EAC1BI,WAAYJ,IACXC,EAAE,OAAQ,CAAEC,IAAK,6C,CAO9BG,yBAAyBC,GACrBxB,KAAKyB,+BAA+BC,KAAK,CACrCC,uBAAwBH,EAAMI,OAAOD,yBAEzCH,EAAMK,iB,CAOV1B,uBACIH,KAAKa,GAAGiB,iBAAiB,0BAA0BC,SAASC,IACxDA,EAAK3B,aAAeL,KAAKK,aACzB2B,EAAK1B,SAAWN,KAAKM,SACrB0B,EAAKzB,MAAQP,KAAKO,KAAK,IAG3B0B,SAASC,cAAc,IAAIC,YAAY,qC"}