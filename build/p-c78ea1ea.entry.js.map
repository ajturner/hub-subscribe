{"version":3,"names":["CSS","actionGroupEnd","SLOTS","actionsEnd","bottomActions","expandTooltip","actionBarCss","ActionBar","constructor","hostRef","this","mutationObserver","createObserver","el","expanded","toggleChildActionText","overflowActions","resizeObserver","entries","resizeHandlerEntries","actionMenuOpenHandler","event","target","menuOpen","composedPath","Array","from","querySelectorAll","forEach","group","includes","resizeHandler","entry","width","height","contentRect","resize","debounce","expandDisabled","layout","overflowActionsDisabled","actions","queryActions","actionCount","length","actionGroups","setGroupLayout","groupCount","hasActionsEnd","hasBottomActions","actionHeight","actionWidth","geActionDimensions","overflowCount","getOverflowCount","overflowActionsDebounceInMs","toggleExpand","calciteActionBarToggle","emit","setExpandToggleRef","expandToggleEl","handleDefaultSlotChange","groups","slotChangeGetAssignedElements","filter","matches","handleActionsEndSlotChange","slotChangeHasAssignedElement","handleBottomActionsSlotChange","handleTooltipSlotChange","tooltips","actionsEndGroupLabel","undefined","overlayPositioning","position","scale","messages","messageOverrides","effectiveLocale","defaultMessages","expandHandler","expandedHandler","layoutHandler","updateGroups","overflowDisabledHandler","_a","disconnect","_b","observe","onMessagesChange","effectiveLocaleChange","updateMessages","componentDidLoad","setComponentLoaded","connectedCallback","connectLocalized","connectMessages","childList","subtree","connectConditionalSlotComponent","async","setUpLoadableComponent","setUpMessages","disconnectedCallback","disconnectConditionalSlotComponent","disconnectLocalized","disconnectMessages","clientWidth","clientHeight","componentFocusable","focusFirstTabbable","renderBottomActionGroup","expandToggleNode","h","ExpandToggle","collapseText","collapse","expandText","expand","toggle","tooltip","ref","class","hidden","label","name","onSlotchange","render","Host","key","onCalciteActionMenuOpen","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/action-bar/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/action-bar/action-bar.css?tag=calcite-action-bar&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/action-bar/action-bar.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nexport const CSS = {\n    actionGroupEnd: \"action-group--end\",\n};\nexport const SLOTS = {\n    actionsEnd: \"actions-end\",\n    bottomActions: \"bottom-actions\",\n    expandTooltip: \"expand-tooltip\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n  /* Base \":host\" styles for the component */\n  box-sizing: border-box;\n  background-color: var(--calcite-color-foreground-1);\n  color: var(--calcite-color-text-2);\n  font-size: var(--calcite-font-size--1);\n}\n:host * {\n  box-sizing: border-box;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-action-bar-expanded-max-width: When `layout` is `\"vertical\"`, specifies the expanded max width of the component.\n*/\n:host {\n  pointer-events: auto;\n  display: inline-flex;\n  align-self: stretch;\n  --calcite-action-bar-expanded-max-width: auto;\n}\n\n:host([layout=vertical]) {\n  flex-direction: column;\n}\n:host([layout=vertical]) .action-group--end {\n  margin-block-start: auto;\n}\n\n:host([layout=horizontal]) {\n  flex-direction: row;\n}\n:host([layout=horizontal]) .action-group--end {\n  margin-inline-start: auto;\n}\n\n:host([layout=vertical][overflow-actions-disabled]) {\n  overflow-y: auto;\n}\n\n:host([layout=horizontal][overflow-actions-disabled]) {\n  overflow-x: auto;\n}\n\n:host([layout=vertical][expanded]) {\n  max-inline-size: var(--calcite-action-bar-expanded-max-width);\n}\n\n::slotted(calcite-action-group) {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n:host([layout=horizontal]) ::slotted(calcite-action-group) {\n  border-block-end: 0;\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n}\n\n:host([layout=horizontal][expand-disabled]) ::slotted(calcite-action-group:last-of-type) {\n  border-inline-end: 0;\n}\n\n::slotted(calcite-action-group:last-child) {\n  border-block-end: 0;\n  border-inline-end: 0;\n}\n\n.action-group--end {\n  justify-content: flex-end;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport { connectConditionalSlotComponent, disconnectConditionalSlotComponent, } from \"../../utils/conditionalSlot\";\nimport { focusFirstTabbable, slotChangeGetAssignedElements, slotChangeHasAssignedElement, } from \"../../utils/dom\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { ExpandToggle, toggleChildActionText } from \"../functional/ExpandToggle\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { geActionDimensions, getOverflowCount, overflowActions, overflowActionsDebounceInMs, queryActions, } from \"./utils\";\n/**\n * @slot - A slot for adding `calcite-action`s that will appear at the top of the component.\n * @slot bottom-actions - [Deprecated] Use the `\"actions-end\"` slot instead. A slot for adding `calcite-action`s that will appear at the bottom of the component, above the collapse/expand button.\n * @slot actions-end - A slot for adding `calcite-action`s that will appear at the end of the component, prior to the collapse/expand button.\n * @slot expand-tooltip - A slot to set the `calcite-tooltip` for the expand toggle.\n */\nexport class ActionBar {\n    constructor() {\n        this.mutationObserver = createObserver(\"mutation\", () => {\n            const { el, expanded } = this;\n            toggleChildActionText({ el, expanded });\n            this.overflowActions();\n        });\n        this.resizeObserver = createObserver(\"resize\", (entries) => this.resizeHandlerEntries(entries));\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.actionMenuOpenHandler = (event) => {\n            if (event.target.menuOpen) {\n                const composedPath = event.composedPath();\n                Array.from(this.el.querySelectorAll(\"calcite-action-group\")).forEach((group) => {\n                    if (!composedPath.includes(group)) {\n                        group.menuOpen = false;\n                    }\n                });\n            }\n        };\n        this.resizeHandlerEntries = (entries) => {\n            entries.forEach(this.resizeHandler);\n        };\n        this.resizeHandler = (entry) => {\n            const { width, height } = entry.contentRect;\n            this.resize({ width, height });\n        };\n        this.resize = debounce(({ width, height }) => {\n            const { el, expanded, expandDisabled, layout, overflowActionsDisabled } = this;\n            if (overflowActionsDisabled ||\n                (layout === \"vertical\" && !height) ||\n                (layout === \"horizontal\" && !width)) {\n                return;\n            }\n            const actions = queryActions(el);\n            const actionCount = expandDisabled ? actions.length : actions.length + 1;\n            const actionGroups = Array.from(el.querySelectorAll(\"calcite-action-group\"));\n            this.setGroupLayout(actionGroups);\n            const groupCount = this.hasActionsEnd || this.hasBottomActions || !expandDisabled\n                ? actionGroups.length + 1\n                : actionGroups.length;\n            const { actionHeight, actionWidth } = geActionDimensions(actions);\n            const overflowCount = getOverflowCount({\n                layout,\n                actionCount,\n                actionHeight,\n                actionWidth,\n                height,\n                width,\n                groupCount,\n            });\n            overflowActions({\n                actionGroups,\n                expanded,\n                overflowCount,\n            });\n        }, overflowActionsDebounceInMs);\n        this.toggleExpand = () => {\n            this.expanded = !this.expanded;\n            this.calciteActionBarToggle.emit();\n        };\n        this.setExpandToggleRef = (el) => {\n            this.expandToggleEl = el;\n        };\n        this.handleDefaultSlotChange = (event) => {\n            const groups = slotChangeGetAssignedElements(event).filter((el) => el.matches(\"calcite-action-group\"));\n            this.setGroupLayout(groups);\n        };\n        this.handleActionsEndSlotChange = (event) => {\n            this.hasActionsEnd = slotChangeHasAssignedElement(event);\n        };\n        this.handleBottomActionsSlotChange = (event) => {\n            this.hasBottomActions = slotChangeHasAssignedElement(event);\n        };\n        this.handleTooltipSlotChange = (event) => {\n            const tooltips = slotChangeGetAssignedElements(event).filter((el) => el?.matches(\"calcite-tooltip\"));\n            this.expandTooltip = tooltips[0];\n        };\n        this.actionsEndGroupLabel = undefined;\n        this.expandDisabled = false;\n        this.expanded = false;\n        this.layout = \"vertical\";\n        this.overflowActionsDisabled = false;\n        this.overlayPositioning = \"absolute\";\n        this.position = undefined;\n        this.scale = undefined;\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.effectiveLocale = undefined;\n        this.hasActionsEnd = false;\n        this.hasBottomActions = false;\n        this.expandTooltip = undefined;\n        this.defaultMessages = undefined;\n    }\n    expandHandler() {\n        this.overflowActions();\n    }\n    expandedHandler() {\n        const { el, expanded } = this;\n        toggleChildActionText({ el, expanded });\n        this.overflowActions();\n    }\n    layoutHandler() {\n        this.updateGroups();\n    }\n    overflowDisabledHandler(overflowActionsDisabled) {\n        if (overflowActionsDisabled) {\n            this.resizeObserver?.disconnect();\n            return;\n        }\n        this.resizeObserver?.observe(this.el);\n        this.overflowActions();\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    componentDidLoad() {\n        const { el, expanded } = this;\n        setComponentLoaded(this);\n        toggleChildActionText({ el, expanded });\n        this.overflowActions();\n    }\n    connectedCallback() {\n        const { el, expanded } = this;\n        connectLocalized(this);\n        connectMessages(this);\n        toggleChildActionText({ el, expanded });\n        this.mutationObserver?.observe(el, { childList: true, subtree: true });\n        if (!this.overflowActionsDisabled) {\n            this.resizeObserver?.observe(el);\n        }\n        this.overflowActions();\n        connectConditionalSlotComponent(this);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        await setUpMessages(this);\n    }\n    disconnectedCallback() {\n        this.mutationObserver?.disconnect();\n        this.resizeObserver?.disconnect();\n        disconnectConditionalSlotComponent(this);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Methods\n    //\n    // --------------------------------------------------------------------------\n    /**\n     * Overflows actions that won't fit into menus.\n     *\n     * @internal\n     */\n    async overflowActions() {\n        this.resize({ width: this.el.clientWidth, height: this.el.clientHeight });\n    }\n    /**\n     * Sets focus on the component's first focusable element.\n     */\n    async setFocus() {\n        await componentFocusable(this);\n        focusFirstTabbable(this.el);\n    }\n    updateGroups() {\n        this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\")));\n    }\n    setGroupLayout(groups) {\n        groups.forEach((group) => (group.layout = this.layout));\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    renderBottomActionGroup() {\n        const { expanded, expandDisabled, el, position, toggleExpand, scale, layout, messages, actionsEndGroupLabel, overlayPositioning, } = this;\n        const expandToggleNode = !expandDisabled ? (h(ExpandToggle, { collapseText: messages.collapse, el: el, expandText: messages.expand, expanded: expanded, position: position, scale: scale, toggle: toggleExpand, tooltip: this.expandTooltip,\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: this.setExpandToggleRef })) : null;\n        return (h(\"calcite-action-group\", { class: CSS.actionGroupEnd, hidden: this.expandDisabled && !(this.hasActionsEnd || this.hasBottomActions), label: actionsEndGroupLabel, layout: layout, overlayPositioning: overlayPositioning, scale: scale }, h(\"slot\", { name: SLOTS.actionsEnd, onSlotchange: this.handleActionsEndSlotChange }), h(\"slot\", { name: SLOTS.bottomActions, onSlotchange: this.handleBottomActionsSlotChange }), h(\"slot\", { name: SLOTS.expandTooltip, onSlotchange: this.handleTooltipSlotChange }), expandToggleNode));\n    }\n    render() {\n        return (h(Host, { key: '578047ec3165559551c136005f1553bb216ecf57', onCalciteActionMenuOpen: this.actionMenuOpenHandler }, h(\"slot\", { key: '74768d564c8f7041d4e0e49c4b117875cb65273f', onSlotchange: this.handleDefaultSlotChange }), this.renderBottomActionGroup()));\n    }\n    static get is() { return \"calcite-action-bar\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"action-bar.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"action-bar.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"actionsEndGroupLabel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the accessible label for the last `calcite-action-group`.\"\n                },\n                \"attribute\": \"actions-end-group-label\",\n                \"reflect\": false\n            },\n            \"expandDisabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the expand-toggling behavior is disabled.\"\n                },\n                \"attribute\": \"expand-disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"expanded\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component is expanded.\"\n                },\n                \"attribute\": \"expanded\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"layout\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"horizontal\\\" | \\\"vertical\\\", Layout>\",\n                    \"resolved\": \"\\\"horizontal\\\" | \\\"vertical\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Layout\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Layout\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the layout direction of the actions.\"\n                },\n                \"attribute\": \"layout\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"vertical\\\"\"\n            },\n            \"overflowActionsDisabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Disables automatically overflowing `calcite-action`s that won't fit into menus.\"\n                },\n                \"attribute\": \"overflow-actions-disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"overlayPositioning\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"OverlayPositioning\",\n                    \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n                    \"references\": {\n                        \"OverlayPositioning\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::OverlayPositioning\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n\\n`\\\"fixed\\\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n                },\n                \"attribute\": \"overlay-positioning\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"absolute\\\"\"\n            },\n            \"position\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Position\",\n                    \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Position\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Position\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Arranges the component depending on the element's `dir` property.\"\n                },\n                \"attribute\": \"position\",\n                \"reflect\": true\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the expand `calcite-action`.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"ActionBarMessages\",\n                    \"resolved\": \"{ expand: string; collapse: string; }\",\n                    \"references\": {\n                        \"ActionBarMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/action-bar/t9n\",\n                            \"id\": \"src/components/action-bar/assets/action-bar/t9n/index.d.ts::ActionBarMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<ActionBarMessages>\",\n                    \"resolved\": \"{ expand?: string; collapse?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"ActionBarMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/action-bar/t9n\",\n                            \"id\": \"src/components/action-bar/assets/action-bar/t9n/index.d.ts::ActionBarMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"effectiveLocale\": {},\n            \"hasActionsEnd\": {},\n            \"hasBottomActions\": {},\n            \"expandTooltip\": {},\n            \"defaultMessages\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteActionBarToggle\",\n                \"name\": \"calciteActionBarToggle\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the `expanded` property is toggled.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"overflowActions\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Overflows actions that won't fit into menus.\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's first focusable element.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"expandDisabled\",\n                \"methodName\": \"expandHandler\"\n            }, {\n                \"propName\": \"expanded\",\n                \"methodName\": \"expandedHandler\"\n            }, {\n                \"propName\": \"layout\",\n                \"methodName\": \"layoutHandler\"\n            }, {\n                \"propName\": \"overflowActionsDisabled\",\n                \"methodName\": \"overflowDisabledHandler\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=action-bar.js.map\n"],"mappings":"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"}