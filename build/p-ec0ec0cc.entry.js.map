{"version":3,"names":["getBreadcrumbIconFromTitle","title","test","getBreadcrumbsFromPath","path","pathArray","replace","split","filter","item","console","debug","breadcrumbs","map","index","link","slice","join","icon","arcgisHubNavigationBreadcrumbsCss","ArcgisHubNavigationBreadcrumbs","domain","componentWillRender","this","navigation","render","h","Host","renderBreadcrumbs","renderShell","slot","description","heading","breadcrumb","length","active","text","href","createBreadcrumbHref","label","url","URL"],"sources":["./src/library/breadcrumbs.ts","./src/components/arcgis-hub-navigation-breadcrumbs/arcgis-hub-navigation-breadcrumbs.css?tag=arcgis-hub-navigation-breadcrumbs&encapsulation=shadow","./src/components/arcgis-hub-navigation-breadcrumbs/arcgis-hub-navigation-breadcrumbs.tsx"],"sourcesContent":["// Library for Hub navigation breadcrumbs\n\nexport interface IHubBreadcrumb {\n  title: string;\n  link: string;\n  icon: string;\n}\n\nfunction getBreadcrumbIconFromTitle(title: string): string {\n    switch(true) {\n        case /data/.test(title):\n            return \"data\"\n        case /pages/.test(title):\n            return \"file-text\";\n        default:\n            return \"apps\";\n    }\n}\n\nexport function getBreadcrumbsFromPath(path: string): Array<IHubBreadcrumb> {\n    const pathArray = path.replace(/^\\//,'').split('/').filter(item => item !== '');\n    console.debug('getBreadcrumbsFromPath: path', [path, path.replace(/^\\//,''), pathArray]);\n    const breadcrumbs = pathArray.map((path, index) => {\n    return {\n      title: path,\n      link: pathArray.slice(0, index + 1).join('/'),\n      icon: getBreadcrumbIconFromTitle(path),\n    };\n  });\n  return breadcrumbs;\n}",":host {\n  display: block;\n}\n\n.container.primary, .container.secondary, .container.tertiary {\n  border: 0;\n}","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { IHubBreadcrumb, getBreadcrumbsFromPath } from '../../library/breadcrumbs';\n\nexport interface IHubNavigation {\n  domain: string;\n  breadcrumbs: Array<IHubBreadcrumb>;\n}\n\n@Component({\n  tag: 'arcgis-hub-navigation-breadcrumbs',\n  styleUrl: 'arcgis-hub-navigation-breadcrumbs.css',\n  shadow: true,\n})\nexport class ArcgisHubNavigationBreadcrumbs {\n\n  /**\n   * Structured list of breadcrumbs\n   */\n  @Prop() navigation: IHubNavigation = {breadcrumbs: [], domain: 'https://hub.arcgis.com'};\n\n  /**\n   * Optional URL or path to turn into breadcrumbs\n   * \n   */\n  @Prop() path: string = null;\n\n  /**\n   * Compile list of breadcrumbs\n   */\n  @State() breadcrumbs: Array<IHubBreadcrumb> = [];\n\n  componentWillRender() {\n    if(this.path) {\n      console.debug('arcgis-hub-navigation-breadcrumbs: path', this.path);\n      this.breadcrumbs = [...this.navigation.breadcrumbs, ...getBreadcrumbsFromPath(this.path)];\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        {this.renderBreadcrumbs()}\n      </Host>\n    );\n  }\n  // For demo purposes\n  renderShell() {\n    return(\n        \n            <calcite-navigation slot=\"header\">\n                <calcite-navigation-logo slot=\"logo\" description=\"ArcGIS Hub\" heading=\"City of Asheville\">\n                </calcite-navigation-logo>\n                {this.renderBreadcrumbs()}\n            </calcite-navigation>\n        \n    )    \n  }\n\n  renderBreadcrumbs() {\n    return(\n      <calcite-navigation slot=\"navigation-secondary\">\n          <calcite-menu slot=\"content-start\">\n            {this.breadcrumbs.map((breadcrumb, index) => {\n              return(\n                <calcite-menu-item\n                  breadcrumb={index !== this.breadcrumbs.length-1} // don't show the breadcrumb icon for the last item\n                  active={index === this.breadcrumbs.length-1} // don't show the breadcrumb icon for the last item\n                  text={breadcrumb.title}\n                  href={this.createBreadcrumbHref(breadcrumb)}\n                  icon-start={breadcrumb.icon} \n                  label={`${breadcrumb.title}Label`}\n                  text-enabled\n                ></calcite-menu-item>)\n            })}\n          </calcite-menu>\n      </calcite-navigation>\n\n    )\n    \n  }\n\n\n  private createBreadcrumbHref(breadcrumb: IHubBreadcrumb) {\n    let domain = this.navigation.domain;\n    if (!/^https?:\\/\\//i.test(domain)) {\n      domain = 'http://' + domain;\n    }\n    // return `${this.navigation.domain}/${breadcrumb.link}`;\n    const url = new URL(breadcrumb.link, domain);\n    return url.href;\n  }\n}\n"],"mappings":"kDAQA,SAASA,EAA2BC,GAChC,OAAO,MACH,IAAK,OAAOC,KAAKD,GACb,MAAO,OACX,IAAK,QAAQC,KAAKD,GACd,MAAO,YACX,QACI,MAAO,OAEnB,C,SAEgBE,EAAuBC,GACnC,MAAMC,EAAYD,EAAKE,QAAQ,MAAM,IAAIC,MAAM,KAAKC,QAAOC,GAAQA,IAAS,KAC5EC,QAAQC,MAAM,+BAAgC,CAACP,EAAMA,EAAKE,QAAQ,MAAM,IAAKD,IAC7E,MAAMO,EAAcP,EAAUQ,KAAI,CAACT,EAAMU,KAClC,CACLb,MAAOG,EACPW,KAAMV,EAAUW,MAAM,EAAGF,EAAQ,GAAGG,KAAK,KACzCC,KAAMlB,EAA2BI,OAGrC,OAAOQ,CACT,CC9BA,MAAMO,EAAoC,4F,MCa7BC,EAA8B,M,yCAKJ,CAACR,YAAa,GAAIS,OAAQ,0B,UAMxC,K,iBAKuB,E,CAE9CC,sBACE,GAAGC,KAAKnB,KAAM,CACZM,QAAQC,MAAM,0CAA2CY,KAAKnB,MAC9DmB,KAAKX,YAAc,IAAIW,KAAKC,WAAWZ,eAAgBT,EAAuBoB,KAAKnB,M,EAIvFqB,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,aACCH,KAAKK,oB,CAKZC,cACE,OAEQH,EAAA,sBAAoBI,KAAK,UACrBJ,EAAA,2BAAyBI,KAAK,OAAOC,YAAY,aAAaC,QAAQ,sBAErET,KAAKK,oB,CAMpBA,oBACE,OACEF,EAAA,sBAAoBI,KAAK,wBACrBJ,EAAA,gBAAcI,KAAK,iBAChBP,KAAKX,YAAYC,KAAI,CAACoB,EAAYnB,IAE/BY,EAAA,qBACEO,WAAYnB,IAAUS,KAAKX,YAAYsB,OAAO,EAC9CC,OAAQrB,IAAUS,KAAKX,YAAYsB,OAAO,EAC1CE,KAAMH,EAAWhC,MACjBoC,KAAMd,KAAKe,qBAAqBL,GAAW,aAC/BA,EAAWf,KACvBqB,MAAO,GAAGN,EAAWhC,aAAY,yB,CAYzCqC,qBAAqBL,GAC3B,IAAIZ,EAASE,KAAKC,WAAWH,OAC7B,IAAK,gBAAgBnB,KAAKmB,GAAS,CACjCA,EAAS,UAAYA,C,CAGvB,MAAMmB,EAAM,IAAIC,IAAIR,EAAWlB,KAAMM,GACrC,OAAOmB,EAAIH,I"}