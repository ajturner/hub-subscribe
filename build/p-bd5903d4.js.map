{"version":3,"names":["isOpen","component","opened","open","emitImmediately","nonOpenCloseComponent","transitionProp","onBeforeOpen","onBeforeClose","onOpen","onClose","onToggleOpenCloseComponent","readTask","transitionEl","transitionDuration","allDurations","transitionProperty","allProps","getComputedStyle","allTransitionDurationsArray","split","allTransitionPropsArray","openTransitionPropIndex","indexOf","openTransitionProp","fallbackTimeoutId","setTimeout","removeEventListener","onStart","onEndOrCancel","parseFloat","addEventListener","event","propertyName","target","clearTimeout"],"sources":["./node_modules/@esri/calcite-components/dist/collection/utils/openCloseComponent.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { readTask } from \"@stencil/core\";\nconst componentToTransitionListeners = new WeakMap();\nfunction transitionStart(event) {\n    if (event.propertyName === this.openTransitionProp && event.target === this.transitionEl) {\n        isOpen(this) ? this.onBeforeOpen() : this.onBeforeClose();\n    }\n}\nfunction transitionEnd(event) {\n    if (event.propertyName === this.openTransitionProp && event.target === this.transitionEl) {\n        isOpen(this) ? this.onOpen() : this.onClose();\n    }\n}\nfunction isOpen(component) {\n    return \"opened\" in component ? component.opened : component.open;\n}\nfunction emitImmediately(component, nonOpenCloseComponent = false) {\n    (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))\n        ? component.onBeforeOpen()\n        : component.onBeforeClose();\n    (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))\n        ? component.onOpen()\n        : component.onClose();\n}\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n * @param nonOpenCloseComponent - OpenCloseComponent uses `expanded` prop to emit (before)open/close.\n */\nexport function onToggleOpenCloseComponent(component, nonOpenCloseComponent = false) {\n    readTask(() => {\n        if (component.transitionEl) {\n            const { transitionDuration: allDurations, transitionProperty: allProps } = getComputedStyle(component.transitionEl);\n            const allTransitionDurationsArray = allDurations.split(\",\");\n            const allTransitionPropsArray = allProps.split(\",\");\n            const openTransitionPropIndex = allTransitionPropsArray.indexOf(component.openTransitionProp);\n            const transitionDuration = allTransitionDurationsArray[openTransitionPropIndex] ??\n                /* Safari will have a single transition value if multiple props share it,\n                so we fall back to it if there's no matching prop duration */\n                allTransitionDurationsArray[0];\n            if (transitionDuration === \"0s\") {\n                emitImmediately(component, nonOpenCloseComponent);\n                return;\n            }\n            const fallbackTimeoutId = setTimeout(() => {\n                component.transitionEl.removeEventListener(\"transitionstart\", onStart);\n                component.transitionEl.removeEventListener(\"transitionend\", onEndOrCancel);\n                component.transitionEl.removeEventListener(\"transitioncancel\", onEndOrCancel);\n                emitImmediately(component, nonOpenCloseComponent);\n            }, parseFloat(transitionDuration) * 1000);\n            component.transitionEl.addEventListener(\"transitionstart\", onStart);\n            component.transitionEl.addEventListener(\"transitionend\", onEndOrCancel);\n            component.transitionEl.addEventListener(\"transitioncancel\", onEndOrCancel);\n            function onStart(event) {\n                if (event.propertyName === component.openTransitionProp && event.target === component.transitionEl) {\n                    clearTimeout(fallbackTimeoutId);\n                    component.transitionEl.removeEventListener(\"transitionstart\", onStart);\n                    (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))\n                        ? component.onBeforeOpen()\n                        : component.onBeforeClose();\n                }\n            }\n            function onEndOrCancel(event) {\n                if (event.propertyName === component.openTransitionProp && event.target === component.transitionEl) {\n                    (nonOpenCloseComponent ? component[component.transitionProp] : isOpen(component))\n                        ? component.onOpen()\n                        : component.onClose();\n                    component.transitionEl.removeEventListener(\"transitionend\", onEndOrCancel);\n                    component.transitionEl.removeEventListener(\"transitioncancel\", onEndOrCancel);\n                }\n            }\n        }\n    });\n}\n/**\n * Helper to keep track of transition listeners on setTransitionEl and connectedCallback on OpenCloseComponent components.\n *\n * For component which do not have open prop, use `onToggleOpenCloseComponent` implementation.\n *\n * @param component\n * @deprecated Call `onToggleOpenClose` in `componentWillLoad` and `open` property watchers instead.\n */\nexport function connectOpenCloseComponent(component) {\n    disconnectOpenCloseComponent(component);\n    if (component.transitionEl) {\n        const boundOnTransitionStart = transitionStart.bind(component);\n        const boundOnTransitionEnd = transitionEnd.bind(component);\n        componentToTransitionListeners.set(component, [\n            component.transitionEl,\n            boundOnTransitionStart,\n            boundOnTransitionEnd,\n        ]);\n        component.transitionEl.addEventListener(\"transitionstart\", boundOnTransitionStart);\n        component.transitionEl.addEventListener(\"transitionend\", boundOnTransitionEnd);\n    }\n}\n/**\n * Helper to tear down transition listeners on disconnectedCallback on OpenCloseComponent components.\n *\n * @param component\n * @deprecated Call `onToggleOpenClose` in `componentWillLoad` and `open` property watchers instead.\n */\nexport function disconnectOpenCloseComponent(component) {\n    if (!componentToTransitionListeners.has(component)) {\n        return;\n    }\n    const [transitionEl, start, end] = componentToTransitionListeners.get(component);\n    transitionEl.removeEventListener(\"transitionstart\", start);\n    transitionEl.removeEventListener(\"transitionend\", end);\n    componentToTransitionListeners.delete(component);\n}\n//# sourceMappingURL=openCloseComponent.js.map\n"],"mappings":";;;;;GAiBA,SAASA,EAAOC,GACZ,MAAO,WAAYA,EAAYA,EAAUC,OAASD,EAAUE,IAChE,CACA,SAASC,EAAgBH,EAAWI,EAAwB,QACvDA,EAAwBJ,EAAUA,EAAUK,gBAAkBN,EAAOC,IAChEA,EAAUM,eACVN,EAAUO,iBACfH,EAAwBJ,EAAUA,EAAUK,gBAAkBN,EAAOC,IAChEA,EAAUQ,SACVR,EAAUS,SACpB,CAqBO,SAASC,EAA2BV,EAAWI,EAAwB,OAC1EO,GAAS,KACL,GAAIX,EAAUY,aAAc,CACxB,MAAQC,mBAAoBC,EAAcC,mBAAoBC,GAAaC,iBAAiBjB,EAAUY,cACtG,MAAMM,EAA8BJ,EAAaK,MAAM,KACvD,MAAMC,EAA0BJ,EAASG,MAAM,KAC/C,MAAME,EAA0BD,EAAwBE,QAAQtB,EAAUuB,oBAC1E,MAAMV,EAAqBK,EAA4BG,IAGnDH,EAA4B,GAChC,GAAIL,IAAuB,KAAM,CAC7BV,EAAgBH,EAAWI,GAC3B,MAChB,CACY,MAAMoB,EAAoBC,YAAW,KACjCzB,EAAUY,aAAac,oBAAoB,kBAAmBC,GAC9D3B,EAAUY,aAAac,oBAAoB,gBAAiBE,GAC5D5B,EAAUY,aAAac,oBAAoB,mBAAoBE,GAC/DzB,EAAgBH,EAAWI,EAAsB,GAClDyB,WAAWhB,GAAsB,KACpCb,EAAUY,aAAakB,iBAAiB,kBAAmBH,GAC3D3B,EAAUY,aAAakB,iBAAiB,gBAAiBF,GACzD5B,EAAUY,aAAakB,iBAAiB,mBAAoBF,GAC5D,SAASD,EAAQI,GACb,GAAIA,EAAMC,eAAiBhC,EAAUuB,oBAAsBQ,EAAME,SAAWjC,EAAUY,aAAc,CAChGsB,aAAaV,GACbxB,EAAUY,aAAac,oBAAoB,kBAAmBC,IAC7DvB,EAAwBJ,EAAUA,EAAUK,gBAAkBN,EAAOC,IAChEA,EAAUM,eACVN,EAAUO,eACpC,CACA,CACY,SAASqB,EAAcG,GACnB,GAAIA,EAAMC,eAAiBhC,EAAUuB,oBAAsBQ,EAAME,SAAWjC,EAAUY,aAAc,EAC/FR,EAAwBJ,EAAUA,EAAUK,gBAAkBN,EAAOC,IAChEA,EAAUQ,SACVR,EAAUS,UAChBT,EAAUY,aAAac,oBAAoB,gBAAiBE,GAC5D5B,EAAUY,aAAac,oBAAoB,mBAAoBE,EACnF,CACA,CACA,IAEA,Q"}