{"version":3,"names":["CSS","loader","clearButton","editingEnabled","inlineChild","inputIcon","prefix","suffix","numberButtonWrapper","buttonItemHorizontal","wrapper","inputWrapper","actionWrapper","resizeIconWrapper","numberButtonItem","SLOTS","action","inputNumberCss","InputNumber","constructor","hostRef","this","previousValueOrigin","mutationObserver","createObserver","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","key","clearInputValue","preventDefault","submitForm","nativeEvent","setNumberValue","committing","origin","value","emitChangeIfUserModified","previousEmittedNumberValue","calciteInputNumberChange","emit","setPreviousEmittedNumberValue","inputNumberBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputNumberBlur","clickHandler","slottedActionEl","getSlotted","el","target","setFocus","inputNumberFocusHandler","calciteInternalInputNumberFocus","inputNumberInputHandler","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","integer","includes","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","decimal","indexOf","test","split","length","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","valueNudgeDelayInMs","incrementOrDecrementNumberValue","firstValueNudge","setInterval","nudgeButtonPointerUpHandler","isPrimaryPointerButton","nudgeButtonPointerOutHandler","nudgeButtonPointerDownHandler","dataset","adjustment","onHiddenFormInputInput","name","stopPropagation","setChildNumberElRef","setInputNumberValue","newInputValue","normalizeValue","setPreviousNumberValue","previousValue","isValueDeleted","_a","_b","valueHandleInteger","replace","hasTrailingDecimalSeparator","charAt","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","calciteInputNumberInputEvent","calciteInputNumberInput","inputNumberKeyUpHandler","alignment","clearable","form","undefined","icon","iconFlipRtl","label","loading","localeFormat","max","min","maxLength","minLength","validationMessage","validationIcon","validity","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","numberButtonType","placeholder","prefixText","required","scale","status","step","autocomplete","suffixText","messages","messageOverrides","defaultMessages","slottedActionElDisabledInternally","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","maxWatcher","toString","minWatcher","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","requestedIcon","setRequestedIcon","effectiveLocaleWatcher","updateMessages","connectedCallback","connectInteractive","connectLocalized","connectMessages","inlineEditableEl","closest","connectLabel","connectForm","observe","childList","addEventListener","internalHiddenInputInputEvent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","async","setUpLoadableComponent","setUpMessages","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","componentFocusable","focus","select","onLabelClick","stepHandleInteger","Math","round","inputStep","abs","inputVal","BigDecimal","nudgedValue","add","nudgedValueBelowInputMin","isNaN","subtract","isNegative","nudgedValueAboveInputMax","finalValue","syncHiddenFormInput","input","getAttribute","setAttribute","removeAttribute","console","warn","render","dir","getElementDir","h","class","type","inputClearButton","clear","onClick","tabIndex","getIconScale","iconEl","flipRtl","isHorizontalNumberButton","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","childEl","getLabelText","autofocus","defaultValue","enterKeyHint","inputMode","onBlur","onFocus","onInput","onKeyDown","onKeyUp","ref","Host","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","Validation","message","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/input-number/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/input-number/input-number.css?tag=calcite-input-number&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/input-number/input-number.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nexport const CSS = {\n    loader: \"loader\",\n    clearButton: \"clear-button\",\n    editingEnabled: \"editing-enabled\",\n    inlineChild: \"inline-child\",\n    inputIcon: \"icon\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    numberButtonWrapper: \"number-button-wrapper\",\n    buttonItemHorizontal: \"number-button-item--horizontal\",\n    wrapper: \"element-wrapper\",\n    inputWrapper: \"wrapper\",\n    actionWrapper: \"action-wrapper\",\n    resizeIconWrapper: \"resize-icon-wrapper\",\n    numberButtonItem: \"number-button-item\",\n};\nexport const SLOTS = {\n    action: \"action\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host {\n  display: block;\n}\n\n:host([scale=s]) input, :host([scale=s]) .prefix, :host([scale=s]) .suffix {\n  block-size: 1.5rem;\n  padding-inline: 0.5rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n}\n:host([scale=s]) .number-button-wrapper, :host([scale=s]) .action-wrapper calcite-button, :host([scale=s]) .action-wrapper calcite-button button {\n  block-size: 1.5rem;\n}\n:host([scale=s]) .clear-button {\n  min-block-size: 1.5rem;\n  min-inline-size: 1.5rem;\n}\n\n:host([scale=m]) input, :host([scale=m]) .prefix, :host([scale=m]) .suffix {\n  block-size: 2rem;\n  padding-inline: 0.75rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}\n:host([scale=m]) .number-button-wrapper, :host([scale=m]) .action-wrapper calcite-button, :host([scale=m]) .action-wrapper calcite-button button {\n  block-size: 2rem;\n}\n:host([scale=m]) .clear-button {\n  min-block-size: 2rem;\n  min-inline-size: 2rem;\n}\n\n:host([scale=l]) input, :host([scale=l]) .prefix, :host([scale=l]) .suffix {\n  block-size: 2.75rem;\n  padding-inline: 1rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.25rem;\n}\n:host([scale=l]) .number-button-wrapper, :host([scale=l]) .action-wrapper calcite-button, :host([scale=l]) .action-wrapper calcite-button button {\n  block-size: 2.75rem;\n}\n:host([scale=l]) .clear-button {\n  min-block-size: 2.75rem;\n  min-inline-size: 2.75rem;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\ninput {\n  transition: var(--calcite-animation-timing), block-size 0, outline-offset 0s;\n  -webkit-appearance: none;\n  position: relative;\n  margin: 0px;\n  box-sizing: border-box;\n  display: flex;\n  max-block-size: 100%;\n  inline-size: 100%;\n  max-inline-size: 100%;\n  flex: 1 1 0%;\n  text-overflow: ellipsis;\n  border-radius: 0px;\n  background-color: var(--calcite-color-foreground-1);\n  font-family: inherit;\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-color-text-1);\n}\ninput:placeholder-shown {\n  text-overflow: ellipsis;\n}\n\ninput {\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  color: var(--calcite-color-text-1);\n}\ninput::placeholder, input:-ms-input-placeholder, input::-ms-input-placeholder {\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-color-text-3);\n}\n\ninput:focus {\n  border-color: var(--calcite-color-brand);\n  color: var(--calcite-color-text-1);\n}\n\ninput[readonly] {\n  background-color: var(--calcite-color-background);\n  font-weight: var(--calcite-font-weight-medium);\n}\n\ninput[readonly]:focus {\n  color: var(--calcite-color-text-1);\n}\n\ncalcite-icon {\n  color: var(--calcite-color-text-3);\n}\n\ninput {\n  outline-color: transparent;\n}\n\ninput:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n:host([status=invalid]) input {\n  border-color: var(--calcite-color-status-danger);\n}\n:host([status=invalid]) input:focus {\n  outline: 2px solid var(--calcite-color-status-danger);\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n:host([scale=s]) .icon {\n  inset-inline-start: 0.5rem;\n}\n\n:host([scale=m]) .icon {\n  inset-inline-start: 0.75rem;\n}\n\n:host([scale=l]) .icon {\n  inset-inline-start: 1rem;\n}\n\n:host([icon][scale=s]) input {\n  padding-inline-start: 2rem;\n}\n\n:host([icon][scale=m]) input {\n  padding-inline-start: 2.5rem;\n}\n\n:host([icon][scale=l]) input {\n  padding-inline-start: 3.5rem;\n}\n\n.element-wrapper {\n  position: relative;\n  order: 3;\n  display: inline-flex;\n  flex: 1 1 0%;\n  align-items: center;\n}\n\n.icon {\n  pointer-events: none;\n  position: absolute;\n  z-index: var(--calcite-z-index);\n  display: block;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n\n.clear-button {\n  pointer-events: initial;\n  order: 4;\n  margin: 0px;\n  box-sizing: border-box;\n  display: flex;\n  min-block-size: 100%;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  align-self: stretch;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-foreground-1);\n  outline-color: transparent;\n  border-inline-start-width: 0px;\n}\n.clear-button:hover {\n  background-color: var(--calcite-color-foreground-2);\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n.clear-button:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n.clear-button:active {\n  background-color: var(--calcite-color-foreground-3);\n}\n.clear-button:active calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n.clear-button:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n.clear-button:disabled {\n  opacity: var(--calcite-opacity-disabled);\n}\n\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  pointer-events: none;\n  position: absolute;\n  display: block;\n}\n\n.action-wrapper {\n  order: 7;\n  display: flex;\n}\n\n.prefix,\n.suffix {\n  box-sizing: border-box;\n  display: flex;\n  block-size: auto;\n  min-block-size: 100%;\n  -webkit-user-select: none;\n          user-select: none;\n  align-content: center;\n  align-items: center;\n  overflow-wrap: break-word;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-background);\n  font-weight: var(--calcite-font-weight-medium);\n  line-height: 1;\n  color: var(--calcite-color-text-2);\n}\n\n.prefix {\n  order: 2;\n  border-inline-end-width: 0px;\n}\n\n.suffix {\n  order: 5;\n  border-inline-start-width: 0px;\n}\n\n:host([alignment=start]) input {\n  text-align: start;\n}\n\n:host([alignment=end]) input {\n  text-align: end;\n}\n\n.number-button-wrapper {\n  pointer-events: none;\n  order: 6;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n\n:host([number-button-type=vertical]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=vertical]) input {\n  order: 2;\n}\n\n:host([number-button-type=horizontal]) .calcite--rtl .number-button-item[data-adjustment=down] calcite-icon {\n  transform: rotate(-90deg);\n}\n:host([number-button-type=horizontal]) .calcite--rtl .number-button-item[data-adjustment=up] calcite-icon {\n  transform: rotate(-90deg);\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=down], .number-button-item.number-button-item--horizontal[data-adjustment=up] {\n  order: 1;\n  max-block-size: 100%;\n  min-block-size: 100%;\n  align-self: stretch;\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=down] calcite-icon, .number-button-item.number-button-item--horizontal[data-adjustment=up] calcite-icon {\n  transform: rotate(90deg);\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=down] {\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  border-inline-end-width: 0px;\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=down]:hover {\n  background-color: var(--calcite-color-foreground-2);\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=down]:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=up] {\n  order: 5;\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=up]:hover {\n  background-color: var(--calcite-color-foreground-2);\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=up]:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=down]:hover {\n  background-color: var(--calcite-color-foreground-2);\n}\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=down]:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=up]:hover {\n  background-color: var(--calcite-color-foreground-2);\n}\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=up]:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=down] {\n  border-block-start-width: 0px;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  margin: 0px;\n  box-sizing: border-box;\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  align-self: center;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-foreground-1);\n  padding-block: 0px;\n  padding-inline: 0.5rem;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  border-inline-start-width: 0px;\n}\n.number-button-item calcite-icon {\n  pointer-events: none;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n.number-button-item:focus {\n  background-color: var(--calcite-color-foreground-2);\n}\n.number-button-item:focus calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n.number-button-item:active {\n  background-color: var(--calcite-color-foreground-3);\n}\n.number-button-item:disabled {\n  pointer-events: none;\n}\n\n.wrapper {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n:host(.no-bottom-border) input {\n  border-block-end-width: 0px;\n}\n\n:host(.border-top-color-one) input {\n  border-block-start-color: var(--calcite-color-border-1);\n}\n\ninput.inline-child {\n  background-color: transparent;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\ninput.inline-child .editing-enabled {\n  background-color: inherit;\n}\ninput.inline-child:not(.editing-enabled) {\n  display: flex;\n  cursor: pointer;\n  text-overflow: ellipsis;\n  border-color: transparent;\n  padding-inline-start: 0;\n}\n\n.validation-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n}\n\n:host([scale=m]) .validation-container,\n:host([scale=l]) .validation-container {\n  padding-block-start: 0.5rem;\n}\n\n:host([scale=s]) .validation-container {\n  padding-block-start: 0.25rem;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { forceUpdate, h, Host, } from \"@stencil/core\";\nimport { getElementDir, getSlotted, isPrimaryPointerButton, setRequestedIcon, } from \"../../utils/dom\";\nimport { connectForm, disconnectForm, HiddenFormInputSlot, internalHiddenInputInputEvent, submitForm, } from \"../../utils/form\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText } from \"../../utils/label\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, numberStringFormatter, } from \"../../utils/locale\";\nimport { addLocalizedTrailingDecimalZeros, BigDecimal, isValidNumber, parseNumberString, sanitizeNumberString, } from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { syncHiddenFormInput, } from \"../input/common/input\";\nimport { CSS, SLOTS } from \"./resources\";\n/**\n * @slot action - A slot for positioning a button next to the component.\n */\nexport class InputNumber {\n    constructor() {\n        this.previousValueOrigin = \"initial\";\n        this.mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n        this.userChangedValue = false;\n        //--------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        //--------------------------------------------------------------------------\n        this.keyDownHandler = (event) => {\n            if (this.readOnly || this.disabled || event.defaultPrevented) {\n                return;\n            }\n            if (this.isClearable && event.key === \"Escape\") {\n                this.clearInputValue(event);\n                event.preventDefault();\n            }\n            if (event.key === \"Enter\") {\n                if (submitForm(this)) {\n                    event.preventDefault();\n                }\n            }\n        };\n        this.clearInputValue = (nativeEvent) => {\n            this.setNumberValue({\n                committing: true,\n                nativeEvent,\n                origin: \"user\",\n                value: \"\",\n            });\n        };\n        this.emitChangeIfUserModified = () => {\n            if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedNumberValue) {\n                this.calciteInputNumberChange.emit();\n                this.setPreviousEmittedNumberValue(this.value);\n            }\n        };\n        this.inputNumberBlurHandler = () => {\n            window.clearInterval(this.nudgeNumberValueIntervalId);\n            this.calciteInternalInputNumberBlur.emit();\n            this.emitChangeIfUserModified();\n        };\n        this.clickHandler = (event) => {\n            if (this.disabled) {\n                return;\n            }\n            const slottedActionEl = getSlotted(this.el, \"action\");\n            if (event.target !== slottedActionEl) {\n                this.setFocus();\n            }\n        };\n        this.inputNumberFocusHandler = () => {\n            this.calciteInternalInputNumberFocus.emit();\n        };\n        this.inputNumberInputHandler = (nativeEvent) => {\n            if (this.disabled || this.readOnly) {\n                return;\n            }\n            if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n                return;\n            }\n            const value = nativeEvent.target.value;\n            numberStringFormatter.numberFormatOptions = {\n                locale: this.effectiveLocale,\n                numberingSystem: this.numberingSystem,\n                useGrouping: this.groupSeparator,\n            };\n            const delocalizedValue = numberStringFormatter.delocalize(value);\n            if (nativeEvent.inputType === \"insertFromPaste\") {\n                if (!isValidNumber(delocalizedValue) ||\n                    (this.integer && (delocalizedValue.includes(\"e\") || delocalizedValue.includes(\".\")))) {\n                    nativeEvent.preventDefault();\n                }\n                this.setNumberValue({\n                    nativeEvent,\n                    origin: \"user\",\n                    value: parseNumberString(delocalizedValue),\n                });\n                this.childNumberEl.value = this.displayedValue;\n            }\n            else {\n                this.setNumberValue({\n                    nativeEvent,\n                    origin: \"user\",\n                    value: delocalizedValue,\n                });\n            }\n        };\n        this.inputNumberKeyDownHandler = (event) => {\n            if (this.disabled || this.readOnly) {\n                return;\n            }\n            if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n                event.preventDefault();\n                if (event.key === \"Backspace\" || event.key === \"Delete\") {\n                    this.clearInputValue(event);\n                }\n                return;\n            }\n            if (event.key === \"ArrowUp\") {\n                /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n                event.preventDefault();\n                this.nudgeNumberValue(\"up\", event);\n                return;\n            }\n            if (event.key === \"ArrowDown\") {\n                this.nudgeNumberValue(\"down\", event);\n                return;\n            }\n            const supportedKeys = [\n                ...numberKeys,\n                \"ArrowLeft\",\n                \"ArrowRight\",\n                \"Backspace\",\n                \"Delete\",\n                \"Enter\",\n                \"Escape\",\n                \"Tab\",\n            ];\n            if (event.altKey || event.ctrlKey || event.metaKey) {\n                return;\n            }\n            const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n            if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n                if (event.key === \"Enter\") {\n                    this.emitChangeIfUserModified();\n                }\n                return;\n            }\n            numberStringFormatter.numberFormatOptions = {\n                locale: this.effectiveLocale,\n                numberingSystem: this.numberingSystem,\n                useGrouping: this.groupSeparator,\n            };\n            if (event.key === numberStringFormatter.decimal && !this.integer) {\n                if (!this.value && !this.childNumberEl.value) {\n                    return;\n                }\n                if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n                    return;\n                }\n            }\n            if (/[eE]/.test(event.key) && !this.integer) {\n                if (!this.value && !this.childNumberEl.value) {\n                    return;\n                }\n                if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n                    return;\n                }\n            }\n            if (event.key === \"-\") {\n                if (!this.value && !this.childNumberEl.value) {\n                    return;\n                }\n                if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n                    return;\n                }\n            }\n            event.preventDefault();\n        };\n        this.nudgeNumberValue = (direction, nativeEvent) => {\n            if (nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) {\n                return;\n            }\n            const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n            const inputMin = this.minString ? parseFloat(this.minString) : null;\n            const valueNudgeDelayInMs = 150;\n            this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n            if (this.nudgeNumberValueIntervalId) {\n                window.clearInterval(this.nudgeNumberValueIntervalId);\n            }\n            let firstValueNudge = true;\n            this.nudgeNumberValueIntervalId = window.setInterval(() => {\n                if (firstValueNudge) {\n                    firstValueNudge = false;\n                    return;\n                }\n                this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n            }, valueNudgeDelayInMs);\n        };\n        this.nudgeButtonPointerUpHandler = (event) => {\n            if (!isPrimaryPointerButton(event)) {\n                return;\n            }\n            window.clearInterval(this.nudgeNumberValueIntervalId);\n        };\n        this.nudgeButtonPointerOutHandler = () => {\n            window.clearInterval(this.nudgeNumberValueIntervalId);\n        };\n        this.nudgeButtonPointerDownHandler = (event) => {\n            if (!isPrimaryPointerButton(event)) {\n                return;\n            }\n            event.preventDefault();\n            const direction = event.target.dataset.adjustment;\n            if (!this.disabled) {\n                this.nudgeNumberValue(direction, event);\n            }\n        };\n        this.onHiddenFormInputInput = (event) => {\n            if (event.target.name === this.name) {\n                this.setNumberValue({\n                    value: event.target.value,\n                    origin: \"direct\",\n                });\n            }\n            this.setFocus();\n            event.stopPropagation();\n        };\n        this.setChildNumberElRef = (el) => {\n            this.childNumberEl = el;\n        };\n        this.setInputNumberValue = (newInputValue) => {\n            if (!this.childNumberEl) {\n                return;\n            }\n            this.childNumberEl.value = newInputValue;\n        };\n        this.setPreviousEmittedNumberValue = (value) => {\n            this.previousEmittedNumberValue = this.normalizeValue(value);\n        };\n        this.setPreviousNumberValue = (value) => {\n            this.previousValue = this.normalizeValue(value);\n        };\n        this.setNumberValue = ({ committing = false, nativeEvent, origin, previousValue, value, }) => {\n            numberStringFormatter.numberFormatOptions = {\n                locale: this.effectiveLocale,\n                numberingSystem: this.numberingSystem,\n                useGrouping: this.groupSeparator,\n            };\n            const isValueDeleted = this.previousValue?.length > value.length || this.value?.length > value.length;\n            const valueHandleInteger = this.integer ? value.replace(/[e.]/g, \"\") : value;\n            const hasTrailingDecimalSeparator = valueHandleInteger.charAt(valueHandleInteger.length - 1) === \".\";\n            const sanitizedValue = hasTrailingDecimalSeparator && isValueDeleted\n                ? valueHandleInteger\n                : sanitizeNumberString(valueHandleInteger);\n            const newValue = value && !sanitizedValue\n                ? isValidNumber(this.previousValue)\n                    ? this.previousValue\n                    : \"\"\n                : sanitizedValue;\n            let newLocalizedValue = numberStringFormatter.localize(newValue);\n            if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n                newLocalizedValue = addLocalizedTrailingDecimalZeros(newLocalizedValue, newValue, numberStringFormatter);\n            }\n            // adds localized trailing decimal separator\n            this.displayedValue =\n                hasTrailingDecimalSeparator && isValueDeleted\n                    ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n                    : newLocalizedValue;\n            this.setPreviousNumberValue(previousValue ?? this.value);\n            this.previousValueOrigin = origin;\n            this.userChangedValue = origin === \"user\" && this.value !== newValue;\n            // don't sanitize the start of negative/decimal numbers, but\n            // don't set value to an invalid number\n            this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n            if (origin === \"direct\") {\n                this.setInputNumberValue(newLocalizedValue);\n                this.setPreviousEmittedNumberValue(newLocalizedValue);\n            }\n            if (nativeEvent) {\n                const calciteInputNumberInputEvent = this.calciteInputNumberInput.emit();\n                if (calciteInputNumberInputEvent.defaultPrevented) {\n                    this.value = this.previousValue;\n                    this.displayedValue = numberStringFormatter.localize(this.previousValue);\n                }\n                else if (committing) {\n                    this.emitChangeIfUserModified();\n                }\n            }\n        };\n        this.inputNumberKeyUpHandler = () => {\n            window.clearInterval(this.nudgeNumberValueIntervalId);\n        };\n        this.alignment = \"start\";\n        this.clearable = false;\n        this.disabled = false;\n        this.form = undefined;\n        this.groupSeparator = false;\n        this.icon = undefined;\n        this.iconFlipRtl = false;\n        this.integer = false;\n        this.label = undefined;\n        this.loading = false;\n        this.numberingSystem = undefined;\n        this.localeFormat = false;\n        this.max = undefined;\n        this.min = undefined;\n        this.maxLength = undefined;\n        this.minLength = undefined;\n        this.validationMessage = undefined;\n        this.validationIcon = undefined;\n        this.validity = {\n            valid: false,\n            badInput: false,\n            customError: false,\n            patternMismatch: false,\n            rangeOverflow: false,\n            rangeUnderflow: false,\n            stepMismatch: false,\n            tooLong: false,\n            tooShort: false,\n            typeMismatch: false,\n            valueMissing: false,\n        };\n        this.name = undefined;\n        this.numberButtonType = \"vertical\";\n        this.placeholder = undefined;\n        this.prefixText = undefined;\n        this.readOnly = false;\n        this.required = false;\n        this.scale = \"m\";\n        this.status = \"idle\";\n        this.step = undefined;\n        this.autocomplete = undefined;\n        this.suffixText = undefined;\n        this.editingEnabled = false;\n        this.value = \"\";\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.effectiveLocale = \"\";\n        this.defaultMessages = undefined;\n        this.displayedValue = undefined;\n        this.slottedActionElDisabledInternally = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Global attributes\n    //\n    //--------------------------------------------------------------------------\n    handleGlobalAttributesChanged() {\n        forceUpdate(this);\n    }\n    disabledWatcher() {\n        this.setDisabledAction();\n    }\n    /** watcher to update number-to-string for max */\n    maxWatcher() {\n        this.maxString = this.max?.toString() || null;\n    }\n    /** watcher to update number-to-string for min */\n    minWatcher() {\n        this.minString = this.min?.toString() || null;\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    valueWatcher(newValue, previousValue) {\n        if (!this.userChangedValue) {\n            if (newValue === \"Infinity\" || newValue === \"-Infinity\") {\n                this.displayedValue = newValue;\n                this.previousEmittedNumberValue = newValue;\n                return;\n            }\n            this.setNumberValue({\n                origin: \"direct\",\n                previousValue,\n                value: newValue == null || newValue == \"\"\n                    ? \"\"\n                    : isValidNumber(newValue)\n                        ? newValue\n                        : this.previousValue || \"\",\n            });\n            this.warnAboutInvalidNumberValue(newValue);\n        }\n        this.userChangedValue = false;\n    }\n    updateRequestedIcon() {\n        this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n    }\n    get isClearable() {\n        return this.clearable && this.value.length > 0;\n    }\n    effectiveLocaleWatcher(locale) {\n        updateMessages(this, this.effectiveLocale);\n        numberStringFormatter.numberFormatOptions = {\n            locale,\n            numberingSystem: this.numberingSystem,\n            useGrouping: false,\n        };\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n        connectLocalized(this);\n        connectMessages(this);\n        this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n        if (this.inlineEditableEl) {\n            this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n        }\n        connectLabel(this);\n        connectForm(this);\n        this.mutationObserver?.observe(this.el, { childList: true });\n        this.setDisabledAction();\n        this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLabel(this);\n        disconnectForm(this);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        this.mutationObserver?.disconnect();\n        this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        this.maxString = this.max?.toString();\n        this.minString = this.min?.toString();\n        this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n        await setUpMessages(this);\n        this.setPreviousEmittedNumberValue(this.value);\n        this.setPreviousNumberValue(this.value);\n        this.warnAboutInvalidNumberValue(this.value);\n        if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n            this.displayedValue = this.value;\n            this.previousEmittedNumberValue = this.value;\n        }\n        else {\n            this.setNumberValue({\n                origin: \"connected\",\n                value: isValidNumber(this.value) ? this.value : \"\",\n            });\n        }\n    }\n    componentShouldUpdate(newValue, oldValue, property) {\n        if (property === \"value\" && newValue && !isValidNumber(newValue)) {\n            this.setNumberValue({\n                origin: \"reset\",\n                value: oldValue,\n            });\n            return false;\n        }\n        return true;\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        this.childNumberEl?.focus();\n    }\n    /** Selects the text of the component's `value`. */\n    async selectText() {\n        this.childNumberEl?.select();\n    }\n    onLabelClick() {\n        this.setFocus();\n    }\n    incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent) {\n        const { value } = this;\n        if (value === \"Infinity\" || value === \"-Infinity\") {\n            return;\n        }\n        const adjustment = direction === \"up\" ? 1 : -1;\n        const stepHandleInteger = this.integer && this.step !== \"any\" ? Math.round(this.step) : this.step;\n        const inputStep = stepHandleInteger === \"any\" ? 1 : Math.abs(stepHandleInteger || 1);\n        const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n        const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n        const nudgedValueBelowInputMin = () => typeof inputMin === \"number\" &&\n            !isNaN(inputMin) &&\n            nudgedValue.subtract(`${inputMin}`).isNegative;\n        const nudgedValueAboveInputMax = () => typeof inputMax === \"number\" &&\n            !isNaN(inputMax) &&\n            !nudgedValue.subtract(`${inputMax}`).isNegative;\n        const finalValue = nudgedValueBelowInputMin()\n            ? `${inputMin}`\n            : nudgedValueAboveInputMax()\n                ? `${inputMax}`\n                : nudgedValue.toString();\n        this.setNumberValue({\n            committing: true,\n            nativeEvent,\n            origin: \"user\",\n            value: finalValue,\n        });\n    }\n    syncHiddenFormInput(input) {\n        syncHiddenFormInput(\"number\", this, input);\n    }\n    setDisabledAction() {\n        const slottedActionEl = getSlotted(this.el, \"action\");\n        if (!slottedActionEl) {\n            return;\n        }\n        if (this.disabled) {\n            if (slottedActionEl.getAttribute(\"disabled\") == null) {\n                this.slottedActionElDisabledInternally = true;\n            }\n            slottedActionEl.setAttribute(\"disabled\", \"\");\n        }\n        else if (this.slottedActionElDisabledInternally) {\n            slottedActionEl.removeAttribute(\"disabled\");\n            this.slottedActionElDisabledInternally = false;\n        }\n    }\n    normalizeValue(value) {\n        return isValidNumber(value) ? value : \"\";\n    }\n    warnAboutInvalidNumberValue(value) {\n        if (value && !isValidNumber(value)) {\n            console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        const dir = getElementDir(this.el);\n        const loader = (h(\"div\", { key: '29155555f7614867e208e88540cf39ff8e353e14', class: CSS.loader }, h(\"calcite-progress\", { key: '5cfafff27fcafca743911466b6340b02846777a5', label: this.messages.loading, type: \"indeterminate\" })));\n        const inputClearButton = (h(\"button\", { key: 'a5b5297e957c8e6fd5a6f339156955a54e03ffe3', \"aria-label\": this.messages.clear, class: CSS.clearButton, disabled: this.disabled || this.readOnly, onClick: this.clearInputValue, tabIndex: -1, type: \"button\" }, h(\"calcite-icon\", { key: '84a369ee19228da6507421c20c9c87536f8a124f', icon: \"x\", scale: getIconScale(this.scale) })));\n        const iconEl = (h(\"calcite-icon\", { key: '03585a6bbb458b87eed80e1e1f3ff0fbcc13f2ff', class: CSS.inputIcon, flipRtl: this.iconFlipRtl, icon: this.requestedIcon, scale: getIconScale(this.scale) }));\n        const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n        const numberButtonsHorizontalUp = (h(\"button\", { key: 'df1a243d54978cd71233af46f77eef9edc36ab41', \"aria-hidden\": \"true\", class: {\n                [CSS.numberButtonItem]: true,\n                [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n            }, \"data-adjustment\": \"up\", disabled: this.disabled || this.readOnly, onPointerDown: this.nudgeButtonPointerDownHandler, onPointerOut: this.nudgeButtonPointerOutHandler, onPointerUp: this.nudgeButtonPointerUpHandler, tabIndex: -1, type: \"button\" }, h(\"calcite-icon\", { key: '49f63b1ff62e0f8417dd2492f5e378877114f4dd', icon: \"chevron-up\", scale: getIconScale(this.scale) })));\n        const numberButtonsHorizontalDown = (h(\"button\", { key: '55d37fbfe2a02acc5cf234781d736db9eaf6f9af', \"aria-hidden\": \"true\", class: {\n                [CSS.numberButtonItem]: true,\n                [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n            }, \"data-adjustment\": \"down\", disabled: this.disabled || this.readOnly, onPointerDown: this.nudgeButtonPointerDownHandler, onPointerOut: this.nudgeButtonPointerOutHandler, onPointerUp: this.nudgeButtonPointerUpHandler, tabIndex: -1, type: \"button\" }, h(\"calcite-icon\", { key: 'bd24b05837fe72fdd84fa1f7ae84d2d282788d9a', icon: \"chevron-down\", scale: getIconScale(this.scale) })));\n        const numberButtonsVertical = (h(\"div\", { key: '4f8f08ca711772a0f2bdbd947895e44159d9cc55', class: CSS.numberButtonWrapper }, numberButtonsHorizontalUp, numberButtonsHorizontalDown));\n        const prefixText = h(\"div\", { key: 'd723c49e20f8f07c6adf611e1054127d749b563f', class: CSS.prefix }, this.prefixText);\n        const suffixText = h(\"div\", { key: 'bee92e77d72ab80a415b9a61af69da196f551e49', class: CSS.suffix }, this.suffixText);\n        const childEl = (h(\"input\", { \"aria-label\": getLabelText(this), autocomplete: this.autocomplete, autofocus: this.el.autofocus ? true : null, defaultValue: this.defaultValue, disabled: this.disabled ? true : null, enterKeyHint: this.el.enterKeyHint, inputMode: this.el.inputMode, key: \"localized-input\", maxLength: this.maxLength, minLength: this.minLength, name: undefined, onBlur: this.inputNumberBlurHandler, onFocus: this.inputNumberFocusHandler, onInput: this.inputNumberInputHandler, onKeyDown: this.inputNumberKeyDownHandler, onKeyUp: this.inputNumberKeyUpHandler, placeholder: this.placeholder || \"\", readOnly: this.readOnly, type: \"text\", value: this.displayedValue,\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: this.setChildNumberElRef }));\n        return (h(Host, { key: 'c532bec85b5ea1f2268d4755c6aa526cc3a65002', onClick: this.clickHandler, onKeyDown: this.keyDownHandler }, h(InteractiveContainer, { key: '03144ad4966c3a8c9a838afc02493c5d650a302e', disabled: this.disabled }, h(\"div\", { key: '4b47d599e4c8f0347a8583c43b42b5fcd76700fe', class: { [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" } }, this.numberButtonType === \"horizontal\" && !this.readOnly\n            ? numberButtonsHorizontalDown\n            : null, this.prefixText ? prefixText : null, h(\"div\", { key: 'ccaf9fddc5db60394a71d1c49b58c09c79e17478', class: CSS.wrapper }, childEl, this.isClearable ? inputClearButton : null, this.requestedIcon ? iconEl : null, this.loading ? loader : null), h(\"div\", { key: '3c39f821e4d851798d5e2e2fd5866b8c265da8d8', class: CSS.actionWrapper }, h(\"slot\", { key: '47ea7bc09f88d6a6b74a7297e35dbc9877789c13', name: SLOTS.action })), this.numberButtonType === \"vertical\" && !this.readOnly ? numberButtonsVertical : null, this.suffixText ? suffixText : null, this.numberButtonType === \"horizontal\" && !this.readOnly\n            ? numberButtonsHorizontalUp\n            : null, h(HiddenFormInputSlot, { key: '2e8a0268c7e3dfcf07d898ca5020fd1b310a60da', component: this })), this.validationMessage && this.status === \"invalid\" ? (h(Validation, { icon: this.validationIcon, message: this.validationMessage, scale: this.scale, status: this.status })) : null)));\n    }\n    static get is() { return \"calcite-input-number\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"input-number.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"input-number.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"start\\\" | \\\"end\\\", Alignment>\",\n                    \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Alignment\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Alignment\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the text alignment of the component's value.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"start\\\"\"\n            },\n            \"clearable\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, a clear button is displayed when the component has a value.\"\n                },\n                \"attribute\": \"clearable\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\"\n                        }],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor form element, if any.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": true\n            },\n            \"groupSeparator\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, number values are displayed with a group separator corresponding to the language and country format.\"\n                },\n                \"attribute\": \"group-separator\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"icon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"futureBreaking\",\n                            \"text\": \"Remove boolean type as it is not supported.\"\n                        }],\n                    \"text\": \"Specifies an icon to display.\"\n                },\n                \"attribute\": \"icon\",\n                \"reflect\": true\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"integer\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, restricts the component to integer numbers only and disables exponential notation.\"\n                },\n                \"attribute\": \"integer\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component's button or hyperlink.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"loading\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component is in the loading state and `calcite-progress` is displayed.\"\n                },\n                \"attribute\": \"loading\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"numberingSystem\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"NumberingSystem\",\n                    \"resolved\": \"\\\"arab\\\" | \\\"arabext\\\" | \\\"latn\\\"\",\n                    \"references\": {\n                        \"NumberingSystem\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/locale\",\n                            \"id\": \"src/utils/locale.ts::NumberingSystem\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the Unicode numeral system used by the component for localization.\"\n                },\n                \"attribute\": \"numbering-system\",\n                \"reflect\": true\n            },\n            \"localeFormat\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Toggles locale formatting for numbers.\"\n                },\n                \"attribute\": \"locale-format\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"max\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\"\n                        }],\n                    \"text\": \"Specifies the maximum value.\"\n                },\n                \"attribute\": \"max\",\n                \"reflect\": true\n            },\n            \"min\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\"\n                        }],\n                    \"text\": \"Specifies the minimum value.\"\n                },\n                \"attribute\": \"min\",\n                \"reflect\": true\n            },\n            \"maxLength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\"\n                        }, {\n                            \"name\": \"deprecated\",\n                            \"text\": \"This property has no effect on the component.\"\n                        }],\n                    \"text\": \"Specifies the maximum length of text for the component's value.\"\n                },\n                \"attribute\": \"max-length\",\n                \"reflect\": true\n            },\n            \"minLength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\"\n                        }, {\n                            \"name\": \"deprecated\",\n                            \"text\": \"This property has no effect on the component.\"\n                        }],\n                    \"text\": \"Specifies the minimum length of text for the component's value.\"\n                },\n                \"attribute\": \"min-length\",\n                \"reflect\": true\n            },\n            \"validationMessage\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation message to display under the component.\"\n                },\n                \"attribute\": \"validation-message\",\n                \"reflect\": false\n            },\n            \"validationIcon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation icon to display under the component.\"\n                },\n                \"attribute\": \"validation-icon\",\n                \"reflect\": true\n            },\n            \"validity\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"MutableValidityState\",\n                    \"resolved\": \"{ valid: boolean; badInput: boolean; customError: boolean; patternMismatch: boolean; rangeOverflow: boolean; rangeUnderflow: boolean; stepMismatch: boolean; tooLong: boolean; tooShort: boolean; typeMismatch: boolean; valueMissing: boolean; }\",\n                    \"references\": {\n                        \"MutableValidityState\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/form\",\n                            \"id\": \"src/utils/form.tsx::MutableValidityState\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }, {\n                            \"name\": \"mdn\",\n                            \"text\": \"[ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\"\n                        }],\n                    \"text\": \"The current validation state of the component.\"\n                },\n                \"defaultValue\": \"{\\n    valid: false,\\n    badInput: false,\\n    customError: false,\\n    patternMismatch: false,\\n    rangeOverflow: false,\\n    rangeUnderflow: false,\\n    stepMismatch: false,\\n    tooLong: false,\\n    tooShort: false,\\n    typeMismatch: false,\\n    valueMissing: false,\\n  }\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\"\n                        }],\n                    \"text\": \"Specifies the name of the component.\\n\\nRequired to pass the component's `value` on form submission.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": true\n            },\n            \"numberButtonType\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"InputPlacement\",\n                    \"resolved\": \"\\\"horizontal\\\" | \\\"none\\\" | \\\"vertical\\\"\",\n                    \"references\": {\n                        \"InputPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../input/interfaces\",\n                            \"id\": \"src/components/input/interfaces.ts::InputPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the placement of the buttons.\"\n                },\n                \"attribute\": \"number-button-type\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"vertical\\\"\"\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\"\n                        }],\n                    \"text\": \"Specifies placeholder text for the component.\"\n                },\n                \"attribute\": \"placeholder\",\n                \"reflect\": false\n            },\n            \"prefixText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Adds text to the start of the component.\"\n                },\n                \"attribute\": \"prefix-text\",\n                \"reflect\": false\n            },\n            \"readOnly\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\"\n                        }],\n                    \"text\": \"When `true`, the component's value can be read, but cannot be modified.\"\n                },\n                \"attribute\": \"read-only\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n                },\n                \"attribute\": \"required\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Status\",\n                    \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n                    \"references\": {\n                        \"Status\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Status\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the status of the input field, which determines message and icons.\"\n                },\n                \"attribute\": \"status\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"idle\\\"\"\n            },\n            \"step\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number | \\\"any\\\"\",\n                    \"resolved\": \"\\\"any\\\" | number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\"\n                        }],\n                    \"text\": \"Specifies the granularity that the component's value must adhere to.\"\n                },\n                \"attribute\": \"step\",\n                \"reflect\": true\n            },\n            \"autocomplete\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\"\n                        }],\n                    \"text\": \"Specifies the type of content to autocomplete, for use in forms.\\nRead the native attribute's documentation on MDN for more info.\"\n                },\n                \"attribute\": \"autocomplete\",\n                \"reflect\": false\n            },\n            \"suffixText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Adds text to the end of the component.\"\n                },\n                \"attribute\": \"suffix-text\",\n                \"reflect\": false\n            },\n            \"editingEnabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"editing-enabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's value.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"\\\"\\\"\"\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"InputNumberMessages\",\n                    \"resolved\": \"{ clear: string; loading: string; }\",\n                    \"references\": {\n                        \"InputNumberMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/input-number/t9n\",\n                            \"id\": \"src/components/input-number/assets/input-number/t9n/index.d.ts::InputNumberMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<InputNumberMessages>\",\n                    \"resolved\": \"{ clear?: string; loading?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"InputNumberMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/input-number/t9n\",\n                            \"id\": \"src/components/input-number/assets/input-number/t9n/index.d.ts::InputNumberMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"effectiveLocale\": {},\n            \"defaultMessages\": {},\n            \"displayedValue\": {},\n            \"slottedActionElDisabledInternally\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteInternalInputNumberFocus\",\n                \"name\": \"calciteInternalInputNumberFocus\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInternalInputNumberBlur\",\n                \"name\": \"calciteInternalInputNumberBlur\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInputNumberInput\",\n                \"name\": \"calciteInputNumberInput\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires each time a new value is typed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInputNumberChange\",\n                \"name\": \"calciteInputNumberChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires each time a new value is typed and committed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            },\n            \"selectText\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Selects the text of the component's `value`.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"autofocus\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"enterkeyhint\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"inputmode\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledWatcher\"\n            }, {\n                \"propName\": \"max\",\n                \"methodName\": \"maxWatcher\"\n            }, {\n                \"propName\": \"min\",\n                \"methodName\": \"minWatcher\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"valueWatcher\"\n            }, {\n                \"propName\": \"icon\",\n                \"methodName\": \"updateRequestedIcon\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleWatcher\"\n            }];\n    }\n}\n//# sourceMappingURL=input-number.js.map\n"],"mappings":"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"}