{"version":3,"names":["breakpoints","width","large","cssLengthToNumber","calciteContainerSizeWidthLg","max","medium","calciteContainerSizeWidthMd","small","calciteContainerSizeWidthSm","xsmall","calciteContainerSizeWidthXs","xxsmall","calciteContainerSizeWidthXxs","length","parseInt","CSS","page","selected","chevron","disabled","ellipsis","ICONS","next","previous","first","last","paginationCss","firstAndLastPageCount","ellipsisCount","maxItemBreakpoints","Pagination","constructor","hostRef","this","resizeObserver","createObserver","entries","forEach","resizeHandler","contentRect","setMaxItemsToBreakpoint","firstClicked","startItem","emitUpdate","lastClicked","lastStartItem","previousClicked","async","previousPage","nextClicked","nextPage","handlePageClick","event","target","value","groupSeparator","messages","undefined","messageOverrides","numberingSystem","pageSize","scale","totalItems","defaultMessages","effectiveLocale","maxItems","totalPages","isXXSmall","onMessagesChange","handleTotalPages","effectiveLocaleChange","updateMessages","effectiveLocaleWatcher","numberStringFormatter","numberFormatOptions","locale","useGrouping","handleLastStartItemChange","Math","floor","handleIsXXSmall","connectedCallback","connectLocalized","connectMessages","_a","observe","el","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","clientWidth","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnect","componentFocusable","focus","min","ceil","showStartEllipsis","showEndEllipsis","calcitePaginationChange","emit","renderEllipsis","type","h","class","key","renderItems","items","push","renderPage","renderFirstPage","renderStartEllipsis","renderEndEllipsis","remainingItems","end","nextStart","i","start","displayedPage","localize","toString","onClick","renderPreviousChevron","flipRtl","icon","getIconScale","renderNextChevron","renderFirstChevron","renderLastChevron","render","Fragment","delegatesFocus","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/utils/responsive.js","./node_modules/@esri/calcite-components/dist/collection/components/pagination/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/pagination/pagination.css?tag=calcite-pagination&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/pagination/pagination.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { calciteContainerSizeWidthLg, calciteContainerSizeWidthMd, calciteContainerSizeWidthSm, calciteContainerSizeWidthXs, calciteContainerSizeWidthXxs, } from \"@esri/calcite-design-tokens/dist/es6/global\";\n/**\n * A breakpoints lookup object.\n */\nexport const breakpoints = {\n    width: {\n        large: cssLengthToNumber(calciteContainerSizeWidthLg.max),\n        medium: cssLengthToNumber(calciteContainerSizeWidthMd.max),\n        small: cssLengthToNumber(calciteContainerSizeWidthSm.max),\n        xsmall: cssLengthToNumber(calciteContainerSizeWidthXs.max),\n        xxsmall: cssLengthToNumber(calciteContainerSizeWidthXxs.max),\n    },\n};\nfunction cssLengthToNumber(length) {\n    return parseInt(length);\n}\n//# sourceMappingURL=responsive.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nexport const CSS = {\n    page: \"page\",\n    selected: \"selected\",\n    chevron: \"chevron\",\n    disabled: \"disabled\",\n    ellipsis: \"ellipsis\",\n};\nexport const ICONS = {\n    next: \"chevron-right\",\n    previous: \"chevron-left\",\n    first: \"chevron-start\",\n    last: \"chevron-end\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n  display: flex;\n  writing-mode: horizontal-tb\n}\n\n:host([scale=s]) .chevron, :host([scale=s]) .page, :host([scale=s]) .ellipsis {\n  block-size: 1.5rem;\n  padding-inline: 0.25rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n  min-inline-size: 1.5rem\n}\n\n:host([scale=m]) .chevron, :host([scale=m]) .page, :host([scale=m]) .ellipsis {\n  block-size: 2rem;\n  padding-inline: 0.5rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n  min-inline-size: 2rem\n}\n\n:host([scale=l]) .chevron, :host([scale=l]) .page, :host([scale=l]) .ellipsis {\n  block-size: 2.75rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.25rem;\n  min-inline-size: 2.75rem\n}\n:host([scale=l]) .chevron {\n  padding-inline: 0.625rem\n}\n:host([scale=l]) .page, :host([scale=l]) .ellipsis {\n  padding-inline: 0.75rem\n}\n\n:host button {\n  outline-color: transparent\n}\n:host button:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          )\n}\n\n.chevron,\n.page,\n.ellipsis {\n  margin: 0px;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-style: none;\n  --tw-border-opacity: 0;\n  background-color: transparent;\n  padding: 0px;\n  vertical-align: baseline;\n  font-family: inherit;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.25rem;\n  color: var(--calcite-color-text-3)\n}\n\n.chevron,\n.page {\n  cursor: pointer;\n  border-block: 2px solid transparent\n}\n.chevron:hover,\n.page:hover {\n  color: var(--calcite-color-text-1);\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s\n}\n\n.page:hover {\n  border-block-end-color: var(--calcite-color-border-2)\n}\n.page.selected {\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-color-text-1);\n  border-block-end-color: var(--calcite-color-brand)\n}\n\n.chevron:hover {\n  background-color: var(--calcite-color-foreground-2);\n  color: var(--calcite-color-brand)\n}\n.chevron:active {\n  background-color: var(--calcite-color-foreground-3)\n}\n.chevron.disabled {\n  pointer-events: none;\n  background-color: transparent\n}\n.chevron.disabled > calcite-icon {\n  opacity: var(--calcite-opacity-disabled)\n}\n\n:host([hidden]) {\n  display: none\n}\n\n[hidden] {\n  display: none\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { Fragment, h, } from \"@stencil/core\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, numberStringFormatter, } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { breakpoints } from \"../../utils/responsive\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS, ICONS } from \"./resources\";\nconst firstAndLastPageCount = 2;\nconst ellipsisCount = 2;\nconst maxItemBreakpoints = {\n    large: 11,\n    medium: 9,\n    small: 7,\n    xsmall: 5,\n    xxsmall: 1,\n};\nexport class Pagination {\n    constructor() {\n        this.resizeObserver = createObserver(\"resize\", (entries) => entries.forEach(this.resizeHandler));\n        this.resizeHandler = ({ contentRect: { width } }) => this.setMaxItemsToBreakpoint(width);\n        this.firstClicked = () => {\n            this.startItem = 1;\n            this.emitUpdate();\n        };\n        this.lastClicked = () => {\n            this.startItem = this.lastStartItem;\n            this.emitUpdate();\n        };\n        this.previousClicked = async () => {\n            await this.previousPage();\n            this.emitUpdate();\n        };\n        this.nextClicked = async () => {\n            await this.nextPage();\n            this.emitUpdate();\n        };\n        this.handlePageClick = (event) => {\n            const target = event.target;\n            this.startItem = parseInt(target.value, 10);\n            this.emitUpdate();\n        };\n        this.groupSeparator = false;\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.numberingSystem = undefined;\n        this.pageSize = 20;\n        this.scale = \"m\";\n        this.startItem = 1;\n        this.totalItems = 0;\n        this.defaultMessages = undefined;\n        this.effectiveLocale = \"\";\n        this.maxItems = maxItemBreakpoints.xxsmall;\n        this.totalPages = undefined;\n        this.lastStartItem = undefined;\n        this.isXXSmall = undefined;\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    handleTotalPages() {\n        if (this.pageSize < 1) {\n            this.pageSize = 1;\n        }\n        this.totalPages = this.totalItems / this.pageSize;\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    effectiveLocaleWatcher() {\n        numberStringFormatter.numberFormatOptions = {\n            locale: this.effectiveLocale,\n            numberingSystem: this.numberingSystem,\n            useGrouping: this.groupSeparator,\n        };\n    }\n    handleLastStartItemChange() {\n        const { totalItems, pageSize, totalPages } = this;\n        this.lastStartItem =\n            (totalItems % pageSize === 0 ? totalItems - pageSize : Math.floor(totalPages) * pageSize) + 1;\n    }\n    handleIsXXSmall() {\n        this.isXXSmall = this.maxItems === maxItemBreakpoints.xxsmall;\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        connectLocalized(this);\n        connectMessages(this);\n        this.resizeObserver?.observe(this.el);\n    }\n    async componentWillLoad() {\n        await setUpMessages(this);\n        setUpLoadableComponent(this);\n        this.handleTotalPages();\n        this.handleLastStartItemChange();\n        this.handleIsXXSmall();\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n        this.setMaxItemsToBreakpoint(this.el.clientWidth);\n    }\n    disconnectedCallback() {\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        this.resizeObserver?.disconnect();\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    // --------------------------------------------------------------------------\n    /** Sets focus on the component's first focusable element. */\n    async setFocus() {\n        await componentFocusable(this);\n        this.el.focus();\n    }\n    /** Go to the next page of results. */\n    async nextPage() {\n        this.startItem = Math.min(this.lastStartItem, this.startItem + this.pageSize);\n    }\n    /** Go to the previous page of results. */\n    async previousPage() {\n        this.startItem = Math.max(1, this.startItem - this.pageSize);\n    }\n    /**\n     * Set a specified page as active.\n     *\n     * @param page\n     */\n    async goTo(page) {\n        switch (page) {\n            case \"start\":\n                this.startItem = 1;\n                break;\n            case \"end\":\n                this.startItem = this.lastStartItem;\n                break;\n            default: {\n                if (page >= Math.ceil(this.totalPages)) {\n                    this.startItem = this.lastStartItem;\n                }\n                else if (page <= 0) {\n                    this.startItem = 1;\n                }\n                else {\n                    this.startItem = (page - 1) * this.pageSize + 1;\n                }\n            }\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    setMaxItemsToBreakpoint(width) {\n        if (!breakpoints || !width) {\n            return;\n        }\n        if (width >= breakpoints.width.medium) {\n            this.maxItems = maxItemBreakpoints.large;\n            return;\n        }\n        if (width >= breakpoints.width.small) {\n            this.maxItems = maxItemBreakpoints.medium;\n            return;\n        }\n        if (width >= breakpoints.width.xsmall) {\n            this.maxItems = maxItemBreakpoints.small;\n            return;\n        }\n        if (width >= breakpoints.width.xxsmall) {\n            this.maxItems = maxItemBreakpoints.xsmall;\n            return;\n        }\n        this.maxItems = maxItemBreakpoints.xxsmall;\n    }\n    showStartEllipsis() {\n        return (this.totalPages > this.maxItems &&\n            Math.floor(this.startItem / this.pageSize) >\n                this.maxItems - firstAndLastPageCount - ellipsisCount);\n    }\n    showEndEllipsis() {\n        return (this.totalPages > this.maxItems &&\n            (this.totalItems - this.startItem) / this.pageSize >\n                this.maxItems - firstAndLastPageCount - (ellipsisCount - 1));\n    }\n    emitUpdate() {\n        this.calcitePaginationChange.emit();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    //--------------------------------------------------------------------------\n    renderEllipsis(type) {\n        return (h(\"span\", { class: CSS.ellipsis, \"data-test-ellipsis\": type, key: type }, \"\\u2026\"));\n    }\n    renderItems() {\n        const { totalItems, pageSize, startItem, maxItems, totalPages, lastStartItem, isXXSmall } = this;\n        const items = [];\n        if (isXXSmall) {\n            items.push(this.renderPage(startItem));\n            return items;\n        }\n        const renderFirstPage = totalItems > pageSize;\n        const renderStartEllipsis = this.showStartEllipsis();\n        const renderEndEllipsis = this.showEndEllipsis();\n        if (renderFirstPage) {\n            items.push(this.renderPage(1));\n        }\n        if (renderStartEllipsis) {\n            items.push(this.renderEllipsis(\"start\"));\n        }\n        const remainingItems = maxItems -\n            firstAndLastPageCount -\n            (renderEndEllipsis ? 1 : 0) -\n            (renderStartEllipsis ? 1 : 0);\n        let end;\n        let nextStart;\n        // if we don't need ellipses render the whole set\n        if (totalPages - 1 <= remainingItems) {\n            nextStart = 1 + pageSize;\n            end = lastStartItem - pageSize;\n        }\n        else {\n            // if we're within max pages of page 1\n            if (startItem / pageSize < remainingItems) {\n                nextStart = 1 + pageSize;\n                end = 1 + remainingItems * pageSize;\n            }\n            else {\n                // if we're within max pages of last page\n                if (startItem + remainingItems * pageSize >= totalItems) {\n                    nextStart = lastStartItem - remainingItems * pageSize;\n                    end = lastStartItem - pageSize;\n                }\n                else {\n                    // if we're within the center pages\n                    nextStart = startItem - pageSize * ((remainingItems - 1) / 2);\n                    end = startItem + pageSize * ((remainingItems - 1) / 2);\n                }\n            }\n        }\n        for (let i = 0; i < remainingItems && nextStart <= end; i++) {\n            items.push(this.renderPage(nextStart));\n            nextStart = nextStart + pageSize;\n        }\n        if (renderEndEllipsis) {\n            items.push(this.renderEllipsis(\"end\"));\n        }\n        items.push(this.renderPage(lastStartItem));\n        return items;\n    }\n    renderPage(start) {\n        const { pageSize } = this;\n        const page = Math.floor(start / pageSize) + (pageSize === 1 ? 0 : 1);\n        numberStringFormatter.numberFormatOptions = {\n            locale: this.effectiveLocale,\n            numberingSystem: this.numberingSystem,\n            useGrouping: this.groupSeparator,\n        };\n        const displayedPage = numberStringFormatter.localize(page.toString());\n        const selected = start === this.startItem;\n        return (h(\"button\", { \"aria-current\": selected ? \"page\" : \"false\", class: {\n                [CSS.page]: true,\n                [CSS.selected]: selected,\n            }, onClick: this.handlePageClick, value: start }, displayedPage));\n    }\n    renderPreviousChevron() {\n        const { pageSize, startItem, messages } = this;\n        const disabled = pageSize === 1 ? startItem <= pageSize : startItem < pageSize;\n        return (h(\"button\", { \"aria-label\": messages.previous, class: {\n                [CSS.chevron]: true,\n                [CSS.disabled]: disabled,\n            }, \"data-test-chevron\": \"previous\", disabled: disabled, key: \"previous\", onClick: this.previousClicked }, h(\"calcite-icon\", { flipRtl: true, icon: ICONS.previous, scale: getIconScale(this.scale) })));\n    }\n    renderNextChevron() {\n        const { totalItems, pageSize, startItem, messages } = this;\n        const disabled = pageSize === 1 ? startItem + pageSize > totalItems : startItem + pageSize > totalItems;\n        return (h(\"button\", { \"aria-label\": messages.next, class: {\n                [CSS.chevron]: true,\n                [CSS.disabled]: disabled,\n            }, \"data-test-chevron\": \"next\", disabled: disabled, key: \"next-button\", onClick: this.nextClicked }, h(\"calcite-icon\", { flipRtl: true, icon: ICONS.next, scale: getIconScale(this.scale) })));\n    }\n    renderFirstChevron() {\n        const { messages, startItem, isXXSmall } = this;\n        const disabled = startItem === 1;\n        return isXXSmall ? (h(\"button\", { \"aria-label\": messages.first, class: {\n                [CSS.chevron]: true,\n                [CSS.disabled]: disabled,\n            }, disabled: disabled, key: \"first-button\", onClick: this.firstClicked }, h(\"calcite-icon\", { flipRtl: true, icon: ICONS.first, scale: getIconScale(this.scale) }))) : null;\n    }\n    renderLastChevron() {\n        const { messages, startItem, isXXSmall, lastStartItem } = this;\n        const disabled = startItem === lastStartItem;\n        return isXXSmall ? (h(\"button\", { \"aria-label\": messages.last, class: {\n                [CSS.chevron]: true,\n                [CSS.disabled]: disabled,\n            }, disabled: disabled, key: \"last-button\", onClick: this.lastClicked }, h(\"calcite-icon\", { flipRtl: true, icon: ICONS.last, scale: getIconScale(this.scale) }))) : null;\n    }\n    render() {\n        return (h(Fragment, { key: '9d37f173bfa3e76e1d7ce4d2b013383d13e1c331' }, this.renderFirstChevron(), this.renderPreviousChevron(), this.renderItems(), this.renderNextChevron(), this.renderLastChevron()));\n    }\n    static get is() { return \"calcite-pagination\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get delegatesFocus() { return true; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"pagination.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"pagination.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"groupSeparator\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, number values are displayed with a group separator corresponding to the language and country format.\"\n                },\n                \"attribute\": \"group-separator\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"PaginationMessages\",\n                    \"resolved\": \"{ next: string; previous: string; first: string; last: string; }\",\n                    \"references\": {\n                        \"PaginationMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/pagination/t9n\",\n                            \"id\": \"src/components/pagination/assets/pagination/t9n/index.d.ts::PaginationMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<PaginationMessages>\",\n                    \"resolved\": \"{ next?: string; previous?: string; first?: string; last?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"PaginationMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/pagination/t9n\",\n                            \"id\": \"src/components/pagination/assets/pagination/t9n/index.d.ts::PaginationMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            },\n            \"numberingSystem\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"NumberingSystem\",\n                    \"resolved\": \"\\\"arab\\\" | \\\"arabext\\\" | \\\"latn\\\"\",\n                    \"references\": {\n                        \"NumberingSystem\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/locale\",\n                            \"id\": \"src/utils/locale.ts::NumberingSystem\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the Unicode numeral system used by the component for localization.\"\n                },\n                \"attribute\": \"numbering-system\",\n                \"reflect\": false\n            },\n            \"pageSize\": {\n                \"type\": \"number\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the number of items per page.\"\n                },\n                \"attribute\": \"page-size\",\n                \"reflect\": true,\n                \"defaultValue\": \"20\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"startItem\": {\n                \"type\": \"number\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the starting item number.\"\n                },\n                \"attribute\": \"start-item\",\n                \"reflect\": true,\n                \"defaultValue\": \"1\"\n            },\n            \"totalItems\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the total number of items.\"\n                },\n                \"attribute\": \"total-items\",\n                \"reflect\": true,\n                \"defaultValue\": \"0\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"defaultMessages\": {},\n            \"effectiveLocale\": {},\n            \"maxItems\": {},\n            \"totalPages\": {},\n            \"lastStartItem\": {},\n            \"isXXSmall\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calcitePaginationChange\",\n                \"name\": \"calcitePaginationChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emits when the selected page changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's first focusable element.\",\n                    \"tags\": []\n                }\n            },\n            \"nextPage\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Go to the next page of results.\",\n                    \"tags\": []\n                }\n            },\n            \"previousPage\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Go to the previous page of results.\",\n                    \"tags\": []\n                }\n            },\n            \"goTo\": {\n                \"complexType\": {\n                    \"signature\": \"(page: number | \\\"start\\\" | \\\"end\\\") => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"page\",\n                            \"type\": \"number | \\\"start\\\" | \\\"end\\\"\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Set a specified page as active.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"page\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"totalItems\",\n                \"methodName\": \"handleTotalPages\"\n            }, {\n                \"propName\": \"pageSize\",\n                \"methodName\": \"handleTotalPages\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleWatcher\"\n            }, {\n                \"propName\": \"totalItems\",\n                \"methodName\": \"handleLastStartItemChange\"\n            }, {\n                \"propName\": \"pageSize\",\n                \"methodName\": \"handleLastStartItemChange\"\n            }, {\n                \"propName\": \"totalPages\",\n                \"methodName\": \"handleLastStartItemChange\"\n            }, {\n                \"propName\": \"maxItems\",\n                \"methodName\": \"handleIsXXSmall\"\n            }];\n    }\n}\n//# sourceMappingURL=pagination.js.map\n"],"mappings":"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"}