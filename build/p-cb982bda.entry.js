import{a as i,r as t,h as s,H as n,g as a}from"./p-c9ba45b0.js";import{a as e,t as o}from"./p-1631d2a0.js";import{c}from"./p-3f298b29.js";import"./p-ab6a0f88.js";import"./p-25d4ba13.js";
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.8.0
 */const l={icon:"icon",flipRtl:"flip-rtl"};
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.8.0
 */const r={};const h={};const p={s:16,m:24,l:32};async function d({icon:t,scale:s}){const n=p[s];const a=f(t);const e=a.charAt(a.length-1)==="F";const o=e?a.substring(0,a.length-1):a;const c=`${o}${n}${e?"F":""}`;if(r[c]){return r[c]}if(!h[c]){h[c]=fetch(i(`./assets/icon/${c}.json`)).then((i=>i.json())).catch((()=>{console.error(`"${c}" is not a valid calcite-ui-icon name`);return""}))}const l=await h[c];r[c]=l;return l}function f(i){const t=!isNaN(Number(i.charAt(0)));const s=i.split("-");const n=s.length>0;if(n){const t=/[a-z]/i;i=s.map(((i,s)=>i.replace(t,(function i(t,n){const a=s===0&&n===0;if(a){return t}return t.toUpperCase()})))).join("")}return t?`i${i}`:i}const u=":host{display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}";const b=class{constructor(i){t(this,i);this.icon=null;this.flipRtl=false;this.scale="m";this.textLabel=undefined;this.pathData=undefined;this.visible=false}connectedCallback(){this.waitUntilVisible((()=>{this.visible=true;this.loadIconPathData()}))}disconnectedCallback(){var i;(i=this.intersectionObserver)===null||i===void 0?void 0:i.disconnect();this.intersectionObserver=null}async componentWillLoad(){this.loadIconPathData()}render(){const{el:i,flipRtl:t,pathData:a,scale:c,textLabel:r}=this;const h=e(i);const d=p[c];const f=!!r;const u=[].concat(a||"");return s(n,{key:"5eb4d26c41c6df7a4fe28e6647a452d4a91106a2","aria-hidden":o(!f),"aria-label":f?r:null,role:f?"img":null},s("svg",{key:"cd87fba0ba564d4a16ca5f18176d99b1f974b8fa","aria-hidden":"true",class:{[l.flipRtl]:h==="rtl"&&t,svg:true},fill:"currentColor",height:"100%",viewBox:`0 0 ${d} ${d}`,width:"100%",xmlns:"http://www.w3.org/2000/svg"},u.map((i=>typeof i==="string"?s("path",{d:i}):s("path",{d:i.d,opacity:"opacity"in i?i.opacity:1})))))}async loadIconPathData(){const{icon:i,scale:t,visible:s}=this;if(!i||!s){return}const n=await d({icon:i,scale:t});if(i!==this.icon){return}this.pathData=n}waitUntilVisible(i){this.intersectionObserver=c("intersection",(t=>{t.forEach((t=>{if(t.isIntersecting){this.intersectionObserver.disconnect();this.intersectionObserver=null;i()}}))}),{rootMargin:"50px"});if(!this.intersectionObserver){i();return}this.intersectionObserver.observe(this.el)}static get assetsDirs(){return["assets"]}get el(){return a(this)}static get watchers(){return{icon:["loadIconPathData"],scale:["loadIconPathData"]}}};b.style=u;export{b as calcite_icon};
//# sourceMappingURL=p-cb982bda.entry.js.map