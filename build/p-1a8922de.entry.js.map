{"version":3,"names":["IDS","content","toggle","CSS","focusGuard","invalid","sectionHeader","sectionHeaderText","statusIcon","toggleSwitch","toggleSwitchContainer","toggleSwitchContent","toggleSwitchText","valid","ICONS","menuOpen","menuClosedLeft","menuClosedRight","blockSectionCss","BlockSection","constructor","hostRef","this","handleHeaderKeyDown","event","isActivationKey","key","toggleSection","preventDefault","stopPropagation","open","calciteBlockSectionToggle","emit","status","undefined","text","toggleDisplay","messages","messageOverrides","effectiveLocale","defaultMessages","onMessagesChange","async","componentFocusable","focusFirstTabbable","el","effectiveLocaleChange","updateMessages","connectedCallback","connectLocalized","connectMessages","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLocalized","disconnectMessages","renderStatusIcon","_a","statusIconClasses","h","class","icon","scale","render","dir","getElementDir","arrowIcon","toggleLabel","collapse","expand","headerNode","toAriaBoolean","id","onClick","onKeyDown","role","tabIndex","title","layout","checked","label","Host","hidden","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/block-section/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/block-section/block-section.css?tag=calcite-block-section&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/block-section/block-section.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nexport const IDS = {\n    content: \"content\",\n    toggle: \"toggle\",\n};\nexport const CSS = {\n    content: \"content\",\n    focusGuard: \"focus-guard\",\n    invalid: \"invalid\",\n    sectionHeader: \"section-header\",\n    sectionHeaderText: \"section-header__text\",\n    statusIcon: \"status-icon\",\n    toggle: \"toggle\",\n    toggleSwitch: \"toggle--switch\",\n    toggleSwitchContainer: \"toggle--switch-container\",\n    toggleSwitchContent: \"toggle--switch__content\",\n    toggleSwitchText: \"toggle--switch__text\",\n    valid: \"valid\",\n};\nexport const ICONS = {\n    menuOpen: \"chevron-down\",\n    menuClosedLeft: \"chevron-left\",\n    menuClosedRight: \"chevron-right\",\n    valid: \"check-circle\",\n    invalid: \"exclamation-mark-triangle\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n  box-sizing: border-box;\n  display: block;\n  background-color: var(--calcite-color-foreground-1);\n  font-size: var(--calcite-font-size--1);\n  color: var(--calcite-color-text-2);\n}\n\n:host([open]) {\n  border-width: 0px;\n  border-block-end-width: 1px;\n  border-style: solid;\n  border-block-end-color: var(--calcite-color-border-3);\n}\n\n:host(:last-child) {\n  border-block-end-width: 0px;\n}\n\n.toggle {\n  inline-size: 100%;\n  border-width: 0px;\n  background-color: transparent;\n  font-family: var(--calcite-font-family);\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-color-text-2);\n}\n\n.toggle--switch .status-icon {\n  margin-inline-start: 0.5rem;\n}\n\n.toggle--switch,\n.section-header {\n  margin-inline: 0px;\n  margin-block: 0.25rem;\n  display: flex;\n  cursor: pointer;\n  -webkit-user-select: none;\n          user-select: none;\n  align-items: center;\n  padding-inline: 0px;\n  padding-block: 0.5rem;\n  font-size: var(--calcite-font-size--1);\n  outline-color: transparent;\n}\n.toggle--switch:focus,\n.section-header:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n.toggle--switch:hover,\n.section-header:hover {\n  color: var(--calcite-color-text-1);\n}\n\n.section-header .status-icon {\n  align-self: flex-end;\n}\n\n.section-header__text {\n  margin-inline: 0.75rem;\n  margin-block: 0px;\n  flex: 1 1 auto;\n  text-align: initial;\n  word-wrap: anywhere;\n}\n\n.toggle--switch-container {\n  position: relative;\n  display: flex;\n  inline-size: 100%;\n  align-items: center;\n  background-color: transparent;\n  word-break: break-word;\n}\n.toggle--switch-container .focus-guard {\n  --calcite-label-margin-bottom: 0;\n  pointer-events: none;\n  position: absolute;\n  inset-inline-end: 0;\n  margin-inline-start: 0.25rem;\n}\n\n.toggle--switch__content {\n  display: flex;\n  flex: 1 1 auto;\n  align-items: center;\n}\n\n.status-icon.valid {\n  color: var(--calcite-color-status-success);\n}\n\n.status-icon.invalid {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([toggle-display=switch]) .toggle .toggle--switch__content {\n  margin-inline-end: 1.75rem;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { focusFirstTabbable, getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { CSS, ICONS, IDS } from \"./resources\";\n/**\n * @slot - A slot for adding custom content.\n */\nexport class BlockSection {\n    constructor() {\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.handleHeaderKeyDown = (event) => {\n            if (isActivationKey(event.key)) {\n                this.toggleSection();\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        };\n        this.toggleSection = () => {\n            this.open = !this.open;\n            this.calciteBlockSectionToggle.emit();\n        };\n        this.open = false;\n        this.status = undefined;\n        this.text = undefined;\n        this.toggleDisplay = \"button\";\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.effectiveLocale = undefined;\n        this.defaultMessages = undefined;\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * Sets focus on the component's first tabbable element.\n     *\n     */\n    async setFocus() {\n        await componentFocusable(this);\n        focusFirstTabbable(this.el);\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        connectLocalized(this);\n        connectMessages(this);\n    }\n    async componentWillLoad() {\n        await setUpMessages(this);\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        disconnectLocalized(this);\n        disconnectMessages(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    renderStatusIcon() {\n        const { status } = this;\n        const statusIcon = ICONS[status] ?? false;\n        const statusIconClasses = {\n            [CSS.statusIcon]: true,\n            [CSS.valid]: status == \"valid\",\n            [CSS.invalid]: status == \"invalid\",\n        };\n        return !!statusIcon ? (h(\"calcite-icon\", { class: statusIconClasses, icon: statusIcon, scale: \"s\" })) : null;\n    }\n    render() {\n        const { el, messages, open, text, toggleDisplay } = this;\n        const dir = getElementDir(el);\n        const arrowIcon = open\n            ? ICONS.menuOpen\n            : dir === \"rtl\"\n                ? ICONS.menuClosedLeft\n                : ICONS.menuClosedRight;\n        const toggleLabel = open ? messages.collapse : messages.expand;\n        const headerNode = toggleDisplay === \"switch\" ? (h(\"div\", { class: {\n                [CSS.toggleSwitchContainer]: true,\n            } }, h(\"div\", { \"aria-controls\": IDS.content, \"aria-expanded\": toAriaBoolean(open), class: {\n                [CSS.toggle]: true,\n                [CSS.toggleSwitch]: true,\n            }, id: IDS.toggle, onClick: this.toggleSection, onKeyDown: this.handleHeaderKeyDown, role: \"button\", tabIndex: 0, title: toggleLabel }, h(\"div\", { class: CSS.toggleSwitchContent }, h(\"span\", { class: CSS.toggleSwitchText }, text)), this.renderStatusIcon()), h(\"calcite-label\", { class: CSS.focusGuard, layout: \"inline\", tabIndex: -1 }, h(\"calcite-switch\", { checked: open, label: toggleLabel, scale: \"s\" })))) : (h(\"button\", { \"aria-controls\": IDS.content, \"aria-expanded\": toAriaBoolean(open), class: {\n                [CSS.sectionHeader]: true,\n                [CSS.toggle]: true,\n            }, id: IDS.toggle, onClick: this.toggleSection }, h(\"calcite-icon\", { icon: arrowIcon, scale: \"s\" }), h(\"span\", { class: CSS.sectionHeaderText }, text), this.renderStatusIcon()));\n        return (h(Host, { key: '76e223811594d99984f6e110e430725030574d83' }, headerNode, h(\"section\", { key: '336e2701112e69eefb0461fbb8052d70a73b16fb', \"aria-labelledby\": IDS.toggle, class: CSS.content, hidden: !open, id: IDS.content }, h(\"slot\", { key: '3bd4125a763c91c22065162c5d5a1e2ee8d2f931' }))));\n    }\n    static get is() { return \"calcite-block-section\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"block-section.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"block-section.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"open\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, expands the component and its contents.\"\n                },\n                \"attribute\": \"open\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Status\",\n                    \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n                    \"references\": {\n                        \"Status\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Status\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Displays a status-related indicator icon.\"\n                },\n                \"attribute\": \"status\",\n                \"reflect\": true\n            },\n            \"text\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component header text.\"\n                },\n                \"attribute\": \"text\",\n                \"reflect\": false\n            },\n            \"toggleDisplay\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"BlockSectionToggleDisplay\",\n                    \"resolved\": \"\\\"button\\\" | \\\"switch\\\"\",\n                    \"references\": {\n                        \"BlockSectionToggleDisplay\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/block-section/interfaces.ts::BlockSectionToggleDisplay\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies how the component's toggle is displayed, where:\\n\\n`\\\"button\\\"` sets the toggle to a selectable header, and\\n\\n`\\\"switch\\\"` sets the toggle to a switch.\"\n                },\n                \"attribute\": \"toggle-display\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"button\\\"\"\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"BlockSectionMessages\",\n                    \"resolved\": \"{ collapse: string; expand: string; }\",\n                    \"references\": {\n                        \"BlockSectionMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/block-section/t9n\",\n                            \"id\": \"src/components/block-section/assets/block-section/t9n/index.d.ts::BlockSectionMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<BlockSectionMessages>\",\n                    \"resolved\": \"{ collapse?: string; expand?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"BlockSectionMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/block-section/t9n\",\n                            \"id\": \"src/components/block-section/assets/block-section/t9n/index.d.ts::BlockSectionMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"effectiveLocale\": {},\n            \"defaultMessages\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteBlockSectionToggle\",\n                \"name\": \"calciteBlockSectionToggle\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the header has been clicked.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's first tabbable element.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=block-section.js.map\n"],"mappings":"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"}