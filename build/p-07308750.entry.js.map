{"version":3,"names":["CSS","button","XButton","disabled","key","label","onClick","ref","scale","h","class","tabIndex","type","icon","getIconScale","comboboxCss","isGroup","el","tagName","ComboboxItemGroup","itemUidPrefix","chipUidPrefix","labelUidPrefix","listboxUidPrefix","inputUidPrefix","Combobox","constructor","hostRef","this","placement","defaultMenuPlacement","internalValueChangeFlag","textInput","mutationObserver","createObserver","updateItems","resizeObserver","setMaxScrollerHeight","refreshSelectionDisplay","guid","inputHeight","ignoreSelectedEventsFlag","openTransitionProp","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterComputedPlacements","getValue","items","selectedItems","map","item","_a","value","toString","length","onLabelClick","setFocus","keyDownHandler","event","readOnly","activeChipIndex","activeItemIndex","allowCustomValues","text","addCustomChip","preventDefault","open","clearInputValue","filterItems","updateActiveItemIndex","previousChip","nextChip","shiftActiveItemIndex","comboboxInViewport","scrollIntoView","ensureRecentSelectedItemIsActive","defaultPrevented","scrollToActiveItem","filteredItems","clearDisabled","clearValue","toggleSelection","removeActiveChip","submitForm","notDeletable","selectionDisplay","selectedHiddenChipsCount","isMulti","removeLastChip","toggleCloseEnd","removeEventListener","toggleOpenEnd","async","listContainerEl","referenceEl","reposition","maxScrollerHeight","getMaxScrollerHeight","style","maxHeight","minWidth","clientWidth","calciteChipCloseHandler","comboboxItem","selection","find","calciteComboboxChipClose","emit","clickHandler","composedPath","some","node","classList","contains","XButtonCSS","componentLoaded","isSingleLike","selectionMode","allSelectedIndicatorChipEl","chipContainerEl","placeholder","selectedIndicatorChipEl","chipContainerElGap","parseInt","getComputedStyle","gap","replace","chipContainerElWidth","getElementWidth","fontSize","fontFamily","inputTextWidth","getTextWidth","inputWidth","calciteSize48","allSelectedIndicatorChipElWidth","selectedIndicatorChipElWidth","largestSelectedIndicatorChipWidth","Math","max","setCompactSelectionDisplay","chipEls","Array","from","shadowRoot","querySelectorAll","filter","chipEl","closable","availableHorizontalChipElSpace","round","refreshChipDisplay","setVisibleAndHiddenChips","setFloatingEl","floatingEl","connectFloatingUI","setContainerEl","observe","transitionEl","setChipContainerEl","setReferenceEl","setAllSelectedIndicatorChipEl","setSelectedIndicatorChipEl","inputHandler","target","filteredData","textLabel","debounce","data","itemsAndGroups","getItemsAndGroups","forEach","hidden","parent","grandparent","ancestors","ancestor","getFilteredItems","calciteComboboxFilterChange","internalComboboxChangeEvent","calciteComboboxChange","emitComboboxChange","getSelectedItems","match","selected","hasActiveChildren","sort","a","b","aIdx","indexOf","bIdx","getItems","groupItems","getGroupItems","getData","needsIcon","getNeedsIcon","groupItem","index","afterEmptyGroup","nextGroupItem","children","activeItem","height","calculateSingleItemHeight","offsetHeight","scrollTop","offsetTop","comboboxFocusHandler","focus","form","undefined","placeholderIcon","placeholderIconFlipRtl","maxItems","validationMessage","validationIcon","validity","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","name","overlayPositioning","required","status","messages","messageOverrides","activeDescendant","compactSelectionDisplay","selectedVisibleChipsCount","effectiveLocale","defaultMessages","openHandler","onToggleOpenCloseComponent","handleDisabledChange","maxItemsHandler","overlayPositioningHandler","handlePropsChange","valueHandler","isArray","includes","onMessagesChange","flipPlacementsHandler","selectedItemsHandler","documentClickHandler","trim","calciteComboboxItemChangeHandler","newIndex","delayed","componentFocusable","connectedCallback","connectInteractive","connectLocalized","connectMessages","connectLabel","connectForm","childList","subtree","setUpLoadableComponent","setUpMessages","componentDidLoad","afterConnectDefaultValueSet","setComponentLoaded","componentDidRender","updateHostInteraction","componentDidUpdate","disconnectedCallback","disconnect","_b","disconnectInteractive","disconnectLabel","disconnectForm","disconnectFloatingUI","disconnectLocalized","disconnectMessages","textHandler","effectiveLocaleChange","updateMessages","resetText","bounding","getBoundingClientRect","top","left","right","window","innerWidth","document","documentElement","bottom","innerHeight","clientHeight","onBeforeOpen","calciteComboboxBeforeOpen","onOpen","calciteComboboxOpen","onBeforeClose","calciteComboboxBeforeClose","onClose","calciteComboboxClose","targetIndex","hideChip","add","chipInvisible","showChip","remove","chipElWidth","newCompactBreakpoint","maxCompactBreakpoint","newSelectedVisibleChipsCount","newSelectedHiddenChipsCount","itemsToProcess","ComboboxChildSelector","child","updateAncestors","getItemAncestors","getItemChildren","filterDisabled","ComboboxItem","existingItem","createElement","appendChild","active","focusChip","last","chip","querySelector","delta","i","isAllSelected","renderChips","chipClasses","reverse","pathLabel","join","appearance","iconFlipRtl","id","dismissLabel","removeTag","onCalciteChipClose","title","renderAllSelectedIndicatorChip","allSelected","renderAllSelectedIndicatorChipCompact","all","renderSelectedIndicatorChip","selectedItemsCount","renderSelectedIndicatorChipCompact","showingInlineIcon","selectedItem","selectedIcon","singleSelectionMode","renderInput","single","showLabel","toAriaBoolean","getLabelText","input","onFocus","onInput","role","renderListBoxOptions","tabindex","renderFloatingUIContainer","classes","listContainer","FloatingCSS","animation","animationActive","list","renderSelectedOrPlaceholderIcon","flipRtl","renderChevronIcon","render","allSelectionDisplay","singleSelectionDisplay","fitSelectionDisplay","isClearable","Host","InteractiveContainer","wrapper","onKeyDown","selectionDisplayFit","selectionDisplaySingle","htmlFor","clear","HiddenFormInputSlot","component","Validation","message","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/functional/XButton.js","./node_modules/@esri/calcite-components/dist/collection/components/combobox/combobox.css?tag=calcite-combobox&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/combobox/combobox.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { h } from \"@stencil/core\";\nimport { getIconScale } from \"../../utils/component\";\nexport const CSS = {\n    button: \"x-button\",\n};\nexport function XButton({ disabled, key, label, onClick, ref, scale, }) {\n    return (h(\"button\", { \"aria-label\": label, class: CSS.button, disabled: disabled, key: key, onClick: onClick, tabIndex: -1, type: \"button\",\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref: ref }, h(\"calcite-icon\", { icon: \"x\", scale: getIconScale(scale) })));\n}\n//# sourceMappingURL=XButton.js.map\n","/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-combobox-input-height: Specifies the height of the component's input.\n*/\n:host {\n  position: relative;\n  display: block;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host([scale=s]) .x-button {\n  inline-size: 1rem;\n  block-size: 1rem;\n}\n\n:host([scale=m]) .x-button {\n  inline-size: 1.5rem;\n  block-size: 1.5rem;\n}\n\n:host([scale=l]) .x-button {\n  inline-size: 2rem;\n  block-size: 2rem;\n}\n\n.x-button {\n  margin: 0px;\n  display: flex;\n  cursor: pointer;\n  appearance: none;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  align-self: center;\n  border-width: 2px;\n  background-color: transparent;\n  color: var(--calcite-color-text-3);\n  outline-color: transparent;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  border-radius: 50%;\n  border-color: transparent;\n  background-color: var(--calcite-color-foreground-2);\n}\n.x-button:active, .x-button:hover {\n  color: var(--calcite-color-text-1);\n  background-color: var(--calcite-color-foreground-3);\n}\n.x-button:active {\n  border-style: solid;\n  border-color: var(--calcite-color-brand);\n}\n.x-button calcite-icon {\n  color: inherit;\n}\n\n:host([scale=s]) {\n  font-size: var(--calcite-font-size--2);\n  --calcite-combobox-item-spacing-unit-l: 0.5rem;\n  --calcite-combobox-item-spacing-unit-s: 0.25rem;\n  --calcite-combobox-input-height: 1rem;\n  --calcite-internal-combobox-input-margin-block: calc(0.25rem - 1px);\n}\n:host([scale=s]) .x-button {\n  margin-inline: 0.5rem;\n}\n\n:host([scale=m]) {\n  font-size: var(--calcite-font-size--1);\n  --calcite-combobox-item-spacing-unit-l: 0.75rem;\n  --calcite-combobox-item-spacing-unit-s: 0.5rem;\n  --calcite-combobox-input-height: 1rem;\n  --calcite-internal-combobox-input-margin-block: calc(0.5rem - 1px);\n}\n:host([scale=m]) .x-button {\n  margin-inline-end: 0.75rem;\n}\n\n:host([scale=l]) {\n  font-size: var(--calcite-font-size-0);\n  --calcite-combobox-item-spacing-unit-l: 1rem;\n  --calcite-combobox-item-spacing-unit-s: 0.75rem;\n  --calcite-combobox-input-height: 1.5rem;\n  --calcite-internal-combobox-input-margin-block: calc(0.625rem - 1px);\n}\n:host([scale=l]) .x-button {\n  margin-inline-end: 1rem;\n}\n\n.wrapper {\n  display: flex;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-foreground-1);\n  color: var(--calcite-color-text-1);\n  outline-color: transparent;\n  padding-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n.wrapper:hover .icon {\n  color: var(--calcite-color-text-1);\n}\n\n:host(:focus-within) .wrapper,\n.wrapper--active {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n:host([read-only]) .wrapper {\n  background-color: var(--calcite-color-background);\n}\n:host([read-only]) .label {\n  font-weight: var(--calcite-font-weight-medium);\n}\n\n:host([status=invalid]) .wrapper {\n  border-color: var(--calcite-color-status-danger);\n}\n\n:host([status=invalid]:focus-within) .wrapper {\n  outline: 2px solid var(--calcite-color-status-danger);\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n.wrapper--single {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n  cursor: pointer;\n  flex-wrap: nowrap;\n}\n\n.grid-input {\n  position: relative;\n  display: flex;\n  flex-grow: 1;\n  flex-wrap: wrap;\n  align-items: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 0px;\n  gap: var(--calcite-combobox-item-spacing-unit-s);\n  margin-inline-end: var(--calcite-combobox-item-spacing-unit-s);\n}\n.grid-input.selection-display-fit, .grid-input.selection-display-single {\n  flex-wrap: nowrap;\n  overflow: hidden;\n}\n\n.input {\n  flex-grow: 1;\n  appearance: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-style: none;\n  background-color: transparent;\n  padding: 0px;\n  font-family: inherit;\n  color: var(--calcite-color-text-1);\n  font-size: inherit;\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n  inline-size: 100%;\n  margin-block-end: var(--calcite-combobox-item-spacing-unit-s);\n  min-inline-size: 4.8125rem;\n}\n.input:focus {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n.input:placeholder-shown {\n  text-overflow: ellipsis;\n}\n\n.input--transparent {\n  opacity: 0;\n}\n\n.input--single {\n  padding: 0px;\n  margin-block: var(--calcite-internal-combobox-input-margin-block);\n}\n\n.wrapper--active .input-single {\n  cursor: text;\n}\n\n.input--hidden {\n  pointer-events: none;\n  inline-size: 0px;\n  min-inline-size: 0px;\n  opacity: 0;\n}\n\n.input--icon {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.input-wrap {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n}\n\n.input-wrap--single {\n  flex: 1 1 0%;\n  overflow: hidden;\n}\n\n.label {\n  pointer-events: none;\n  max-inline-size: 100%;\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 0px;\n  font-weight: var(--calcite-font-weight-normal);\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n}\n\n.label--icon {\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.icon-end,\n.icon-start {\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n}\n\n.icon-end {\n  flex: none;\n}\n.icon-end .icon {\n  color: var(--calcite-color-text-3);\n}\n\n.floating-ui-container {\n  --calcite-floating-ui-z-index: var(--calcite-z-index-dropdown);\n  display: block;\n  position: absolute;\n  z-index: var(--calcite-floating-ui-z-index);\n  visibility: hidden;\n}\n\n.floating-ui-container .calcite-floating-ui-anim {\n  position: relative;\n  transition: var(--calcite-floating-ui-transition);\n  transition-property: transform, visibility, opacity;\n  opacity: 0;\n  box-shadow: 0 0 16px 0 rgba(0, 0, 0, 0.16);\n  z-index: var(--calcite-z-index);\n  border-radius: 0.25rem;\n}\n.floating-ui-container[data-placement^=bottom] .calcite-floating-ui-anim {\n  transform: translateY(-5px);\n}\n.floating-ui-container[data-placement^=top] .calcite-floating-ui-anim {\n  transform: translateY(5px);\n}\n.floating-ui-container[data-placement^=left] .calcite-floating-ui-anim {\n  transform: translateX(5px);\n}\n.floating-ui-container[data-placement^=right] .calcite-floating-ui-anim {\n  transform: translateX(-5px);\n}\n.floating-ui-container[data-placement] .calcite-floating-ui-anim--active {\n  opacity: 1;\n  transform: translate(0);\n}\n\n.floating-ui-container--active {\n  visibility: visible;\n}\n\n@media (forced-colors: active) {\n  .wrapper,\n  .floating-ui-container--active {\n    border: 1px solid canvasText;\n  }\n}\n.screen-readers-only {\n  position: absolute;\n  inline-size: 1px;\n  block-size: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.list-container {\n  max-block-size: 45vh;\n  overflow-y: auto;\n  background-color: var(--calcite-color-foreground-1);\n  inline-size: var(--calcite-dropdown-width);\n}\n\n.list {\n  margin: 0px;\n  display: block;\n  padding: 0px;\n}\n\n.list--hide {\n  block-size: 0px;\n  overflow: hidden;\n}\n\ncalcite-chip {\n  --calcite-animation-timing: 0;\n}\n\n.chip {\n  margin-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  max-inline-size: 100%;\n}\n\n.chip--active {\n  background-color: var(--calcite-color-foreground-3);\n}\n\n.chip--invisible {\n  visibility: hidden;\n  position: absolute;\n}\n\n.item {\n  display: block;\n}\n\n.validation-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n}\n\n:host([scale=m]) .validation-container,\n:host([scale=l]) .validation-container {\n  padding-block-start: 0.5rem;\n}\n\n:host([scale=s]) .validation-container {\n  padding-block-start: 0.25rem;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}\n\n::slotted(calcite-combobox-item-group:not(:first-child)) {\n  padding-block-start: var(--calcite-combobox-item-spacing-unit-l);\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport { calciteSize48 } from \"@esri/calcite-design-tokens/dist/es6/core.js\";\nimport { filter } from \"../../utils/filter\";\nimport { getElementWidth, getTextWidth, toAriaBoolean } from \"../../utils/dom\";\nimport { connectFloatingUI, defaultMenuPlacement, disconnectFloatingUI, filterComputedPlacements, FloatingCSS, reposition, } from \"../../utils/floating-ui\";\nimport { afterConnectDefaultValueSet, connectForm, disconnectForm, HiddenFormInputSlot, submitForm, } from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText } from \"../../utils/label\";\nimport { componentFocusable, componentLoaded, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { XButton, CSS as XButtonCSS } from \"../functional/XButton\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { ComboboxChildSelector, ComboboxItem, ComboboxItemGroup, CSS } from \"./resources\";\nimport { getItemAncestors, getItemChildren, hasActiveChildren, isSingleLike } from \"./utils\";\nconst isGroup = (el) => el.tagName === ComboboxItemGroup;\nconst itemUidPrefix = \"combobox-item-\";\nconst chipUidPrefix = \"combobox-chip-\";\nconst labelUidPrefix = \"combobox-label-\";\nconst listboxUidPrefix = \"combobox-listbox-\";\nconst inputUidPrefix = \"combobox-input-\";\n/**\n * @slot - A slot for adding `calcite-combobox-item`s.\n */\nexport class Combobox {\n    constructor() {\n        this.placement = defaultMenuPlacement;\n        this.internalValueChangeFlag = false;\n        this.textInput = null;\n        this.mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n        this.resizeObserver = createObserver(\"resize\", () => {\n            this.setMaxScrollerHeight();\n            this.refreshSelectionDisplay();\n        });\n        this.guid = guid();\n        this.inputHeight = 0;\n        this.ignoreSelectedEventsFlag = false;\n        this.openTransitionProp = \"opacity\";\n        this.setFilteredPlacements = () => {\n            const { el, flipPlacements } = this;\n            this.filteredFlipPlacements = flipPlacements\n                ? filterComputedPlacements(flipPlacements, el)\n                : null;\n        };\n        this.getValue = () => {\n            const items = this.selectedItems.map((item) => item?.value?.toString());\n            return items?.length ? (items.length > 1 ? items : items[0]) : \"\";\n        };\n        this.onLabelClick = () => {\n            this.setFocus();\n        };\n        this.keyDownHandler = (event) => {\n            if (this.readOnly) {\n                return;\n            }\n            const { key } = event;\n            switch (key) {\n                case \"Tab\":\n                    this.activeChipIndex = -1;\n                    this.activeItemIndex = -1;\n                    if (this.allowCustomValues && this.text) {\n                        this.addCustomChip(this.text, true);\n                        event.preventDefault();\n                    }\n                    else if (this.open) {\n                        this.open = false;\n                        event.preventDefault();\n                    }\n                    else if (!this.allowCustomValues && this.text) {\n                        this.clearInputValue();\n                        this.filterItems(\"\");\n                        this.updateActiveItemIndex(-1);\n                    }\n                    break;\n                case \"ArrowLeft\":\n                    this.previousChip();\n                    event.preventDefault();\n                    break;\n                case \"ArrowRight\":\n                    this.nextChip();\n                    event.preventDefault();\n                    break;\n                case \"ArrowUp\":\n                    event.preventDefault();\n                    if (this.open) {\n                        this.shiftActiveItemIndex(-1);\n                    }\n                    if (!this.comboboxInViewport()) {\n                        this.el.scrollIntoView();\n                    }\n                    break;\n                case \"ArrowDown\":\n                    event.preventDefault();\n                    if (this.open) {\n                        this.shiftActiveItemIndex(1);\n                    }\n                    else {\n                        this.open = true;\n                        this.ensureRecentSelectedItemIsActive();\n                    }\n                    if (!this.comboboxInViewport()) {\n                        this.el.scrollIntoView();\n                    }\n                    break;\n                case \" \":\n                    if (!this.textInput.value && !event.defaultPrevented) {\n                        if (!this.open) {\n                            this.open = true;\n                            this.shiftActiveItemIndex(1);\n                        }\n                        event.preventDefault();\n                    }\n                    break;\n                case \"Home\":\n                    if (!this.open) {\n                        return;\n                    }\n                    event.preventDefault();\n                    this.updateActiveItemIndex(0);\n                    this.scrollToActiveItem();\n                    if (!this.comboboxInViewport()) {\n                        this.el.scrollIntoView();\n                    }\n                    break;\n                case \"End\":\n                    if (!this.open) {\n                        return;\n                    }\n                    event.preventDefault();\n                    this.updateActiveItemIndex(this.filteredItems.length - 1);\n                    this.scrollToActiveItem();\n                    if (!this.comboboxInViewport()) {\n                        this.el.scrollIntoView();\n                    }\n                    break;\n                case \"Escape\":\n                    if (!this.clearDisabled && !this.open) {\n                        this.clearValue();\n                    }\n                    this.open = false;\n                    event.preventDefault();\n                    break;\n                case \"Enter\":\n                    if (this.open && this.activeItemIndex > -1) {\n                        this.toggleSelection(this.filteredItems[this.activeItemIndex]);\n                        event.preventDefault();\n                    }\n                    else if (this.activeChipIndex > -1) {\n                        this.removeActiveChip();\n                        event.preventDefault();\n                    }\n                    else if (this.allowCustomValues && this.text) {\n                        this.addCustomChip(this.text, true);\n                        event.preventDefault();\n                    }\n                    else if (!event.defaultPrevented) {\n                        if (submitForm(this)) {\n                            event.preventDefault();\n                        }\n                    }\n                    break;\n                case \"Delete\":\n                case \"Backspace\":\n                    const notDeletable = this.selectionDisplay === \"single\" ||\n                        (this.selectionDisplay === \"fit\" && this.selectedHiddenChipsCount > 0);\n                    if (notDeletable) {\n                        return;\n                    }\n                    if (this.activeChipIndex > -1) {\n                        event.preventDefault();\n                        this.removeActiveChip();\n                    }\n                    else if (!this.text && this.isMulti()) {\n                        event.preventDefault();\n                        this.removeLastChip();\n                    }\n                    break;\n            }\n        };\n        this.toggleCloseEnd = () => {\n            this.open = false;\n            this.el.removeEventListener(\"calciteComboboxClose\", this.toggleCloseEnd);\n        };\n        this.toggleOpenEnd = () => {\n            this.open = false;\n            this.el.removeEventListener(\"calciteComboboxOpen\", this.toggleOpenEnd);\n        };\n        this.setMaxScrollerHeight = async () => {\n            const { listContainerEl, open, referenceEl } = this;\n            if (!listContainerEl || !open) {\n                return;\n            }\n            await this.reposition(true);\n            const maxScrollerHeight = this.getMaxScrollerHeight();\n            listContainerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n            listContainerEl.style.minWidth = `${referenceEl.clientWidth}px`;\n            await this.reposition(true);\n        };\n        this.calciteChipCloseHandler = (comboboxItem) => {\n            this.open = false;\n            const selection = this.items.find((item) => item === comboboxItem);\n            if (selection) {\n                this.toggleSelection(selection, false);\n            }\n            this.calciteComboboxChipClose.emit();\n        };\n        this.clickHandler = (event) => {\n            if (this.readOnly) {\n                return;\n            }\n            const composedPath = event.composedPath();\n            if (composedPath.some((node) => node.tagName === \"CALCITE-CHIP\")) {\n                this.open = false;\n                event.preventDefault();\n                return;\n            }\n            if (composedPath.some((node) => node.classList?.contains(XButtonCSS.button))) {\n                this.clearValue();\n                event.preventDefault();\n                return;\n            }\n            this.open = !this.open;\n            this.ensureRecentSelectedItemIsActive();\n        };\n        this.refreshSelectionDisplay = async () => {\n            await componentLoaded(this);\n            if (isSingleLike(this.selectionMode)) {\n                return;\n            }\n            if (!this.textInput) {\n                return;\n            }\n            const { allSelectedIndicatorChipEl, chipContainerEl, selectionDisplay, placeholder, selectedIndicatorChipEl, textInput, } = this;\n            const chipContainerElGap = parseInt(getComputedStyle(chipContainerEl).gap.replace(\"px\", \"\"));\n            const chipContainerElWidth = getElementWidth(chipContainerEl);\n            const { fontSize, fontFamily } = getComputedStyle(textInput);\n            const inputTextWidth = getTextWidth(placeholder, `${fontSize} ${fontFamily}`);\n            const inputWidth = (inputTextWidth || parseInt(calciteSize48)) + chipContainerElGap;\n            const allSelectedIndicatorChipElWidth = getElementWidth(allSelectedIndicatorChipEl);\n            const selectedIndicatorChipElWidth = getElementWidth(selectedIndicatorChipEl);\n            const largestSelectedIndicatorChipWidth = Math.max(allSelectedIndicatorChipElWidth, selectedIndicatorChipElWidth);\n            this.setCompactSelectionDisplay({\n                chipContainerElGap,\n                chipContainerElWidth,\n                inputWidth,\n                largestSelectedIndicatorChipWidth,\n            });\n            if (selectionDisplay === \"fit\") {\n                const chipEls = Array.from(this.el.shadowRoot.querySelectorAll(\"calcite-chip\")).filter((chipEl) => chipEl.closable);\n                const availableHorizontalChipElSpace = Math.round(chipContainerElWidth -\n                    ((this.selectedHiddenChipsCount > 0 ? selectedIndicatorChipElWidth : 0) +\n                        chipContainerElGap +\n                        inputWidth +\n                        chipContainerElGap));\n                this.refreshChipDisplay({ availableHorizontalChipElSpace, chipContainerElGap, chipEls });\n                this.setVisibleAndHiddenChips(chipEls);\n            }\n        };\n        this.setFloatingEl = (el) => {\n            this.floatingEl = el;\n            connectFloatingUI(this, this.referenceEl, this.floatingEl);\n        };\n        this.setContainerEl = (el) => {\n            this.resizeObserver.observe(el);\n            this.listContainerEl = el;\n            this.transitionEl = el;\n        };\n        this.setChipContainerEl = (el) => {\n            this.resizeObserver.observe(el);\n            this.chipContainerEl = el;\n        };\n        this.setReferenceEl = (el) => {\n            this.referenceEl = el;\n            connectFloatingUI(this, this.referenceEl, this.floatingEl);\n        };\n        this.setAllSelectedIndicatorChipEl = (el) => {\n            this.allSelectedIndicatorChipEl = el;\n        };\n        this.setSelectedIndicatorChipEl = (el) => {\n            this.selectedIndicatorChipEl = el;\n        };\n        this.inputHandler = (event) => {\n            const value = event.target.value;\n            this.text = value;\n            this.filterItems(value);\n            if (value) {\n                this.activeChipIndex = -1;\n            }\n        };\n        this.filterItems = (() => {\n            const find = (item, filteredData) => item &&\n                filteredData.some(({ label, value }) => isGroup(item) ? label === item.label : value === item.value && label === item.textLabel);\n            return debounce((text) => {\n                const filteredData = filter(this.data, text);\n                const itemsAndGroups = this.getItemsAndGroups();\n                itemsAndGroups.forEach((item) => {\n                    const hidden = !find(item, filteredData);\n                    item.hidden = hidden;\n                    const [parent, grandparent] = item.ancestors;\n                    if (find(parent, filteredData) || find(grandparent, filteredData)) {\n                        item.hidden = false;\n                    }\n                    if (!hidden) {\n                        item.ancestors.forEach((ancestor) => (ancestor.hidden = false));\n                    }\n                });\n                this.filteredItems = this.getFilteredItems();\n                this.calciteComboboxFilterChange.emit();\n            }, 100);\n        })();\n        this.internalComboboxChangeEvent = () => {\n            this.calciteComboboxChange.emit();\n        };\n        this.emitComboboxChange = debounce(this.internalComboboxChangeEvent, 0);\n        this.getSelectedItems = () => {\n            if (!this.isMulti()) {\n                const match = this.items.find(({ selected }) => selected);\n                return match ? [match] : [];\n            }\n            return (this.items\n                .filter((item) => item.selected && (this.selectionMode !== \"ancestors\" || !hasActiveChildren(item)))\n                /** Preserve order of entered tags */\n                .sort((a, b) => {\n                const aIdx = this.selectedItems.indexOf(a);\n                const bIdx = this.selectedItems.indexOf(b);\n                if (aIdx > -1 && bIdx > -1) {\n                    return aIdx - bIdx;\n                }\n                return bIdx - aIdx;\n            }));\n        };\n        this.updateItems = () => {\n            this.items = this.getItems();\n            this.groupItems = this.getGroupItems();\n            this.data = this.getData();\n            this.selectedItems = this.getSelectedItems();\n            this.filteredItems = this.getFilteredItems();\n            this.needsIcon = this.getNeedsIcon();\n            this.items.forEach((item) => {\n                item.selectionMode = this.selectionMode;\n                item.scale = this.scale;\n            });\n            if (!this.allowCustomValues) {\n                this.setMaxScrollerHeight();\n            }\n            this.groupItems.forEach((groupItem, index, items) => {\n                if (index === 0) {\n                    groupItem.afterEmptyGroup = false;\n                }\n                const nextGroupItem = items[index + 1];\n                if (nextGroupItem) {\n                    nextGroupItem.afterEmptyGroup = groupItem.children.length === 0;\n                }\n            });\n        };\n        this.scrollToActiveItem = () => {\n            const activeItem = this.filteredItems[this.activeItemIndex];\n            if (!activeItem) {\n                return;\n            }\n            const height = this.calculateSingleItemHeight(activeItem);\n            const { offsetHeight, scrollTop } = this.listContainerEl;\n            if (offsetHeight + scrollTop < activeItem.offsetTop + height) {\n                this.listContainerEl.scrollTop = activeItem.offsetTop - offsetHeight + height;\n            }\n            else if (activeItem.offsetTop < scrollTop) {\n                this.listContainerEl.scrollTop = activeItem.offsetTop;\n            }\n        };\n        this.comboboxFocusHandler = () => {\n            if (this.disabled) {\n                return;\n            }\n            this.textInput?.focus();\n        };\n        this.clearDisabled = false;\n        this.selectionDisplay = \"all\";\n        this.open = false;\n        this.disabled = false;\n        this.form = undefined;\n        this.label = undefined;\n        this.placeholder = undefined;\n        this.placeholderIcon = undefined;\n        this.placeholderIconFlipRtl = false;\n        this.maxItems = 0;\n        this.validationMessage = undefined;\n        this.validationIcon = undefined;\n        this.validity = {\n            valid: false,\n            badInput: false,\n            customError: false,\n            patternMismatch: false,\n            rangeOverflow: false,\n            rangeUnderflow: false,\n            stepMismatch: false,\n            tooLong: false,\n            tooShort: false,\n            typeMismatch: false,\n            valueMissing: false,\n        };\n        this.name = undefined;\n        this.allowCustomValues = undefined;\n        this.overlayPositioning = \"absolute\";\n        this.required = false;\n        this.selectionMode = \"multiple\";\n        this.scale = \"m\";\n        this.status = \"idle\";\n        this.value = null;\n        this.flipPlacements = undefined;\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.selectedItems = [];\n        this.filteredItems = [];\n        this.readOnly = false;\n        this.items = [];\n        this.groupItems = [];\n        this.needsIcon = undefined;\n        this.activeItemIndex = -1;\n        this.activeChipIndex = -1;\n        this.activeDescendant = \"\";\n        this.compactSelectionDisplay = false;\n        this.selectedHiddenChipsCount = 0;\n        this.selectedVisibleChipsCount = 0;\n        this.text = \"\";\n        this.effectiveLocale = undefined;\n        this.defaultMessages = undefined;\n    }\n    openHandler() {\n        onToggleOpenCloseComponent(this);\n        if (this.disabled) {\n            this.open = false;\n            return;\n        }\n        this.setMaxScrollerHeight();\n    }\n    handleDisabledChange(value) {\n        if (!value) {\n            this.open = false;\n        }\n    }\n    maxItemsHandler() {\n        this.setMaxScrollerHeight();\n    }\n    overlayPositioningHandler() {\n        this.reposition(true);\n    }\n    handlePropsChange() {\n        this.updateItems();\n    }\n    valueHandler(value) {\n        if (!this.internalValueChangeFlag) {\n            const items = this.getItems();\n            if (Array.isArray(value)) {\n                items.forEach((item) => (item.selected = value.includes(item.value)));\n            }\n            else if (value) {\n                items.forEach((item) => (item.selected = value === item.value));\n            }\n            else {\n                items.forEach((item) => (item.selected = false));\n            }\n            this.updateItems();\n        }\n    }\n    onMessagesChange() {\n        /*  wired up by t9n util */\n    }\n    flipPlacementsHandler() {\n        this.setFilteredPlacements();\n        this.reposition(true);\n    }\n    selectedItemsHandler() {\n        this.internalValueChangeFlag = true;\n        this.value = this.getValue();\n        this.internalValueChangeFlag = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    documentClickHandler(event) {\n        if (this.disabled) {\n            return;\n        }\n        const composedPath = event.composedPath();\n        if (composedPath.includes(this.el) || composedPath.includes(this.referenceEl)) {\n            return;\n        }\n        if (!this.allowCustomValues && this.textInput.value) {\n            this.clearInputValue();\n            this.filterItems(\"\");\n            this.updateActiveItemIndex(-1);\n        }\n        if (this.allowCustomValues && this.text.trim().length) {\n            this.addCustomChip(this.text);\n        }\n        this.open = false;\n    }\n    calciteComboboxItemChangeHandler(event) {\n        if (this.ignoreSelectedEventsFlag) {\n            return;\n        }\n        const target = event.target;\n        const newIndex = this.filteredItems.indexOf(target);\n        this.updateActiveItemIndex(newIndex);\n        this.toggleSelection(target, target.selected);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * Updates the position of the component.\n     *\n     * @param delayed Reposition the component after a delay\n     * @returns Promise\n     */\n    async reposition(delayed = false) {\n        const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n        return reposition(this, {\n            floatingEl,\n            referenceEl,\n            overlayPositioning,\n            placement,\n            flipPlacements: filteredFlipPlacements,\n            type: \"menu\",\n        }, delayed);\n    }\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        this.textInput?.focus();\n        this.activeChipIndex = -1;\n        this.activeItemIndex = -1;\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n        connectLocalized(this);\n        connectMessages(this);\n        connectLabel(this);\n        connectForm(this);\n        this.internalValueChangeFlag = true;\n        this.value = this.getValue();\n        this.internalValueChangeFlag = false;\n        this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n        this.updateItems();\n        this.setFilteredPlacements();\n        if (this.open) {\n            this.openHandler();\n            onToggleOpenCloseComponent(this);\n        }\n        connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        this.updateItems();\n        await setUpMessages(this);\n    }\n    componentDidLoad() {\n        afterConnectDefaultValueSet(this, this.getValue());\n        connectFloatingUI(this, this.referenceEl, this.floatingEl);\n        setComponentLoaded(this);\n    }\n    componentDidRender() {\n        if (this.el.offsetHeight !== this.inputHeight) {\n            this.reposition(true);\n            this.inputHeight = this.el.offsetHeight;\n        }\n        updateHostInteraction(this);\n    }\n    componentDidUpdate() {\n        this.refreshSelectionDisplay();\n    }\n    disconnectedCallback() {\n        this.mutationObserver?.disconnect();\n        this.resizeObserver?.disconnect();\n        disconnectInteractive(this);\n        disconnectLabel(this);\n        disconnectForm(this);\n        disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n    }\n    /** when search text is cleared, reset active to  */\n    textHandler() {\n        this.updateActiveItemIndex(-1);\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    clearValue() {\n        this.ignoreSelectedEventsFlag = true;\n        this.items.forEach((el) => (el.selected = false));\n        this.ignoreSelectedEventsFlag = false;\n        this.selectedItems = [];\n        this.emitComboboxChange();\n        this.open = false;\n        this.updateActiveItemIndex(-1);\n        this.resetText();\n        this.filterItems(\"\");\n        this.setFocus();\n    }\n    clearInputValue() {\n        this.textInput.value = \"\";\n        this.text = \"\";\n    }\n    comboboxInViewport() {\n        const bounding = this.el.getBoundingClientRect();\n        return (bounding.top >= 0 &&\n            bounding.left >= 0 &&\n            bounding.right <= (window.innerWidth || document.documentElement.clientWidth) &&\n            bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight));\n    }\n    onBeforeOpen() {\n        this.scrollToActiveItem();\n        this.calciteComboboxBeforeOpen.emit();\n    }\n    onOpen() {\n        this.calciteComboboxOpen.emit();\n    }\n    onBeforeClose() {\n        this.calciteComboboxBeforeClose.emit();\n    }\n    onClose() {\n        this.calciteComboboxClose.emit();\n    }\n    ensureRecentSelectedItemIsActive() {\n        const { selectedItems } = this;\n        const targetIndex = selectedItems.length === 0 ? 0 : this.items.indexOf(selectedItems[selectedItems.length - 1]);\n        this.updateActiveItemIndex(targetIndex);\n    }\n    hideChip(chipEl) {\n        chipEl.classList.add(CSS.chipInvisible);\n    }\n    showChip(chipEl) {\n        chipEl.classList.remove(CSS.chipInvisible);\n    }\n    refreshChipDisplay({ chipEls, availableHorizontalChipElSpace, chipContainerElGap, }) {\n        chipEls.forEach((chipEl) => {\n            if (!chipEl.selected) {\n                this.hideChip(chipEl);\n            }\n            else {\n                const chipElWidth = getElementWidth(chipEl);\n                if (chipElWidth && chipElWidth < availableHorizontalChipElSpace) {\n                    availableHorizontalChipElSpace -= chipElWidth + chipContainerElGap;\n                    this.showChip(chipEl);\n                    return;\n                }\n            }\n            this.hideChip(chipEl);\n        });\n    }\n    setCompactSelectionDisplay({ chipContainerElGap, chipContainerElWidth, inputWidth, largestSelectedIndicatorChipWidth, }) {\n        const newCompactBreakpoint = Math.round(largestSelectedIndicatorChipWidth + chipContainerElGap + inputWidth);\n        if (!this.maxCompactBreakpoint || this.maxCompactBreakpoint < newCompactBreakpoint) {\n            this.maxCompactBreakpoint = newCompactBreakpoint;\n        }\n        this.compactSelectionDisplay = chipContainerElWidth < this.maxCompactBreakpoint;\n    }\n    setVisibleAndHiddenChips(chipEls) {\n        let newSelectedVisibleChipsCount = 0;\n        chipEls.forEach((chipEl) => {\n            if (chipEl.selected && !chipEl.classList.contains(CSS.chipInvisible)) {\n                newSelectedVisibleChipsCount++;\n            }\n        });\n        if (newSelectedVisibleChipsCount !== this.selectedVisibleChipsCount) {\n            this.selectedVisibleChipsCount = newSelectedVisibleChipsCount;\n        }\n        const newSelectedHiddenChipsCount = this.getSelectedItems().length - newSelectedVisibleChipsCount;\n        if (newSelectedHiddenChipsCount !== this.selectedHiddenChipsCount) {\n            this.selectedHiddenChipsCount = newSelectedHiddenChipsCount;\n        }\n    }\n    getMaxScrollerHeight() {\n        const items = this.getItemsAndGroups().filter((item) => !item.hidden);\n        const { maxItems } = this;\n        let itemsToProcess = 0;\n        let maxScrollerHeight = 0;\n        if (items.length > maxItems) {\n            items.forEach((item) => {\n                if (itemsToProcess < maxItems && maxItems > 0) {\n                    const height = this.calculateSingleItemHeight(item);\n                    if (height > 0) {\n                        maxScrollerHeight += height;\n                        itemsToProcess++;\n                    }\n                }\n            });\n        }\n        return maxScrollerHeight;\n    }\n    calculateSingleItemHeight(item) {\n        if (!item) {\n            return;\n        }\n        let height = item.offsetHeight;\n        // if item has children items, don't count their height twice\n        const children = Array.from(item.querySelectorAll(ComboboxChildSelector));\n        children\n            .map((child) => child?.offsetHeight)\n            .forEach((offsetHeight) => {\n            height -= offsetHeight;\n        });\n        return height;\n    }\n    getItemsAndGroups() {\n        return [...this.groupItems, ...this.items];\n    }\n    toggleSelection(item, value = !item.selected) {\n        if (!item ||\n            (this.selectionMode === \"single-persist\" && item.selected && item.value === this.value)) {\n            return;\n        }\n        if (this.isMulti()) {\n            item.selected = value;\n            this.updateAncestors(item);\n            this.selectedItems = this.getSelectedItems();\n            this.emitComboboxChange();\n            this.resetText();\n            this.filterItems(\"\");\n        }\n        else {\n            this.ignoreSelectedEventsFlag = true;\n            this.items.forEach((el) => (el.selected = el === item ? value : false));\n            this.ignoreSelectedEventsFlag = false;\n            this.selectedItems = this.getSelectedItems();\n            this.emitComboboxChange();\n            if (this.textInput) {\n                this.textInput.value = item.textLabel;\n            }\n            this.open = false;\n            this.updateActiveItemIndex(-1);\n            this.resetText();\n            this.filterItems(\"\");\n        }\n    }\n    updateAncestors(item) {\n        if (this.selectionMode !== \"ancestors\") {\n            return;\n        }\n        const ancestors = getItemAncestors(item);\n        const children = getItemChildren(item);\n        if (item.selected) {\n            ancestors.forEach((el) => {\n                el.selected = true;\n            });\n        }\n        else {\n            children.forEach((el) => (el.selected = false));\n            [...ancestors].forEach((el) => {\n                if (!hasActiveChildren(el)) {\n                    el.selected = false;\n                }\n            });\n        }\n    }\n    getFilteredItems() {\n        return this.items.filter((item) => !item.hidden);\n    }\n    getData() {\n        return this.items.map((item) => ({\n            filterDisabled: item.filterDisabled,\n            value: item.value,\n            label: item.textLabel,\n        }));\n    }\n    getNeedsIcon() {\n        return isSingleLike(this.selectionMode) && this.items.some((item) => item.icon);\n    }\n    resetText() {\n        if (this.textInput) {\n            this.textInput.value = \"\";\n        }\n        this.text = \"\";\n    }\n    getItems() {\n        const items = Array.from(this.el.querySelectorAll(ComboboxItem));\n        return items.filter((item) => !item.disabled);\n    }\n    getGroupItems() {\n        return Array.from(this.el.querySelectorAll(ComboboxItemGroup));\n    }\n    addCustomChip(value, focus) {\n        const existingItem = this.items.find((el) => el.textLabel === value);\n        if (existingItem) {\n            this.toggleSelection(existingItem, true);\n        }\n        else {\n            if (!this.isMulti()) {\n                this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n            }\n            const item = document.createElement(\"calcite-combobox-item\");\n            item.value = value;\n            item.textLabel = value;\n            item.selected = true;\n            this.el.appendChild(item);\n            this.resetText();\n            if (focus) {\n                this.setFocus();\n            }\n            this.updateItems();\n            this.filterItems(\"\");\n            this.emitComboboxChange();\n        }\n    }\n    removeActiveChip() {\n        this.toggleSelection(this.selectedItems[this.activeChipIndex], false);\n        this.setFocus();\n    }\n    removeLastChip() {\n        this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n        this.setFocus();\n    }\n    previousChip() {\n        if (this.text) {\n            return;\n        }\n        const length = this.selectedItems.length - 1;\n        const active = this.activeChipIndex;\n        this.activeChipIndex = active === -1 ? length : Math.max(active - 1, 0);\n        this.updateActiveItemIndex(-1);\n        this.focusChip();\n    }\n    nextChip() {\n        if (this.text || this.activeChipIndex === -1) {\n            return;\n        }\n        const last = this.selectedItems.length - 1;\n        const newIndex = this.activeChipIndex + 1;\n        if (newIndex > last) {\n            this.activeChipIndex = -1;\n            this.setFocus();\n        }\n        else {\n            this.activeChipIndex = newIndex;\n            this.focusChip();\n        }\n        this.updateActiveItemIndex(-1);\n    }\n    focusChip() {\n        const guid = this.selectedItems[this.activeChipIndex]?.guid;\n        const chip = guid\n            ? this.referenceEl.querySelector(`#${chipUidPrefix}${guid}`)\n            : null;\n        chip?.setFocus();\n    }\n    shiftActiveItemIndex(delta) {\n        const { length } = this.filteredItems;\n        const newIndex = (this.activeItemIndex + length + delta) % length;\n        this.updateActiveItemIndex(newIndex);\n        this.scrollToActiveItem();\n    }\n    updateActiveItemIndex(index) {\n        this.activeItemIndex = index;\n        let activeDescendant = null;\n        this.filteredItems.forEach((el, i) => {\n            if (i === index) {\n                el.active = true;\n                activeDescendant = `${itemUidPrefix}${el.guid}`;\n            }\n            else {\n                el.active = false;\n            }\n        });\n        this.activeDescendant = activeDescendant;\n        if (this.activeItemIndex > -1) {\n            this.activeChipIndex = -1;\n        }\n    }\n    isAllSelected() {\n        return this.getItems().length === this.getSelectedItems().length;\n    }\n    isMulti() {\n        return !isSingleLike(this.selectionMode);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    //--------------------------------------------------------------------------\n    renderChips() {\n        const { activeChipIndex, readOnly, scale, selectionMode, messages } = this;\n        return this.selectedItems.map((item, i) => {\n            const chipClasses = {\n                chip: true,\n                \"chip--active\": activeChipIndex === i,\n            };\n            const ancestors = [...getItemAncestors(item)].reverse();\n            const pathLabel = [...ancestors, item].map((el) => el.textLabel);\n            const label = selectionMode !== \"ancestors\" ? item.textLabel : pathLabel.join(\" / \");\n            return (h(\"calcite-chip\", { appearance: readOnly ? \"outline\" : \"solid\", class: chipClasses, closable: !readOnly, icon: item.icon, iconFlipRtl: item.iconFlipRtl, id: item.guid ? `${chipUidPrefix}${item.guid}` : null, key: item.textLabel, messageOverrides: { dismissLabel: messages.removeTag }, onCalciteChipClose: () => this.calciteChipCloseHandler(item), scale: scale, selected: item.selected, title: label, value: item.value }, label));\n        });\n    }\n    renderAllSelectedIndicatorChip() {\n        const { compactSelectionDisplay, scale, selectedVisibleChipsCount, setAllSelectedIndicatorChipEl, } = this;\n        const label = this.messages.allSelected;\n        return (h(\"calcite-chip\", { class: {\n                chip: true,\n                [CSS.chipInvisible]: !(this.isAllSelected() &&\n                    !selectedVisibleChipsCount &&\n                    !compactSelectionDisplay),\n            }, scale: scale, title: label, value: \"\",\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: setAllSelectedIndicatorChipEl }, label));\n    }\n    renderAllSelectedIndicatorChipCompact() {\n        const { compactSelectionDisplay, scale, selectedVisibleChipsCount } = this;\n        const label = this.messages.all || \"All\";\n        return (h(\"calcite-chip\", { class: {\n                chip: true,\n                [CSS.chipInvisible]: !(this.isAllSelected() &&\n                    !selectedVisibleChipsCount &&\n                    compactSelectionDisplay),\n            }, scale: scale, title: label, value: \"\" }, label));\n    }\n    renderSelectedIndicatorChip() {\n        const { compactSelectionDisplay, selectionDisplay, getSelectedItems, scale, selectedHiddenChipsCount, selectedVisibleChipsCount, setSelectedIndicatorChipEl, } = this;\n        let chipInvisible;\n        let label;\n        if (compactSelectionDisplay) {\n            chipInvisible = true;\n        }\n        else {\n            if (selectionDisplay === \"single\") {\n                const selectedItemsCount = getSelectedItems().length;\n                if (this.isAllSelected()) {\n                    chipInvisible = true;\n                }\n                else if (selectedItemsCount > 0) {\n                    chipInvisible = false;\n                }\n                else {\n                    chipInvisible = true;\n                }\n                label = `${selectedItemsCount} ${this.messages.selected}`;\n            }\n            else if (selectionDisplay === \"fit\") {\n                chipInvisible = !!((this.isAllSelected() && selectedVisibleChipsCount === 0) ||\n                    selectedHiddenChipsCount === 0);\n                label =\n                    selectedVisibleChipsCount > 0\n                        ? `+${selectedHiddenChipsCount}`\n                        : `${selectedHiddenChipsCount} ${this.messages.selected}`;\n            }\n        }\n        return (h(\"calcite-chip\", { class: {\n                chip: true,\n                [CSS.chipInvisible]: chipInvisible,\n            }, scale: scale, title: label, value: \"\",\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: setSelectedIndicatorChipEl }, label));\n    }\n    renderSelectedIndicatorChipCompact() {\n        const { compactSelectionDisplay, selectionDisplay, getSelectedItems, scale, selectedHiddenChipsCount, } = this;\n        let chipInvisible;\n        let label;\n        if (compactSelectionDisplay) {\n            const selectedItemsCount = getSelectedItems().length;\n            if (this.isAllSelected()) {\n                chipInvisible = true;\n            }\n            else if (selectionDisplay === \"fit\") {\n                chipInvisible = !(selectedHiddenChipsCount > 0);\n                label = `${selectedHiddenChipsCount || 0}`;\n            }\n            else if (selectionDisplay === \"single\") {\n                chipInvisible = !(selectedItemsCount > 0);\n                label = `${selectedItemsCount}`;\n            }\n        }\n        else {\n            chipInvisible = true;\n        }\n        return (h(\"calcite-chip\", { class: {\n                chip: true,\n                [CSS.chipInvisible]: chipInvisible,\n            }, scale: scale, title: label, value: \"\" }, label));\n    }\n    get showingInlineIcon() {\n        const { placeholderIcon, selectionMode, selectedItems, open } = this;\n        const selectedItem = selectedItems[0];\n        const selectedIcon = selectedItem?.icon;\n        const singleSelectionMode = isSingleLike(selectionMode);\n        return !open && selectedItem\n            ? !!selectedIcon && singleSelectionMode\n            : !!placeholderIcon && (!selectedItem || singleSelectionMode);\n    }\n    renderInput() {\n        const { guid, disabled, placeholder, selectionMode, selectedItems, open } = this;\n        const single = isSingleLike(selectionMode);\n        const selectedItem = selectedItems[0];\n        const showLabel = !open && single && !!selectedItem;\n        return (h(\"span\", { class: {\n                \"input-wrap\": true,\n                \"input-wrap--single\": single,\n            } }, showLabel && (h(\"span\", { class: {\n                label: true,\n                \"label--icon\": !!selectedItem?.icon,\n            }, key: \"label\" }, selectedItem.textLabel)), h(\"input\", { \"aria-activedescendant\": this.activeDescendant, \"aria-autocomplete\": \"list\", \"aria-controls\": `${listboxUidPrefix}${guid}`, \"aria-expanded\": toAriaBoolean(open), \"aria-haspopup\": \"listbox\", \"aria-label\": getLabelText(this), \"aria-owns\": `${listboxUidPrefix}${guid}`, class: {\n                [CSS.input]: true,\n                \"input--single\": true,\n                \"input--transparent\": this.activeChipIndex > -1,\n                \"input--hidden\": showLabel,\n                \"input--icon\": this.showingInlineIcon && !!this.placeholderIcon,\n            }, disabled: disabled, id: `${inputUidPrefix}${guid}`, key: \"input\", onFocus: this.comboboxFocusHandler, onInput: this.inputHandler, placeholder: placeholder, readOnly: this.readOnly, role: \"combobox\", type: \"text\",\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: (el) => (this.textInput = el) })));\n    }\n    renderListBoxOptions() {\n        return this.filteredItems.map((item) => (h(\"li\", { \"aria-selected\": toAriaBoolean(item.selected), id: item.guid ? `${itemUidPrefix}${item.guid}` : null, role: \"option\", tabindex: \"-1\" }, item.textLabel)));\n    }\n    renderFloatingUIContainer() {\n        const { setFloatingEl, setContainerEl, open } = this;\n        const classes = {\n            [CSS.listContainer]: true,\n            [FloatingCSS.animation]: true,\n            [FloatingCSS.animationActive]: open,\n        };\n        return (h(\"div\", { \"aria-hidden\": \"true\", class: {\n                \"floating-ui-container\": true,\n                \"floating-ui-container--active\": open,\n            },\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: setFloatingEl }, h(\"div\", { class: classes,\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: setContainerEl }, h(\"ul\", { class: { list: true, \"list--hide\": !open } }, h(\"slot\", null)))));\n    }\n    renderSelectedOrPlaceholderIcon() {\n        const { selectedItems, placeholderIcon, placeholderIconFlipRtl } = this;\n        const selectedItem = selectedItems[0];\n        const selectedIcon = selectedItem?.icon;\n        return (this.showingInlineIcon && (h(\"span\", { class: \"icon-start\", key: \"selected-placeholder-icon\" }, h(\"calcite-icon\", { class: \"selected-icon\", flipRtl: this.open && selectedItem ? selectedItem.iconFlipRtl : placeholderIconFlipRtl, icon: !this.open && selectedItem ? selectedIcon : placeholderIcon, scale: getIconScale(this.scale) }))));\n    }\n    renderChevronIcon() {\n        const { open } = this;\n        return (h(\"span\", { class: \"icon-end\", key: \"chevron\" }, h(\"calcite-icon\", { class: CSS.icon, icon: open ? \"chevron-up\" : \"chevron-down\", scale: getIconScale(this.scale) })));\n    }\n    render() {\n        const { selectionDisplay, guid, label, open, readOnly } = this;\n        const singleSelectionMode = isSingleLike(this.selectionMode);\n        const allSelectionDisplay = selectionDisplay === \"all\";\n        const singleSelectionDisplay = selectionDisplay === \"single\";\n        const fitSelectionDisplay = !singleSelectionMode && selectionDisplay === \"fit\";\n        const isClearable = !this.clearDisabled && this.value?.length > 0;\n        return (h(Host, { key: 'd7bb6fbd99d46d6baacd027bf67d440156aa8235', onClick: this.comboboxFocusHandler }, h(InteractiveContainer, { key: 'f0e960f155ffed736782818874432e49aec7da43', disabled: this.disabled }, h(\"div\", { key: '5b69d59411f589c99d1087ffc9d2f34a02ce4abf', \"aria-live\": \"polite\", class: {\n                wrapper: true,\n                \"wrapper--single\": singleSelectionMode || !this.selectedItems.length,\n                \"wrapper--active\": open,\n            }, onClick: this.clickHandler, onKeyDown: this.keyDownHandler,\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: this.setReferenceEl }, this.renderSelectedOrPlaceholderIcon(), h(\"div\", { class: {\n                \"grid-input\": true,\n                [CSS.selectionDisplayFit]: fitSelectionDisplay,\n                [CSS.selectionDisplaySingle]: singleSelectionDisplay,\n            }, key: \"grid\",\n            // eslint-disable-next-line react/jsx-sort-props -- auto-generated by @esri/calcite-components/enforce-ref-last-prop\n            ref: this.setChipContainerEl }, !singleSelectionMode && !singleSelectionDisplay && this.renderChips(), !singleSelectionMode &&\n            !allSelectionDisplay && [\n            this.renderSelectedIndicatorChip(),\n            this.renderSelectedIndicatorChipCompact(),\n            this.renderAllSelectedIndicatorChip(),\n            this.renderAllSelectedIndicatorChipCompact(),\n        ], h(\"label\", { key: '9b9988f68638cbf4b5379e815dd9ed88b5b83430', class: \"screen-readers-only\", htmlFor: `${inputUidPrefix}${guid}`, id: `${labelUidPrefix}${guid}` }, label), this.renderInput()), !readOnly && isClearable ? (h(XButton, { disabled: this.disabled, key: \"close-button\", label: this.messages.clear, scale: this.scale })) : null, !readOnly && this.renderChevronIcon()), h(\"ul\", { key: 'e52aae918a2ad75c1f84e6761d4651a59397e5f7', \"aria-labelledby\": `${labelUidPrefix}${guid}`, \"aria-multiselectable\": \"true\", class: \"screen-readers-only\", id: `${listboxUidPrefix}${guid}`, role: \"listbox\", tabIndex: -1 }, this.renderListBoxOptions()), this.renderFloatingUIContainer(), h(HiddenFormInputSlot, { key: 'feb9c678d698e149bc58b0aed458dee9d6fb8115', component: this }), this.validationMessage && this.status === \"invalid\" ? (h(Validation, { icon: this.validationIcon, message: this.validationMessage, scale: this.scale, status: this.status })) : null)));\n    }\n    static get is() { return \"calcite-combobox\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"combobox.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"combobox.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"clearDisabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the value-clearing will be disabled.\"\n                },\n                \"attribute\": \"clear-disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"selectionDisplay\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SelectionDisplay\",\n                    \"resolved\": \"\\\"all\\\" | \\\"fit\\\" | \\\"single\\\"\",\n                    \"references\": {\n                        \"SelectionDisplay\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/combobox/interfaces.ts::SelectionDisplay\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `selectionMode` is `\\\"ancestors\\\"` or `\\\"multiple\\\"`, specifies the display of multiple `calcite-combobox-item` selections, where:\\n\\n`\\\"all\\\"` displays all selections with individual `calcite-chip`s,\\n\\n`\\\"fit\\\"` displays individual `calcite-chip`s that scale to the component's size, including a non-closable `calcite-chip`, which provides the number of additional `calcite-combobox-item` selections not visually displayed, and\\n\\n`\\\"single\\\"` displays one `calcite-chip` with the total number of selections.\"\n                },\n                \"attribute\": \"selection-display\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"all\\\"\"\n            },\n            \"open\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, displays and positions the component.\"\n                },\n                \"attribute\": \"open\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor form element, if any.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": true\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the placeholder text for the input.\"\n                },\n                \"attribute\": \"placeholder\",\n                \"reflect\": false\n            },\n            \"placeholderIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the placeholder icon for the input.\"\n                },\n                \"attribute\": \"placeholder-icon\",\n                \"reflect\": true\n            },\n            \"placeholderIconFlipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"placeholder-icon-flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"maxItems\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the maximum number of `calcite-combobox-item`s (including nested children) to display before displaying a scrollbar.\"\n                },\n                \"attribute\": \"max-items\",\n                \"reflect\": true,\n                \"defaultValue\": \"0\"\n            },\n            \"validationMessage\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation message to display under the component.\"\n                },\n                \"attribute\": \"validation-message\",\n                \"reflect\": false\n            },\n            \"validationIcon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation icon to display under the component.\"\n                },\n                \"attribute\": \"validation-icon\",\n                \"reflect\": true\n            },\n            \"validity\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"MutableValidityState\",\n                    \"resolved\": \"{ valid: boolean; badInput: boolean; customError: boolean; patternMismatch: boolean; rangeOverflow: boolean; rangeUnderflow: boolean; stepMismatch: boolean; tooLong: boolean; tooShort: boolean; typeMismatch: boolean; valueMissing: boolean; }\",\n                    \"references\": {\n                        \"MutableValidityState\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/form\",\n                            \"id\": \"src/utils/form.tsx::MutableValidityState\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }, {\n                            \"name\": \"mdn\",\n                            \"text\": \"[ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\"\n                        }],\n                    \"text\": \"The current validation state of the component.\"\n                },\n                \"defaultValue\": \"{\\n    valid: false,\\n    badInput: false,\\n    customError: false,\\n    patternMismatch: false,\\n    rangeOverflow: false,\\n    rangeUnderflow: false,\\n    stepMismatch: false,\\n    tooLong: false,\\n    tooShort: false,\\n    typeMismatch: false,\\n    valueMissing: false,\\n  }\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the name of the component.\\n\\nRequired to pass the component's `value` on form submission.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": true\n            },\n            \"allowCustomValues\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, allows entry of custom values, which are not in the original set of items.\"\n                },\n                \"attribute\": \"allow-custom-values\",\n                \"reflect\": true\n            },\n            \"overlayPositioning\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"OverlayPositioning\",\n                    \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n                    \"references\": {\n                        \"OverlayPositioning\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::OverlayPositioning\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n\\n`\\\"fixed\\\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n                },\n                \"attribute\": \"overlay-positioning\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"absolute\\\"\"\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n                },\n                \"attribute\": \"required\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"selectionMode\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\n    \\\"single\\\" | \\\"single-persist\\\" | \\\"ancestors\\\" | \\\"multiple\\\",\\n    SelectionMode\\n  >\",\n                    \"resolved\": \"\\\"ancestors\\\" | \\\"multiple\\\" | \\\"single\\\" | \\\"single-persist\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"SelectionMode\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::SelectionMode\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the selection mode of the component, where:\\n\\n`\\\"multiple\\\"` allows any number of selections,\\n\\n`\\\"single\\\"` allows only one selection,\\n\\n`\\\"single-persist\\\"` allows one selection and prevents de-selection, and\\n\\n`\\\"ancestors\\\"` allows multiple selections, but shows ancestors of selected items as selected, with only deepest children shown in chips.\"\n                },\n                \"attribute\": \"selection-mode\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"multiple\\\"\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Status\",\n                    \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n                    \"references\": {\n                        \"Status\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Status\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the status of the input field, which determines message and icons.\"\n                },\n                \"attribute\": \"status\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"idle\\\"\"\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string | string[]\",\n                    \"resolved\": \"string | string[]\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's value(s) from the selected `calcite-combobox-item`(s).\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"null\"\n            },\n            \"flipPlacements\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"EffectivePlacement[]\",\n                    \"resolved\": \"Placement[]\",\n                    \"references\": {\n                        \"EffectivePlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::EffectivePlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Defines the available placements that can be used when a flip occurs.\"\n                }\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"ComboboxMessages\",\n                    \"resolved\": \"{ all: string; allSelected: string; clear: string; removeTag: string; selected: string; }\",\n                    \"references\": {\n                        \"ComboboxMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/combobox/t9n\",\n                            \"id\": \"src/components/combobox/assets/combobox/t9n/index.d.ts::ComboboxMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<ComboboxMessages>\",\n                    \"resolved\": \"{ all?: string; allSelected?: string; clear?: string; removeTag?: string; selected?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"ComboboxMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/combobox/t9n\",\n                            \"id\": \"src/components/combobox/assets/combobox/t9n/index.d.ts::ComboboxMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            },\n            \"selectedItems\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"HTMLCalciteComboboxItemElement[]\",\n                    \"resolved\": \"HTMLCalciteComboboxItemElement[]\",\n                    \"references\": {\n                        \"HTMLCalciteComboboxItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalciteComboboxItemElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Specifies the component's selected items.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"filteredItems\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"HTMLCalciteComboboxItemElement[]\",\n                    \"resolved\": \"HTMLCalciteComboboxItemElement[]\",\n                    \"references\": {\n                        \"HTMLCalciteComboboxItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalciteComboboxItemElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Specifies the component's filtered items.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"readOnly\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\"\n                },\n                \"attribute\": \"read-only\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"items\": {},\n            \"groupItems\": {},\n            \"needsIcon\": {},\n            \"activeItemIndex\": {},\n            \"activeChipIndex\": {},\n            \"activeDescendant\": {},\n            \"compactSelectionDisplay\": {},\n            \"selectedHiddenChipsCount\": {},\n            \"selectedVisibleChipsCount\": {},\n            \"text\": {},\n            \"effectiveLocale\": {},\n            \"defaultMessages\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteComboboxChange\",\n                \"name\": \"calciteComboboxChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the selected item(s) changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteComboboxFilterChange\",\n                \"name\": \"calciteComboboxFilterChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when text is added to filter the options list.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteComboboxChipClose\",\n                \"name\": \"calciteComboboxChipClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when a selected item in the component is closed via its `calcite-chip`.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteComboboxBeforeClose\",\n                \"name\": \"calciteComboboxBeforeClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is requested to be closed, and before the closing transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteComboboxClose\",\n                \"name\": \"calciteComboboxClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is closed and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteComboboxBeforeOpen\",\n                \"name\": \"calciteComboboxBeforeOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteComboboxOpen\",\n                \"name\": \"calciteComboboxOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is open and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"reposition\": {\n                \"complexType\": {\n                    \"signature\": \"(delayed?: boolean) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"delayed\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"Reposition the component after a delay\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Updates the position of the component.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"delayed Reposition the component after a delay\"\n                        }, {\n                            \"name\": \"returns\",\n                            \"text\": \"Promise\"\n                        }]\n                }\n            },\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"open\",\n                \"methodName\": \"openHandler\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"handleDisabledChange\"\n            }, {\n                \"propName\": \"maxItems\",\n                \"methodName\": \"maxItemsHandler\"\n            }, {\n                \"propName\": \"overlayPositioning\",\n                \"methodName\": \"overlayPositioningHandler\"\n            }, {\n                \"propName\": \"selectionMode\",\n                \"methodName\": \"handlePropsChange\"\n            }, {\n                \"propName\": \"scale\",\n                \"methodName\": \"handlePropsChange\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"valueHandler\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"flipPlacements\",\n                \"methodName\": \"flipPlacementsHandler\"\n            }, {\n                \"propName\": \"selectedItems\",\n                \"methodName\": \"selectedItemsHandler\"\n            }, {\n                \"propName\": \"text\",\n                \"methodName\": \"textHandler\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"click\",\n                \"method\": \"documentClickHandler\",\n                \"target\": \"document\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteComboboxItemChange\",\n                \"method\": \"calciteComboboxItemChangeHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=combobox.js.map\n"],"mappings":"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"}