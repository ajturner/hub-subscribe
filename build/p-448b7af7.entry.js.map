{"version":3,"names":["CSS","loader","clearButton","editingEnabled","inlineChild","inputIcon","prefix","suffix","numberButtonWrapper","buttonItemHorizontal","wrapper","inputWrapper","actionWrapper","resizeIconWrapper","numberButtonItem","INPUT_TYPE_ICONS","tel","password","email","date","time","search","SLOTS","action","inputCss","Input","constructor","hostRef","this","childElType","previousValueOrigin","mutationObserver","createObserver","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","key","clearInputValue","preventDefault","submitForm","nativeEvent","setValue","committing","origin","value","emitChangeIfUserModified","previousEmittedValue","calciteInputChange","emit","setPreviousEmittedValue","inputBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputBlur","clickHandler","slottedActionEl","getSlotted","el","target","setFocus","inputFocusHandler","calciteInternalInputFocus","inputChangeHandler","type","files","childEl","inputInputHandler","inputKeyDownHandler","inputNumberInputHandler","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","includes","decimal","indexOf","test","split","length","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","valueNudgeDelayInMs","incrementOrDecrementNumberValue","firstValueNudge","setInterval","numberButtonPointerUpAndOutHandler","numberButtonPointerDownHandler","isPrimaryPointerButton","dataset","adjustment","onHiddenFormInputInput","name","stopPropagation","setChildElRef","setChildNumberElRef","setInputValue","newInputValue","normalizeValue","setPreviousValue","previousValue","signDisplay","isValueDeleted","_a","_b","hasTrailingDecimalSeparator","charAt","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","calciteInputInputEvent","calciteInputInput","inputKeyUpHandler","alignment","clearable","form","undefined","icon","iconFlipRtl","label","loading","localeFormat","max","min","maxLength","minLength","validationMessage","validationIcon","validity","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","numberButtonType","placeholder","prefixText","required","scale","status","step","autocomplete","pattern","accept","multiple","suffixText","messages","messageOverrides","defaultMessages","slottedActionElDisabledInternally","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","maxWatcher","toString","minWatcher","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","requestedIcon","setRequestedIcon","isTextarea","effectiveLocaleChange","updateMessages","connectedCallback","connectInteractive","connectLocalized","connectMessages","inlineEditableEl","closest","connectLabel","connectForm","observe","childList","addEventListener","internalHiddenInputInputEvent","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","async","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","componentFocusable","focus","select","onLabelClick","inputStep","Math","abs","inputVal","BigDecimal","nudgedValue","add","nudgedValueBelowInputMin","isNaN","subtract","isNegative","nudgedValueAboveInputMax","finalValue","syncHiddenFormInput","input","getAttribute","setAttribute","removeAttribute","console","warn","render","dir","getElementDir","h","class","inputClearButton","clear","onClick","tabIndex","getIconScale","iconEl","flipRtl","isHorizontalNumberButton","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","localeNumberInput","getLabelText","autofocus","defaultValue","enterKeyHint","inputMode","onBlur","onFocus","onInput","onKeyDown","onKeyUp","ref","onChange","Host","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","Validation","message","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/input/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/input/input.css?tag=calcite-input&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/input/input.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nexport const CSS = {\n    loader: \"loader\",\n    clearButton: \"clear-button\",\n    editingEnabled: \"editing-enabled\",\n    inlineChild: \"inline-child\",\n    inputIcon: \"icon\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    numberButtonWrapper: \"number-button-wrapper\",\n    buttonItemHorizontal: \"number-button-item--horizontal\",\n    wrapper: \"element-wrapper\",\n    inputWrapper: \"wrapper\",\n    actionWrapper: \"action-wrapper\",\n    resizeIconWrapper: \"resize-icon-wrapper\",\n    numberButtonItem: \"number-button-item\",\n};\nexport const INPUT_TYPE_ICONS = {\n    tel: \"phone\",\n    password: \"lock\",\n    email: \"email-address\",\n    date: \"calendar\",\n    time: \"clock\",\n    search: \"search\",\n};\nexport const SLOTS = {\n    action: \"action\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:10 GMT\n */\n/**\n * Do not edit directly\n * Generated on Wed, 01 May 2024 00:07:08 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host {\n  display: block;\n}\n\n:host([scale=s]) input, :host([scale=s]) .prefix, :host([scale=s]) .suffix {\n  block-size: 1.5rem;\n  padding-inline: 0.5rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n}\n:host([scale=s]) textarea {\n  block-size: 1.5rem;\n  min-block-size: 1.5rem;\n}\n:host([scale=s]) .number-button-wrapper, :host([scale=s]) .action-wrapper calcite-button, :host([scale=s]) .action-wrapper calcite-button button {\n  block-size: 1.5rem;\n}\n:host([scale=s]) input[type=file] {\n  block-size: 1.5rem;\n}\n:host([scale=s]) .clear-button {\n  min-block-size: 1.5rem;\n  min-inline-size: 1.5rem;\n}\n:host([scale=s]) textarea {\n  block-size: auto;\n  padding-block: 0.25rem;\n  padding-inline: 0.5rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n}\n\n:host([scale=m]) input, :host([scale=m]) .prefix, :host([scale=m]) .suffix {\n  block-size: 2rem;\n  padding-inline: 0.75rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}\n:host([scale=m]) textarea {\n  min-block-size: 2rem;\n}\n:host([scale=m]) .number-button-wrapper, :host([scale=m]) .action-wrapper calcite-button, :host([scale=m]) .action-wrapper calcite-button button {\n  block-size: 2rem;\n}\n:host([scale=m]) input[type=file] {\n  block-size: 2rem;\n}\n:host([scale=m]) .clear-button {\n  min-block-size: 2rem;\n  min-inline-size: 2rem;\n}\n:host([scale=m]) textarea {\n  block-size: auto;\n  padding-block: 0.5rem;\n  padding-inline: 0.75rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}\n\n:host([scale=l]) input, :host([scale=l]) .prefix, :host([scale=l]) .suffix {\n  block-size: 2.75rem;\n  padding-inline: 1rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.25rem;\n}\n:host([scale=l]) textarea {\n  min-block-size: 2.75rem;\n}\n:host([scale=l]) .number-button-wrapper, :host([scale=l]) .action-wrapper calcite-button, :host([scale=l]) .action-wrapper calcite-button button {\n  block-size: 2.75rem;\n}\n:host([scale=l]) input[type=file] {\n  block-size: 2.75rem;\n}\n:host([scale=l]) .clear-button {\n  min-block-size: 2.75rem;\n  min-inline-size: 2.75rem;\n}\n:host([scale=l]) textarea {\n  block-size: auto;\n  padding-block: 0.75rem;\n  padding-inline: 1rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.25rem;\n}\n\n:host([disabled]) textarea {\n  resize: none;\n}\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\ntextarea,\ninput {\n  transition: var(--calcite-animation-timing), block-size 0, outline-offset 0s;\n  -webkit-appearance: none;\n  position: relative;\n  margin: 0px;\n  box-sizing: border-box;\n  display: flex;\n  max-block-size: 100%;\n  inline-size: 100%;\n  max-inline-size: 100%;\n  flex: 1 1 0%;\n  border-radius: 0px;\n  background-color: var(--calcite-color-foreground-1);\n  font-family: inherit;\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-color-text-1);\n}\n\ninput[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\ninput,\ntextarea {\n  text-overflow: ellipsis;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  color: var(--calcite-color-text-1);\n}\ninput:placeholder-shown,\ntextarea:placeholder-shown {\n  text-overflow: ellipsis;\n}\n\ninput:focus,\ntextarea:focus {\n  border-color: var(--calcite-color-brand);\n  color: var(--calcite-color-text-1);\n}\n\ninput[readonly],\ntextarea[readonly] {\n  background-color: var(--calcite-color-background);\n  font-weight: var(--calcite-font-weight-medium);\n}\n\ninput[readonly]:focus,\ntextarea[readonly]:focus {\n  color: var(--calcite-color-text-1);\n}\n\ncalcite-icon {\n  color: var(--calcite-color-text-3);\n}\n\ntextarea,\ninput {\n  outline-color: transparent;\n}\n\ntextarea:focus,\ninput:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n:host([status=invalid]) input, :host([status=invalid]) textarea {\n  border-color: var(--calcite-color-status-danger);\n}\n:host([status=invalid]) input:focus, :host([status=invalid]) textarea:focus {\n  outline: 2px solid var(--calcite-color-status-danger);\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n:host([scale=s]) .icon {\n  inset-inline-start: 0.5rem;\n}\n\n:host([scale=m]) .icon {\n  inset-inline-start: 0.75rem;\n}\n\n:host([scale=l]) .icon {\n  inset-inline-start: 1rem;\n}\n\n:host([icon][scale=s]) input {\n  padding-inline-start: 2rem;\n}\n\n:host([icon][scale=m]) input {\n  padding-inline-start: 2.5rem;\n}\n\n:host([icon][scale=l]) input {\n  padding-inline-start: 3.5rem;\n}\n\n.element-wrapper {\n  position: relative;\n  order: 3;\n  display: inline-flex;\n  flex: 1 1 0%;\n  align-items: center;\n}\n\n.icon {\n  pointer-events: none;\n  position: absolute;\n  display: block;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n\n.icon,\n.resize-icon-wrapper {\n  z-index: var(--calcite-z-index);\n}\n\ninput[type=text]::-ms-clear,\ninput[type=text]::-ms-reveal {\n  display: none;\n  block-size: 0px;\n  inline-size: 0px;\n}\n\ninput[type=search]::-webkit-search-decoration,\ninput[type=search]::-webkit-search-cancel-button,\ninput[type=search]::-webkit-search-results-button,\ninput[type=search]::-webkit-search-results-decoration,\ninput[type=date]::-webkit-clear-button,\ninput[type=time]::-webkit-clear-button {\n  display: none;\n}\n\n.clear-button {\n  pointer-events: initial;\n  order: 4;\n  margin: 0px;\n  box-sizing: border-box;\n  display: flex;\n  min-block-size: 100%;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  align-self: stretch;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-foreground-1);\n  outline-color: transparent;\n  border-inline-start-width: 0px;\n}\n.clear-button:hover {\n  background-color: var(--calcite-color-foreground-2);\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n.clear-button:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n.clear-button:active {\n  background-color: var(--calcite-color-foreground-3);\n}\n.clear-button:active calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n.clear-button:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n.clear-button:disabled {\n  opacity: var(--calcite-opacity-disabled);\n}\n\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  pointer-events: none;\n  position: absolute;\n  display: block;\n}\n\n.action-wrapper {\n  order: 7;\n  display: flex;\n}\n\n.prefix,\n.suffix {\n  box-sizing: border-box;\n  display: flex;\n  block-size: auto;\n  min-block-size: 100%;\n  -webkit-user-select: none;\n          user-select: none;\n  align-content: center;\n  align-items: center;\n  overflow-wrap: break-word;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-background);\n  font-weight: var(--calcite-font-weight-medium);\n  line-height: 1;\n  color: var(--calcite-color-text-2);\n}\n\n.prefix {\n  order: 2;\n  border-inline-end-width: 0px;\n}\n\n.suffix {\n  order: 5;\n  border-inline-start-width: 0px;\n}\n\n:host([alignment=start]) textarea, :host([alignment=start]) input {\n  text-align: start;\n}\n\n:host([alignment=end]) textarea, :host([alignment=end]) input {\n  text-align: end;\n}\n\ninput[type=number] {\n  -moz-appearance: textfield;\n}\ninput[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  -moz-appearance: textfield;\n  margin: 0px;\n}\n\n.number-button-wrapper {\n  pointer-events: none;\n  order: 6;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n\n:host([number-button-type=vertical]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=vertical]) input,\n:host([number-button-type=vertical]) textarea {\n  order: 2;\n}\n\n:host([number-button-type=horizontal]) .calcite--rtl .number-button-item[data-adjustment=down] calcite-icon {\n  transform: rotate(-90deg);\n}\n:host([number-button-type=horizontal]) .calcite--rtl .number-button-item[data-adjustment=up] calcite-icon {\n  transform: rotate(-90deg);\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=down], .number-button-item.number-button-item--horizontal[data-adjustment=up] {\n  order: 1;\n  max-block-size: 100%;\n  min-block-size: 100%;\n  align-self: stretch;\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=down] calcite-icon, .number-button-item.number-button-item--horizontal[data-adjustment=up] calcite-icon {\n  transform: rotate(90deg);\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=down] {\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  border-inline-end-width: 0px;\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=down]:hover {\n  background-color: var(--calcite-color-foreground-2);\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=down]:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=up] {\n  order: 5;\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=up]:hover {\n  background-color: var(--calcite-color-foreground-2);\n}\n.number-button-item.number-button-item--horizontal[data-adjustment=up]:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=down]:hover {\n  background-color: var(--calcite-color-foreground-2);\n}\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=down]:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=up]:hover {\n  background-color: var(--calcite-color-foreground-2);\n}\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=up]:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n\n:host([number-button-type=vertical]) .number-button-item[data-adjustment=down] {\n  border-block-start-width: 0px;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  margin: 0px;\n  box-sizing: border-box;\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  align-self: center;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-foreground-1);\n  padding-block: 0px;\n  padding-inline: 0.5rem;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  border-inline-start-width: 0px;\n}\n.number-button-item calcite-icon {\n  pointer-events: none;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n.number-button-item:focus {\n  background-color: var(--calcite-color-foreground-2);\n}\n.number-button-item:focus calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n.number-button-item:active {\n  background-color: var(--calcite-color-foreground-3);\n}\n.number-button-item:disabled {\n  pointer-events: none;\n}\n\n.wrapper {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n:input::-webkit-calendar-picker-indicator {\n  display: none;\n}\n\ninput[type=date]::-webkit-input-placeholder {\n  visibility: hidden !important;\n}\n\ntextarea::-webkit-resizer {\n  position: absolute;\n  inset-block-end: 0px;\n  box-sizing: border-box;\n  padding-block: 0px;\n  padding-inline: 0.25rem;\n  inset-inline-end: 0;\n}\n\n.resize-icon-wrapper {\n  inset-block-end: 2px;\n  inset-inline-end: 2px;\n  pointer-events: none;\n  position: absolute;\n  block-size: 0.75rem;\n  inline-size: 0.75rem;\n  background-color: var(--calcite-color-foreground-1);\n  color: var(--calcite-color-text-3);\n}\n.resize-icon-wrapper calcite-icon {\n  inset-block-end: 0.25rem;\n  inset-inline-end: 0.25rem;\n  transform: rotate(-45deg);\n}\n\n.calcite--rtl .resize-icon-wrapper calcite-icon {\n  transform: rotate(45deg);\n}\n\n:host([type=color]) input {\n  padding: 0.25rem;\n}\n\n:host([type=file]) input {\n  cursor: pointer;\n  border-width: 1px;\n  border-style: dashed;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-foreground-1);\n  text-align: center;\n}\n\n:host([type=file][scale=s]) input {\n  padding-block: 1px;\n  padding-inline: 0.5rem;\n}\n\n:host([type=file][scale=m]) input {\n  padding-block: 0.25rem;\n  padding-inline: 0.75rem;\n}\n\n:host([type=file][scale=l]) input {\n  padding-block: 0.5rem;\n  padding-inline: 1rem;\n}\n\n:host(.no-bottom-border) input {\n  border-block-end-width: 0px;\n}\n\n:host(.border-top-color-one) input {\n  border-block-start-color: var(--calcite-color-border-1);\n}\n\ninput.inline-child {\n  background-color: transparent;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\ninput.inline-child .editing-enabled {\n  background-color: inherit;\n}\ninput.inline-child:not(.editing-enabled) {\n  display: flex;\n  cursor: pointer;\n  text-overflow: ellipsis;\n  border-color: transparent;\n  padding-inline-start: 0;\n}\n\n.validation-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n}\n\n:host([scale=m]) .validation-container,\n:host([scale=l]) .validation-container {\n  padding-block-start: 0.5rem;\n}\n\n:host([scale=s]) .validation-container {\n  padding-block-start: 0.25rem;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.8.0\n */\nimport { forceUpdate, h, Host, } from \"@stencil/core\";\nimport { getElementDir, getSlotted, isPrimaryPointerButton, setRequestedIcon, } from \"../../utils/dom\";\nimport { connectForm, disconnectForm, HiddenFormInputSlot, internalHiddenInputInputEvent, submitForm, } from \"../../utils/form\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText } from \"../../utils/label\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, numberStringFormatter, } from \"../../utils/locale\";\nimport { addLocalizedTrailingDecimalZeros, BigDecimal, isValidNumber, parseNumberString, sanitizeNumberString, } from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { CSS, INPUT_TYPE_ICONS, SLOTS } from \"./resources\";\nimport { syncHiddenFormInput } from \"./common/input\";\n/**\n * @slot action - A slot for positioning a `calcite-button` next to the component.\n */\nexport class Input {\n    constructor() {\n        /** keep track of the rendered child type */\n        this.childElType = \"input\";\n        this.previousValueOrigin = \"initial\";\n        this.mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n        this.userChangedValue = false;\n        //--------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        //--------------------------------------------------------------------------\n        this.keyDownHandler = (event) => {\n            if (this.readOnly || this.disabled || event.defaultPrevented) {\n                return;\n            }\n            if (this.isClearable && event.key === \"Escape\") {\n                this.clearInputValue(event);\n                event.preventDefault();\n            }\n            if (event.key === \"Enter\") {\n                if (submitForm(this)) {\n                    event.preventDefault();\n                }\n            }\n        };\n        this.clearInputValue = (nativeEvent) => {\n            this.setValue({\n                committing: true,\n                nativeEvent,\n                origin: \"user\",\n                value: \"\",\n            });\n        };\n        this.emitChangeIfUserModified = () => {\n            if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedValue) {\n                this.calciteInputChange.emit();\n                this.setPreviousEmittedValue(this.value);\n            }\n        };\n        this.inputBlurHandler = () => {\n            window.clearInterval(this.nudgeNumberValueIntervalId);\n            this.calciteInternalInputBlur.emit();\n            this.emitChangeIfUserModified();\n        };\n        this.clickHandler = (event) => {\n            if (this.disabled) {\n                return;\n            }\n            const slottedActionEl = getSlotted(this.el, \"action\");\n            if (event.target !== slottedActionEl) {\n                this.setFocus();\n            }\n        };\n        this.inputFocusHandler = () => {\n            this.calciteInternalInputFocus.emit();\n        };\n        this.inputChangeHandler = () => {\n            if (this.type === \"file\") {\n                this.files = this.childEl.files;\n            }\n        };\n        this.inputInputHandler = (nativeEvent) => {\n            if (this.disabled || this.readOnly) {\n                return;\n            }\n            this.setValue({\n                nativeEvent,\n                origin: \"user\",\n                value: nativeEvent.target.value,\n            });\n        };\n        this.inputKeyDownHandler = (event) => {\n            if (this.disabled || this.readOnly) {\n                return;\n            }\n            if (event.key === \"Enter\") {\n                this.emitChangeIfUserModified();\n            }\n        };\n        this.inputNumberInputHandler = (nativeEvent) => {\n            if (this.disabled || this.readOnly) {\n                return;\n            }\n            if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n                return;\n            }\n            const value = nativeEvent.target.value;\n            numberStringFormatter.numberFormatOptions = {\n                locale: this.effectiveLocale,\n                numberingSystem: this.numberingSystem,\n                useGrouping: this.groupSeparator,\n            };\n            const delocalizedValue = numberStringFormatter.delocalize(value);\n            if (nativeEvent.inputType === \"insertFromPaste\") {\n                if (!isValidNumber(delocalizedValue)) {\n                    nativeEvent.preventDefault();\n                }\n                this.setValue({\n                    nativeEvent,\n                    origin: \"user\",\n                    value: parseNumberString(delocalizedValue),\n                });\n                this.childNumberEl.value = this.displayedValue;\n            }\n            else {\n                this.setValue({\n                    nativeEvent,\n                    origin: \"user\",\n                    value: delocalizedValue,\n                });\n            }\n        };\n        this.inputNumberKeyDownHandler = (event) => {\n            if (this.type !== \"number\" || this.disabled || this.readOnly) {\n                return;\n            }\n            if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n                event.preventDefault();\n                if (event.key === \"Backspace\" || event.key === \"Delete\") {\n                    this.clearInputValue(event);\n                }\n                return;\n            }\n            if (event.key === \"ArrowUp\") {\n                /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n                event.preventDefault();\n                this.nudgeNumberValue(\"up\", event);\n                return;\n            }\n            if (event.key === \"ArrowDown\") {\n                this.nudgeNumberValue(\"down\", event);\n                return;\n            }\n            const supportedKeys = [\n                ...numberKeys,\n                \"ArrowLeft\",\n                \"ArrowRight\",\n                \"Backspace\",\n                \"Delete\",\n                \"Enter\",\n                \"Escape\",\n                \"Tab\",\n            ];\n            if (event.altKey || event.ctrlKey || event.metaKey) {\n                return;\n            }\n            const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n            if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n                if (event.key === \"Enter\") {\n                    this.emitChangeIfUserModified();\n                }\n                return;\n            }\n            numberStringFormatter.numberFormatOptions = {\n                locale: this.effectiveLocale,\n                numberingSystem: this.numberingSystem,\n                useGrouping: this.groupSeparator,\n            };\n            if (event.key === numberStringFormatter.decimal) {\n                if (!this.value && !this.childNumberEl.value) {\n                    return;\n                }\n                if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n                    return;\n                }\n            }\n            if (/[eE]/.test(event.key)) {\n                if (!this.value && !this.childNumberEl.value) {\n                    return;\n                }\n                if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n                    return;\n                }\n            }\n            if (event.key === \"-\") {\n                if (!this.value && !this.childNumberEl.value) {\n                    return;\n                }\n                if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n                    return;\n                }\n            }\n            event.preventDefault();\n        };\n        this.nudgeNumberValue = (direction, nativeEvent) => {\n            if ((nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) || this.type !== \"number\") {\n                return;\n            }\n            const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n            const inputMin = this.minString ? parseFloat(this.minString) : null;\n            const valueNudgeDelayInMs = 150;\n            this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n            if (this.nudgeNumberValueIntervalId) {\n                window.clearInterval(this.nudgeNumberValueIntervalId);\n            }\n            let firstValueNudge = true;\n            this.nudgeNumberValueIntervalId = window.setInterval(() => {\n                if (firstValueNudge) {\n                    firstValueNudge = false;\n                    return;\n                }\n                this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n            }, valueNudgeDelayInMs);\n        };\n        this.numberButtonPointerUpAndOutHandler = () => {\n            window.clearInterval(this.nudgeNumberValueIntervalId);\n        };\n        this.numberButtonPointerDownHandler = (event) => {\n            if (!isPrimaryPointerButton(event)) {\n                return;\n            }\n            event.preventDefault();\n            const direction = event.target.dataset.adjustment;\n            if (!this.disabled) {\n                this.nudgeNumberValue(direction, event);\n            }\n        };\n        this.onHiddenFormInputInput = (event) => {\n            if (event.target.name === this.name) {\n                this.setValue({\n                    value: event.target.value,\n                    origin: \"direct\",\n                });\n            }\n            this.setFocus();\n            event.stopPropagation();\n        };\n        this.setChildElRef = (el) => {\n            this.childEl = el;\n        };\n        this.setChildNumberElRef = (el) => {\n            this.childNumberEl = el;\n        };\n        this.setInputValue = (newInputValue) => {\n            if (this.type === \"text\" && !this.childEl) {\n                return;\n            }\n            if (this.type === \"number\" && !this.childNumberEl) {\n                return;\n            }\n            this[`child${this.type === \"number\" ? \"Number\" : \"\"}El`].value = newInputValue;\n        };\n        this.setPreviousEmittedValue = (value) => {\n            this.previousEmittedValue = this.normalizeValue(value);\n        };\n        this.setPreviousValue = (value) => {\n            this.previousValue = this.normalizeValue(value);\n        };\n        this.setValue = ({ committing = false, nativeEvent, origin, previousValue, value, }) => {\n            this.setPreviousValue(previousValue ?? this.value);\n            this.previousValueOrigin = origin;\n            if (this.type === \"number\") {\n                numberStringFormatter.numberFormatOptions = {\n                    locale: this.effectiveLocale,\n                    numberingSystem: this.numberingSystem,\n                    useGrouping: this.groupSeparator,\n                    signDisplay: \"never\",\n                };\n                const isValueDeleted = this.previousValue?.length > value.length || this.value?.length > value.length;\n                const hasTrailingDecimalSeparator = value.charAt(value.length - 1) === \".\";\n                const sanitizedValue = hasTrailingDecimalSeparator && isValueDeleted ? value : sanitizeNumberString(value);\n                const newValue = value && !sanitizedValue\n                    ? isValidNumber(this.previousValue)\n                        ? this.previousValue\n                        : \"\"\n                    : sanitizedValue;\n                let newLocalizedValue = numberStringFormatter.localize(newValue);\n                if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n                    newLocalizedValue = addLocalizedTrailingDecimalZeros(newLocalizedValue, newValue, numberStringFormatter);\n                }\n                // adds localized trailing decimal separator\n                this.displayedValue =\n                    hasTrailingDecimalSeparator && isValueDeleted\n                        ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n                        : newLocalizedValue;\n                this.userChangedValue = origin === \"user\" && this.value !== newValue;\n                // don't sanitize the start of negative/decimal numbers, but\n                // don't set value to an invalid number\n                this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n            }\n            else {\n                this.userChangedValue = origin === \"user\" && this.value !== value;\n                this.value = value;\n            }\n            if (origin === \"direct\") {\n                this.setInputValue(value);\n                this.previousEmittedValue = value;\n            }\n            if (nativeEvent) {\n                const calciteInputInputEvent = this.calciteInputInput.emit();\n                if (calciteInputInputEvent.defaultPrevented) {\n                    this.value = this.previousValue;\n                    this.displayedValue =\n                        this.type === \"number\"\n                            ? numberStringFormatter.localize(this.previousValue)\n                            : this.previousValue;\n                }\n                else if (committing) {\n                    this.emitChangeIfUserModified();\n                }\n            }\n        };\n        this.inputKeyUpHandler = () => {\n            window.clearInterval(this.nudgeNumberValueIntervalId);\n        };\n        this.alignment = \"start\";\n        this.clearable = false;\n        this.disabled = false;\n        this.form = undefined;\n        this.groupSeparator = false;\n        this.icon = undefined;\n        this.iconFlipRtl = false;\n        this.label = undefined;\n        this.loading = false;\n        this.numberingSystem = undefined;\n        this.localeFormat = false;\n        this.max = undefined;\n        this.min = undefined;\n        this.maxLength = undefined;\n        this.minLength = undefined;\n        this.validationMessage = undefined;\n        this.validationIcon = undefined;\n        this.validity = {\n            valid: false,\n            badInput: false,\n            customError: false,\n            patternMismatch: false,\n            rangeOverflow: false,\n            rangeUnderflow: false,\n            stepMismatch: false,\n            tooLong: false,\n            tooShort: false,\n            typeMismatch: false,\n            valueMissing: false,\n        };\n        this.name = undefined;\n        this.numberButtonType = \"vertical\";\n        this.placeholder = undefined;\n        this.prefixText = undefined;\n        this.readOnly = false;\n        this.required = false;\n        this.scale = \"m\";\n        this.status = \"idle\";\n        this.step = undefined;\n        this.autocomplete = undefined;\n        this.pattern = undefined;\n        this.accept = undefined;\n        this.multiple = false;\n        this.suffixText = undefined;\n        this.editingEnabled = false;\n        this.type = \"text\";\n        this.value = \"\";\n        this.files = undefined;\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.defaultMessages = undefined;\n        this.effectiveLocale = \"\";\n        this.displayedValue = undefined;\n        this.slottedActionElDisabledInternally = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Global attributes\n    //\n    //--------------------------------------------------------------------------\n    handleGlobalAttributesChanged() {\n        forceUpdate(this);\n    }\n    disabledWatcher() {\n        this.setDisabledAction();\n    }\n    /** watcher to update number-to-string for max */\n    maxWatcher() {\n        this.maxString = this.max?.toString() || null;\n    }\n    /** watcher to update number-to-string for min */\n    minWatcher() {\n        this.minString = this.min?.toString() || null;\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    valueWatcher(newValue, previousValue) {\n        if (!this.userChangedValue) {\n            if (this.type === \"number\" && (newValue === \"Infinity\" || newValue === \"-Infinity\")) {\n                this.displayedValue = newValue;\n                this.previousEmittedValue = newValue;\n                return;\n            }\n            this.setValue({\n                origin: \"direct\",\n                previousValue,\n                value: newValue == null || newValue == \"\"\n                    ? \"\"\n                    : this.type === \"number\"\n                        ? isValidNumber(newValue)\n                            ? newValue\n                            : this.previousValue || \"\"\n                        : newValue,\n            });\n            this.warnAboutInvalidNumberValue(newValue);\n        }\n        this.userChangedValue = false;\n    }\n    updateRequestedIcon() {\n        this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n    }\n    get isClearable() {\n        return !this.isTextarea && (this.clearable || this.type === \"search\") && this.value?.length > 0;\n    }\n    get isTextarea() {\n        return this.childElType === \"textarea\";\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n        connectLocalized(this);\n        connectMessages(this);\n        this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n        if (this.inlineEditableEl) {\n            this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n        }\n        connectLabel(this);\n        connectForm(this);\n        this.mutationObserver?.observe(this.el, { childList: true });\n        this.setDisabledAction();\n        this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLabel(this);\n        disconnectForm(this);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        this.mutationObserver?.disconnect();\n        this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        this.childElType = this.type === \"textarea\" ? \"textarea\" : \"input\";\n        this.maxString = this.max?.toString();\n        this.minString = this.min?.toString();\n        this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n        await setUpMessages(this);\n        this.setPreviousEmittedValue(this.value);\n        this.setPreviousValue(this.value);\n        if (this.type === \"number\") {\n            if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n                this.displayedValue = this.value;\n                this.previousEmittedValue = this.value;\n            }\n            else {\n                this.warnAboutInvalidNumberValue(this.value);\n                this.setValue({\n                    origin: \"connected\",\n                    value: isValidNumber(this.value) ? this.value : \"\",\n                });\n            }\n        }\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    componentShouldUpdate(newValue, oldValue, property) {\n        if (this.type === \"number\" && property === \"value\" && newValue && !isValidNumber(newValue)) {\n            this.setValue({\n                origin: \"reset\",\n                value: oldValue,\n            });\n            return false;\n        }\n        return true;\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        if (this.type === \"number\") {\n            this.childNumberEl?.focus();\n        }\n        else {\n            this.childEl?.focus();\n        }\n    }\n    /** Selects the text of the component's `value`. */\n    async selectText() {\n        if (this.type === \"number\") {\n            this.childNumberEl?.select();\n        }\n        else {\n            this.childEl?.select();\n        }\n    }\n    onLabelClick() {\n        this.setFocus();\n    }\n    incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent) {\n        const { value } = this;\n        if (value === \"Infinity\" || value === \"-Infinity\") {\n            return;\n        }\n        const adjustment = direction === \"up\" ? 1 : -1;\n        const inputStep = this.step === \"any\" ? 1 : Math.abs(this.step || 1);\n        const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n        const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n        const nudgedValueBelowInputMin = () => typeof inputMin === \"number\" &&\n            !isNaN(inputMin) &&\n            nudgedValue.subtract(`${inputMin}`).isNegative;\n        const nudgedValueAboveInputMax = () => typeof inputMax === \"number\" &&\n            !isNaN(inputMax) &&\n            !nudgedValue.subtract(`${inputMax}`).isNegative;\n        const finalValue = nudgedValueBelowInputMin()\n            ? `${inputMin}`\n            : nudgedValueAboveInputMax()\n                ? `${inputMax}`\n                : nudgedValue.toString();\n        this.setValue({\n            committing: true,\n            nativeEvent,\n            origin: \"user\",\n            value: finalValue,\n        });\n    }\n    syncHiddenFormInput(input) {\n        syncHiddenFormInput(this.type, this, input);\n    }\n    setDisabledAction() {\n        const slottedActionEl = getSlotted(this.el, \"action\");\n        if (!slottedActionEl) {\n            return;\n        }\n        if (this.disabled) {\n            if (slottedActionEl.getAttribute(\"disabled\") == null) {\n                this.slottedActionElDisabledInternally = true;\n            }\n            slottedActionEl.setAttribute(\"disabled\", \"\");\n        }\n        else if (this.slottedActionElDisabledInternally) {\n            slottedActionEl.removeAttribute(\"disabled\");\n            this.slottedActionElDisabledInternally = false;\n        }\n    }\n    normalizeValue(value) {\n        return this.type === \"number\" ? (isValidNumber(value) ? value : \"\") : value;\n    }\n    warnAboutInvalidNumberValue(value) {\n        if (this.type === \"number\" && value && !isValidNumber(value)) {\n            console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        const dir = getElementDir(this.el);\n        const loader = (h(\"div\", { key: '2c71b6ec377f2fb94b228db2aa4f38799c788726', class: CSS.loader }, h(\"calcite-progress\", { key: 'ddcf3deefc554793630fdbe91131f2ee080c942a', label: this.messages.loading, type: \"indeterminate\" })));\n        const inputClearButton = (h(\"button\", { key: 'e13b6454e1131d0a3d536e36e301f8b6eeb1214f', \"aria-label\": this.messages.clear, class: CSS.clearButton, disabled: this.disabled || this.readOnly, onClick: this.clearInputValue, tabIndex: -1, type: \"button\" }, h(\"calcite-icon\", { key: '48670788a48d60d542ed58083619063ca0fa11df', icon: \"x\", scale: getIconScale(this.scale) })));\n        const iconEl = (h(\"calcite-icon\", { key: '3715be60f2a484a15da8b2d4e2655632dba9bc02', class: CSS.inputIcon, flipRtl: this.iconFlipRtl, icon: this.requestedIcon, scale: getIconScale(this.scale) }));\n        const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n        const numberButtonsHorizontalUp = (h(\"button\", { key: '8c35ef7d721edb587230cd13a2a01e2a641b1f88', \"aria-hidden\": \"true\", class: {\n                [CSS.numberButtonItem]: true,\n                [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n            }, \"data-adjustment\": \"up\", disabled: this.disabled || this.readOnly, onPointerDown: this.numberButtonPointerDownHandler, onPointerOut: this.numberButtonPointerUpAndOutHandler, onPointerUp: this.numberButtonPointerUpAndOutHandler, tabIndex: -1, type: \"button\" }, h(\"calcite-icon\", { key: '594b34752670380a5212ccf0c939a1a549ec2955', icon: \"chevron-up\", scale: getIconScale(this.scale) })));\n        const numberButtonsHorizontalDown = (h(\"button\", { key: '3d977b9a6c3a7b7e564b3a5aaf956a8aba9c788c', \"aria-hidden\": \"true\", class: {\n                [CSS.numberButtonItem]: true,\n                [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n            }, \"data-adjustment\": \"down\", disabled: this.disabled || this.readOnly, onPointerDown: this.numberButtonPointerDownHandler, onPointerOut: this.numberButtonPointerUpAndOutHandler, onPointerUp: this.numberButtonPointerUpAndOutHandler, tabIndex: -1, type: \"button\" }, h(\"calcite-icon\", { key: 'ae9f4699c386024f9a18160179047185a44a0860', icon: \"chevron-down\", scale: getIconScale(this.scale) })));\n        const numberButtonsVertical = (h(\"div\", { key: 'd869bc9f083435d8010f06c120d6295ef58de022', class: CSS.numberButtonWrapper }, numberButtonsHorizontalUp, numberButtonsHorizontalDown));\n        const prefixText = h(\"div\", { key: 'e03ef05ffdcddb66e7d72de0eae7bb6de2d0caa5', class: CSS.prefix }, this.prefixText);\n        const suffixText = h(\"div\", { key: '0fd91ad8fae5501624e2047527faaae10478ac90', class: CSS.suffix }, this.suffixText);\n        const localeNumberInput = this.type === \"number\" ? (h(\"input\", { accept: this.accept, \"aria-label\": getLabelText(this), autocomplete: this.autocomplete, autofocus: this.el.autofocus ? true : null, defaultValue: this.defaultValue, disabled: this.disabled ? true : null, enterKeyHint: this.el.enterKeyHint, inputMode: this.el.inputMode, key: \"localized-input\", maxLength: this.maxLength, minLength: this.minLength, multiple: this.multiple, name: undefined, onBlur: this.inputBlurHandler, onFocus: this.inputFocusHandler, onInput: this.inputNumberInputHandler, onKeyDown: this.inputNumberKeyDownHandler, onKeyUp: this.inputKeyUpHandler, pattern: this.pattern, placeholder: this.placeholder || \"\", readOnly: this.readOnly, type: \"text\", value: this.displayedValue,\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref: this.setChildNumberElRef })) : null;\n        const childEl = this.type !== \"number\"\n            ? [\n                h(this.childElType, { accept: this.accept, \"aria-label\": getLabelText(this), autocomplete: this.autocomplete, autofocus: this.el.autofocus ? true : null, class: {\n                        [CSS.editingEnabled]: this.editingEnabled,\n                        [CSS.inlineChild]: !!this.inlineEditableEl,\n                    }, defaultValue: this.defaultValue, disabled: this.disabled ? true : null, enterKeyHint: this.el.enterKeyHint, inputMode: this.el.inputMode, max: this.maxString, maxLength: this.maxLength, min: this.minString, minLength: this.minLength, multiple: this.multiple, name: this.name, onBlur: this.inputBlurHandler, onChange: this.inputChangeHandler, onFocus: this.inputFocusHandler, onInput: this.inputInputHandler, onKeyDown: this.inputKeyDownHandler, onKeyUp: this.inputKeyUpHandler, pattern: this.pattern, placeholder: this.placeholder || \"\", readOnly: this.readOnly, required: this.required ? true : null, step: this.step, tabIndex: this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null, type: this.type, value: this.value,\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref: this.setChildElRef }),\n                this.isTextarea ? (h(\"div\", { class: CSS.resizeIconWrapper }, h(\"calcite-icon\", { icon: \"chevron-down\", scale: getIconScale(this.scale) }))) : null,\n            ]\n            : null;\n        return (h(Host, { key: '8e22f65c5aa4820e0e158d3baa58ddc077eee6b4', onClick: this.clickHandler, onKeyDown: this.keyDownHandler }, h(InteractiveContainer, { key: 'e355c41516ca72583eb82cc46a0bf0a63bc3660a', disabled: this.disabled }, h(\"div\", { key: '8f95e8494d5490429ff30e85cb7b6ad5498ab7f9', class: { [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" } }, this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n            ? numberButtonsHorizontalDown\n            : null, this.prefixText ? prefixText : null, h(\"div\", { key: '01a63a07add2ebb157118c32faaa17fc1a32b9ae', class: CSS.wrapper }, localeNumberInput, childEl, this.isClearable ? inputClearButton : null, this.requestedIcon ? iconEl : null, this.loading ? loader : null), h(\"div\", { key: '0a6cb81782704f2034813d452e33aa95ac73dc47', class: CSS.actionWrapper }, h(\"slot\", { key: 'fc62ee1f7350c8227184fb74e99ad3f6cf6ca716', name: SLOTS.action })), this.type === \"number\" && this.numberButtonType === \"vertical\" && !this.readOnly\n            ? numberButtonsVertical\n            : null, this.suffixText ? suffixText : null, this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n            ? numberButtonsHorizontalUp\n            : null, h(HiddenFormInputSlot, { key: 'a19f44cf7d672070a4872d3090e23dfc48ac764e', component: this })), this.validationMessage && this.status === \"invalid\" ? (h(Validation, { icon: this.validationIcon, message: this.validationMessage, scale: this.scale, status: this.status })) : null)));\n    }\n    static get is() { return \"calcite-input\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"input.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"input.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"start\\\" | \\\"end\\\", Alignment>\",\n                    \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Alignment\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Alignment\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the text alignment of the component's value.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"start\\\"\"\n            },\n            \"clearable\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, a clear button is displayed when the component has a value. The clear button shows by default for `\\\"search\\\"`, `\\\"time\\\"`, and `\\\"date\\\"` types, and will not display for the `\\\"textarea\\\"` type.\"\n                },\n                \"attribute\": \"clearable\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\"\n                        }],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor form element, if any.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": true\n            },\n            \"groupSeparator\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, number values are displayed with a group separator corresponding to the language and country format.\"\n                },\n                \"attribute\": \"group-separator\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"icon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon.\"\n                },\n                \"attribute\": \"icon\",\n                \"reflect\": true\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"loading\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, a busy indicator is displayed.\"\n                },\n                \"attribute\": \"loading\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"numberingSystem\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"NumberingSystem\",\n                    \"resolved\": \"\\\"arab\\\" | \\\"arabext\\\" | \\\"latn\\\"\",\n                    \"references\": {\n                        \"NumberingSystem\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/locale\",\n                            \"id\": \"src/utils/locale.ts::NumberingSystem\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the Unicode numeral system used by the component for localization.\"\n                },\n                \"attribute\": \"numbering-system\",\n                \"reflect\": true\n            },\n            \"localeFormat\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"When `true`, uses locale formatting for numbers.\"\n                },\n                \"attribute\": \"locale-format\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"max\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\"\n                        }],\n                    \"text\": \"Specifies the maximum value for type \\\"number\\\".\"\n                },\n                \"attribute\": \"max\",\n                \"reflect\": true\n            },\n            \"min\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\"\n                        }],\n                    \"text\": \"Specifies the minimum value for `type=\\\"number\\\"`.\"\n                },\n                \"attribute\": \"min\",\n                \"reflect\": true\n            },\n            \"maxLength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\"\n                        }],\n                    \"text\": \"Specifies the maximum length of text for the component's value.\"\n                },\n                \"attribute\": \"max-length\",\n                \"reflect\": true\n            },\n            \"minLength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\"\n                        }],\n                    \"text\": \"Specifies the minimum length of text for the component's value.\"\n                },\n                \"attribute\": \"min-length\",\n                \"reflect\": true\n            },\n            \"validationMessage\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation message to display under the component.\"\n                },\n                \"attribute\": \"validation-message\",\n                \"reflect\": false\n            },\n            \"validationIcon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation icon to display under the component.\"\n                },\n                \"attribute\": \"validation-icon\",\n                \"reflect\": true\n            },\n            \"validity\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"MutableValidityState\",\n                    \"resolved\": \"{ valid: boolean; badInput: boolean; customError: boolean; patternMismatch: boolean; rangeOverflow: boolean; rangeUnderflow: boolean; stepMismatch: boolean; tooLong: boolean; tooShort: boolean; typeMismatch: boolean; valueMissing: boolean; }\",\n                    \"references\": {\n                        \"MutableValidityState\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/form\",\n                            \"id\": \"src/utils/form.tsx::MutableValidityState\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }, {\n                            \"name\": \"mdn\",\n                            \"text\": \"[ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\"\n                        }],\n                    \"text\": \"The current validation state of the component.\"\n                },\n                \"defaultValue\": \"{\\n    valid: false,\\n    badInput: false,\\n    customError: false,\\n    patternMismatch: false,\\n    rangeOverflow: false,\\n    rangeUnderflow: false,\\n    stepMismatch: false,\\n    tooLong: false,\\n    tooShort: false,\\n    typeMismatch: false,\\n    valueMissing: false,\\n  }\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\"\n                        }],\n                    \"text\": \"Specifies the name of the component.\\n\\nRequired to pass the component's `value` on form submission.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": true\n            },\n            \"numberButtonType\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"InputPlacement\",\n                    \"resolved\": \"\\\"horizontal\\\" | \\\"none\\\" | \\\"vertical\\\"\",\n                    \"references\": {\n                        \"InputPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/input/interfaces.ts::InputPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the placement of the buttons for `type=\\\"number\\\"`.\"\n                },\n                \"attribute\": \"number-button-type\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"vertical\\\"\"\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\"\n                        }],\n                    \"text\": \"Specifies placeholder text for the component.\"\n                },\n                \"attribute\": \"placeholder\",\n                \"reflect\": false\n            },\n            \"prefixText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Adds text to the start of the component.\"\n                },\n                \"attribute\": \"prefix-text\",\n                \"reflect\": false\n            },\n            \"readOnly\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\"\n                        }],\n                    \"text\": \"When `true`, the component's value can be read, but cannot be modified.\"\n                },\n                \"attribute\": \"read-only\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n                },\n                \"attribute\": \"required\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Status\",\n                    \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n                    \"references\": {\n                        \"Status\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Status\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the status of the input field, which determines message and icons.\"\n                },\n                \"attribute\": \"status\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"idle\\\"\"\n            },\n            \"step\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number | \\\"any\\\"\",\n                    \"resolved\": \"\\\"any\\\" | number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\"\n                        }],\n                    \"text\": \"Specifies the granularity the component's `value` must adhere to.\"\n                },\n                \"attribute\": \"step\",\n                \"reflect\": true\n            },\n            \"autocomplete\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\"\n                        }],\n                    \"text\": \"Specifies the type of content to autocomplete, for use in forms.\\nRead the native attribute's documentation on MDN for more info.\"\n                },\n                \"attribute\": \"autocomplete\",\n                \"reflect\": false\n            },\n            \"pattern\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\"\n                        }],\n                    \"text\": \"Specifies a regex pattern the component's `value` must match for validation.\\nRead the native attribute's documentation on MDN for more info.\"\n                },\n                \"attribute\": \"pattern\",\n                \"reflect\": false\n            },\n            \"accept\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\"\n                        }],\n                    \"text\": \"Specifies a comma separated list of unique file type specifiers for limiting accepted file types.\\nThis property only has an effect when `type` is \\\"file\\\".\\nRead the native attribute's documentation on MDN for more info.\"\n                },\n                \"attribute\": \"accept\",\n                \"reflect\": false\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple)\"\n                        }],\n                    \"text\": \"When `true`, the component can accept more than one value.\\nThis property only has an effect when `type` is \\\"email\\\" or \\\"file\\\".\\nRead the native attribute's documentation on MDN for more info.\"\n                },\n                \"attribute\": \"multiple\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"suffixText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Adds text to the end of the component.\"\n                },\n                \"attribute\": \"suffix-text\",\n                \"reflect\": false\n            },\n            \"editingEnabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"editing-enabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"| \\\"color\\\"\\n    | \\\"date\\\"\\n    | \\\"datetime-local\\\"\\n    | \\\"email\\\"\\n    | \\\"file\\\"\\n    | \\\"image\\\"\\n    | \\\"month\\\"\\n    | \\\"number\\\"\\n    | \\\"password\\\"\\n    | \\\"search\\\"\\n    | \\\"tel\\\"\\n    | \\\"text\\\"\\n    | \\\"textarea\\\"\\n    | \\\"time\\\"\\n    | \\\"url\\\"\\n    | \\\"week\\\"\",\n                    \"resolved\": \"\\\"color\\\" | \\\"date\\\" | \\\"datetime-local\\\" | \\\"email\\\" | \\\"file\\\" | \\\"image\\\" | \\\"month\\\" | \\\"number\\\" | \\\"password\\\" | \\\"search\\\" | \\\"tel\\\" | \\\"text\\\" | \\\"textarea\\\" | \\\"time\\\" | \\\"url\\\" | \\\"week\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the component type.\\n\\nNote that the following `type`s add type-specific icons by default: `\\\"date\\\"`, `\\\"email\\\"`, `\\\"password\\\"`, `\\\"search\\\"`, `\\\"tel\\\"`, `\\\"time\\\"`.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"text\\\"\"\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's value.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"\\\"\\\"\"\n            },\n            \"files\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FileList | undefined\",\n                    \"resolved\": \"FileList\",\n                    \"references\": {\n                        \"FileList\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::FileList\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/files\"\n                        }],\n                    \"text\": \"When `type` is `\\\"file\\\"`, specifies the component's selected files.\"\n                }\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"InputMessages\",\n                    \"resolved\": \"{ clear: string; loading: string; }\",\n                    \"references\": {\n                        \"InputMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/input/t9n\",\n                            \"id\": \"src/components/input/assets/input/t9n/index.d.ts::InputMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<InputMessages>\",\n                    \"resolved\": \"{ clear?: string; loading?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"InputMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/input/t9n\",\n                            \"id\": \"src/components/input/assets/input/t9n/index.d.ts::InputMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"defaultMessages\": {},\n            \"effectiveLocale\": {},\n            \"displayedValue\": {},\n            \"slottedActionElDisabledInternally\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteInternalInputFocus\",\n                \"name\": \"calciteInternalInputFocus\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInternalInputBlur\",\n                \"name\": \"calciteInternalInputBlur\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInputInput\",\n                \"name\": \"calciteInputInput\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires each time a new `value` is typed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInputChange\",\n                \"name\": \"calciteInputChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires each time a new `value` is typed and committed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            },\n            \"selectText\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Selects the text of the component's `value`.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"autofocus\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"enterkeyhint\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"inputmode\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledWatcher\"\n            }, {\n                \"propName\": \"max\",\n                \"methodName\": \"maxWatcher\"\n            }, {\n                \"propName\": \"min\",\n                \"methodName\": \"minWatcher\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"valueWatcher\"\n            }, {\n                \"propName\": \"icon\",\n                \"methodName\": \"updateRequestedIcon\"\n            }, {\n                \"propName\": \"type\",\n                \"methodName\": \"updateRequestedIcon\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=input.js.map\n"],"mappings":"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"}